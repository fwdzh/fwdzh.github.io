{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#what-can-i-say","title":"What can I say?","text":"<p>\u5927\u5bb6\u597d\u5440\uff0c\u6b22\u8fce\u5927\u5bb6\u8bbf\u95ee\u8fd9\u4e2a\u9875\u9762\u3002\u6211\u5c06\u968f\u673a\u5728\u8fd9\u91cc\u66f4\u65b0\u4e00\u4e9b\u5185\u5bb9\u3002\u3002\u3002</p> <p>\u611f\u89c9\u8fd8\u662f\u591a\u5199\u70b9\u535a\u5ba2\uff0c\u591a\u5b66\u70b9\u4e1c\u897f\uff0c\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u7684\u751f\u6d3b\uff0c\u5c31\u633a\u597d\u7684\u5427\u3002</p> <p>\u5176\u5b9e\u611f\u89c9\u6211\u5e76\u4e0d\u662f\u4ec0\u4e48\u80fd\u575a\u6301\u5199\u535a\u5ba2\u6216\u8005\u65e5\u8bb0\u7684\u4eba\u5462\u3002\u3002\u3002\ud83e\udd23\ud83e\udd23\ud83e\udd23\u4f46\u662f\u4e0d\u575a\u6301\u7684\u6b21\u6570\u591a\u4e86\uff0c\u4e5f\u80fd\u7d2f\u79ef\u5f88\u591a\u5185\u5bb9\uff0c\uff0c\uff0c\u53ea\u8981\u4e0d\u5220\u7684\u8bdd\u3002\u6162\u6162\u6765\u5c31\u597d\u4e86\u3002</p>"},{"location":"#_1","title":"\u6211\u4ee5\u540e\u518d\u4e5f\u4e0d\u4f1a\u5220\u535a\u5ba2\u4e86","text":"<p>\u4e4b\u524d\u5176\u5b9e\u7ecf\u5e38\u6709\u50cf\u8fd9\u6837\u5199\u70b9\u4e1c\u897f\uff0c\u4f46\u662f\u6211\u90fd\u5199\u4e00\u6bb5\u65f6\u95f4\u5c31\u4f1a\u5220\u535a\u5ba2\u6216\u8005\u6ce8\u9500\u8d26\u53f7\u4e86\u3002\u3002\u3002\u8fd9\u4e00\u6b21\u6211\u4e00\u5b9a\u4e0d\u4f1a\u90a3\u6837\u4e86\u3002</p> <p>\u8fd9\u4e2a\u53c8\u65b9\u4fbf\uff0c\u53c8\u6ca1\u6709\u5e7f\u544a\uff0c\u914d\u7f6e\u8fd8\u7b80\u5355\u3002\u800c\u4e14\u5c31\u7b97\u7535\u8111\u70b8\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u535a\u5ba2\u3002\u8fd9\u662f\u5f04\u5728github pages\u7684\uff0c\u672c\u5730\u90e8\u7f72\u73af\u5883\u53ea\u662f\u4e3a\u4e86\u53ef\u4ee5\u63d0\u524d\u9884\u89c8\u4e00\u4e0b\uff0c\u4f46\u662fpush\u5230github\u4e4b\u540e\uff0c\u4e5f\u662f\u7b49\u4e00\u5206\u949f\u6216\u8005\u66f4\u5feb\u9875\u9762\u5c31\u66f4\u65b0\u4e86\u3002\u5c31\u5f88\u597d\u3002</p> <p>\u800c\u4e14\u6211\u89c9\u5f97\u4e00\u5929\u79ef\u6512\u4e00\u70b9\u70b9\u5185\u5bb9\uff0c\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u4f1a\u975e\u5e38\u7684\u6050\u6016\u3002</p> <p>\u8fd9\u56de\u6211\u4e00\u5b9a\u4f1a\u5fcd\u4f4f\uff0c\u81ea\u5df1\u5199\u5f97\u518d\u70c2\u7684\u4e1c\u897f\uff0c\u4e5f\u4e0d\u8981\u5220\uff0c\u5c31\u4e00\u76f4\u7559\u7740\u3002\u53ef\u80fd\u5185\u5bb9\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\uff0c\u4f46\u662f\u53ef\u4ee5\u5e2e\u6211\u7559\u4f4f\u4e00\u4e9b\u4e1c\u897f\u3002\u4e5f\u662f\u4e00\u79cd\u6210\u957f\u5427\u3002</p>"},{"location":"index_1/","title":"Start","text":"<p>\u60f3\u5c3d\u91cf\u591a\u8bb0\u5f55\u4e00\u4e9b\u4e1c\u897f\uff0c \u8bc1\u660e\u6211\u5b58\u5728\u8fc7\u3002</p> <p>\u4e4b\u524d\u5199\u8fc7\u5f88\u591a\u4e86\uff0c\u4f46\u90fd\u611f\u89c9\u6ca1\u5565\u7528\uff0c\u4e5f\u786e\u5b9e\u6ca1\u5565\u7528</p>"},{"location":"index_1/#_1","title":"\u5e0c\u671b\u80fd\u591a\u4ea7\u751f\u4e00\u4e9b\u6709\u7528\u7684\u4e1c\u897f","text":"<p>\u53ef\u4ee5\u5e2e\u52a9\u6211\u81ea\u5df1\u8bb0\u4f4f\u66f4\u591a\u4e1c\u897f\uff0c \u8fd8\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u4eba\uff0c\u5206\u4eab\u4e00\u4e9b\u7ecf\u9a8c\u3002</p>"},{"location":"index_1/#_2","title":"\u5077\u5077\u522b\u4eba\u7684\u535a\u5ba2","text":"<p>\u7ecf\u5e38\u5c31\u662f\u770b\u8fc7\u5f88\u591a\u6709\u7528\u7684\u535a\u5ba2\uff0c\u5bf9\u6211\u5f88\u6709\u5e2e\u52a9\u7684\u3002 \u4f46\u662f\u4e0b\u6b21\u60f3\u627e\u5c31\u5f88\u96be\u627e\u4e86\uff0c\u6216\u8005\u6709\u7684\u6839\u672c\u518d\u4e5f\u627e\u4e0d\u5230\u4e86\u3002 \u5982\u679c\u6536\u85cf\u7684\u8bdd\uff0c\u4e5f\u5f88\u96be\u6574\u7406\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u65f6\u95f4\u957f\u4e86\u627e\u4e0d\u5230\u4e86\uff0c\u6216\u8005\u6587\u7ae0\u88ab\u5220\u4e86\u4e4b\u7c7b\u7684\u3002\u6240\u4ee5\u8f6c\u79fb\u5230\u81ea\u5df1\u8fd9\u8fb9\u53ef\u4ee5\u968f\u65f6\u65b9\u4fbf\u67e5\u770b\u3002</p>"},{"location":"index_1/#markdown","title":"\u8fd9\u4e2a\u9875\u9762\u80fd\u8ba9\u5199markdown\u53d8\u5f97\u66f4\u6709\u610f\u601d","text":"<p>\u672c\u6765\u5982\u679c\u4f60\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u5199markdown\uff0c\u53ea\u8981\u4f60\u4e0d\u53d1\u7ed9\u522b\u4eba\uff0c\u90a3\u4e48\u53ea\u6709\u4f60\u4e00\u4e2a\u4eba\u80fd\u770b\u89c1\u3002\u867d\u7136\u8fd9\u4e2apages\u5728\u8fd9\u65b9\u9762\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5c31\u662f\u4e0d\u4e00\u6837\u7684\u611f\u89c9\u3002 \u800c\u4e14\u65b9\u4fbf\u5bfc\u5165\u5230\u5176\u4ed6\u5e73\u53f0\uff0c\u8fd9\u4e2a\u4e3b\u9898\u5206\u7c7b\u6574\u7406\u5f88\u597d\u770b\uff0c\u5f88\u7b80\u6d01\u3002</p> <p>\u5e0c\u671b\u5927\u5bb6\u90fd\u53d8\u5f97\u66f4\u597d\u5440\uff01</p>"},{"location":"XCPC/Provincial/2024Sichuan/","title":"2024\u5e74\u56db\u5ddd\u7701\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b","text":"<p>2025-03-01 VP</p> <p>\u8fd9\u662f\u6211\u8fd9\u5b66\u671f\u7b2c\u4e00\u6b21\u6253\u5230\u56e2\u961f\u8d5b\uff0c\u4e5f\u662f\u4eca\u5e74\u7b2c\u4e00\u6b21\u3002\u53e6\u5916\u4e24\u4e2a\u5c0f\u4f19\u4f34\u5e94\u8be5\u662f\u4ee5\u524d\u4ece\u6765\u6ca1\u6253\u8fc7\u56e2\u961f\u8d5b\u3002\u6253\u4e86\u4e09\u5c0f\u65f6\u5de6\u53f3\uff0c\u4f461\u65f617\u5206\u4e4b\u540e\uff0c\u5c31\u6ca1\u6709AC\u8fc7\u4e86\u3002\u8fd8\u884c\u5566\uff0c\u6162\u6162\u6765\uff0c\u5148\u4e00\u5468\u4e00\u6b21\u56e2\u961f\u8d5b\u4fdd\u6301\u4e0b\u611f\u89c9\u597d\u4e86\u3002</p>"},{"location":"XCPC/Provincial/2024Sichuan/#2024","title":"2024\u56db\u5ddd\u7701\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b","text":"<p>\u6bd4\u8d5b\u94fe\u63a5: https://codeforces.com/gym/105222</p> <p>\u699c\u5355\u94fe\u63a5: https://board.xcpcio.com/provincial-contest%2F2024%2Fsichuan?group=official</p> <p>\u8d5b\u65f6\u53ea\u901a\u8fc7\u4e86\u4e09\u9898\uff1a E H L</p> <p>H \u53ef\u80fd\u7a0d\u5fae\u8981\u63a8\u4e00\u4f1a\uff0cE \u5355\u7eaf\u662f\u9898\u76ee\u63cf\u8ff0\u975e\u5e38\u8ff7\u60d1\u3002\u5982\u679c\u6ca1\u6709\u7406\u89e3\u95ee\u9898\uff0c\u611f\u89c9\u4e5f\u662f\u5341\u591a\u5206\u949f\u80fdAC\u7684\u3002L \u5c31\u6392\u4e2a\u5e8f\u5c31\u884c\u3002\u3002\u3002\u8fd9\u6b21\u771f\u5c31\u53ea\u7b7e\u4e86\u4e2a\u5230\u3002\u540e\u9762\u7684\u5199\u4e0d\u4e86\u4e86\u3002</p>"},{"location":"XCPC/Provincial/2024Sichuan/#b","title":"B","text":"<p>\u75af\u72c2\u5206\u7c7b\u8ba8\u8bba\u3002\u3002\u3002</p> <p>\u8981\u975e\u5e38\u4ed4\u7ec6\u624d\u884c\uff0c\u5343\u4e07\u4e0d\u80fd\u5199\u5f97\u70e6\u3002VP\u672c\u6765\u5c31\u5e94\u8be5\u5199\u51fa\u6765\u7684\uff0c\u65e9\u77e5\u9053\u7a0d\u5fae\u591a\u770b\u4e00\u4f1a\uff0c\u597d\u597d\u4ed4\u7ec6\u8ba8\u8bba\u4e00\u4e0b\uff0c\u60f3\u4e00\u4e0b\u5c31\u597d\u4e86\u3002</p> <p>\u73b0\u5728\u518d\u770b\u5168\u90e8\u91cd\u65b0\u5199\uff0c\u4e00\u5c0f\u65f6WA\u4e8611\u6b21\u7136\u540e\u8fc7\u4e86\u3002</p> <pre><code>void solve()\n{\n    int ans = 0;\n    array&lt;int, 6&gt; a;\n    for (int i = 1; i &lt;= 5; i++)\n        cin &gt;&gt; a[i];\n    // 0 0 3 0 3\n    ans += a[3] / 2, a[3] %= 2;\n    // \u5982\u679c4\u9700\u89813\uff0c\u90a3\u4e482\u80af\u5b9a\u6ca1\u4e86\u3002\n    {\n        int mn = min(a[2], a[4]);\n        ans += mn, a[2] -= mn, a[4] -= mn;\n    }\n    // 3 \u7ed9\u81ea\u5df1\u7528\u80af\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u5269\u4e0b\u7684\u5148\u4e0d\u8981\u6025\u7740\u53d8\u62101\u5427\u3002\u8bf4\u4e0d\u5b9a\u80fd 1 2 3\u52a0\u4e00\u8d77\n    {\n        int mn = min(a[1], a[5]);\n        ans += mn, a[1] -= mn, a[5] -= mn;\n\n        mn = min(a[3], a[5]);\n        ans += mn, a[3] -= mn, a[5] -= mn;\n\n        mn = min(a[2], a[5]);\n        ans += mn, a[2] -= mn, a[5] -= mn;\n\n        mn = min(a[4], a[5]);\n        ans += mn, a[4] -= mn, a[5] -= mn;\n\n        // 5 \u80af\u5b9a\u4e00\u4e2a\u90fd\u6ca1\u6709\u4e86 \u6216\u8005\u5176\u4ed6\u7684\u4e00\u4e2a\u90fd\u6ca1\u6709\u4e86\n\n        // \u597d\u5427 \uff0c5\u53ef\u80fd\u8fd8\u6709\n        ans += a[5] / 2, a[1] += a[5] % 2, a[5] = 0;\n    }\n    // 3 2 1 \u4e00\u8d77 \uff0c\u8fd8\u662f\u7ed94\uff1f\n\n    // 1 2 3\u7ec4\u4e00\u8d77\u7684\u8bdd\u4e00\u5b9a\u662f\u9700\u89811\u7684\uff0c\u6700\u597d\u5148\u522b\u628a1\u7528\u5b8c\n\n    {\n        // \u5982\u679c\u8fd8\u67094\uff0c\u90a3\u4e48\u80af\u5b9a\u6ca1\u67092\u4e86\uff0c\u53ea\u5269\u4e0b1\n        int mn = min(a[1] / 2, a[4]);\n        ans += mn, a[1] -= 2 * mn, a[4] -= mn;\n        // \u5982\u679ca[4]\u8fd8\u6709\uff0c\u90a3\u4e48\u80af\u5b9a\u6700\u591a1\u4e2a1\n\n        ans += a[4] / 3, a[4] %= 3;\n        if (a[4] == 2) {\n            if (a[1]) {\n                a[1]--, a[4] = 0, ans++;\n            } else if (a[3]) {\n                a[3]--, a[4] = 0, ans++;\n            } else {\n                a[1] += a[4], a[4] = 0;\n            }\n        } else if (a[4] == 1) {\n            assert(a[1] &lt;= 1);\n            if (a[3] &amp;&amp; a[1]) {\n                a[3]--, a[1]--, a[4]--, ans++;\n            } else {\n                a[1] += a[4], a[4] = 0;\n            }\n        }\n    }\n\n    if (a[3]) {\n        // 2 \u73b0\u5728\u53ea\u80fd\u7ed9 3 \u7528\u4e86\n        if (a[2] &amp;&amp; a[1]) {\n            ans++, a[2]--, a[1]--, a[3] = 0;\n        } else if (a[1] &gt;= 3) {\n            a[1] -= 3, ans++, a[3] = 0;\n        } else if (a[2] &gt;= 2) {\n            a[2] -= 2, a[3] = 0, ans++;\n        } else {\n            a[1] += a[3], a[3] = 0;\n        }\n        // \u5982\u679c\u8fd9\u91cc\u4e0d\u80fd\u6d88\u80173\uff0c\u90a3\u4e48\u8f6c\u6362\u62101\n    }\n    {\n        // \u53ef\u80fd\u8fd8\u67092\n        ans += a[2] / 3, a[2] %= 3;\n    }\n    {\n        // \u53ef\u80fd\u8fd8\u4f1a\u52691\u548c2\n        if (a[2] == 1) {\n            if (a[1] &gt;= 4) {\n                ans++, a[2] = 0, a[1] -= 4;\n            }\n        } else if (a[2] == 2) {\n            if (a[1] &gt;= 2) {\n                ans++, a[2] = 0, a[1] -= 2;\n            }\n        }\n        // \u53ea\u52691\u4e86\u5e94\u8be5\n        ans += a[1] / 6, a[1] %= 6;\n    }\n    // for (int i = 1; i &lt;= 5; i++)\n    //     cerr &lt;&lt; a[i] &lt;&lt; \" \\n\"[i == 5];\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"XCPC/Provincial/2024Sichuan/#e","title":"E","text":"<p>\u8981\u7528 L \u5f62\u6765\u586b\u6ee1\u7f51\u683c\u3002\u4f46\u662f\u5e76\u975e\u586b\u6ee1\u3002\u5b83\u9898\u76ee\uff0c\u6211\u4eec\u660e\u660e\u770b\u7740\u662f\u5982\u679c\u8fd8\u5269\u4e00\u4e2a\u683c\u5b50\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u4e14\u6ca1\u6709\u8986\u76d6\u7684\u683c\u5b50\u5728\u7b2c\u4e00\u884c\u7b2c \\(m\\) \u5217\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e5f\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u8bf4\u7684\u662f\u5fc5\u987b\u7a7a\u4e00\u4e2a\u683c\u5b50\u4e0d\u88ab\u8986\u76d6\uff0c\u4e14\u5fc5\u987b\u5728\u7b2c  \\(1\\) \u884c\u7b2c \\(m\\) \u5217\u7a7a\u7740\u3002</p> <p>\u90a3\u4e48\u5c31\u5f88\u597d\u5224\u65ad\u4e86\u3002\u76f4\u63a5\u5c31\u68c0\u67e5\u662f\u4e0d\u662f\u4e09\u4e2a\u4e00\u7ec4\uff0c\u662f\u4e0d\u662f\u6bcf\u4e2a\u683c\u5b50\u90fd\u88ab\u8986\u76d6\u3002</p> <p>\u5e78\u597d\u6709\u6837\u4f8b\u7b2c\u4e8c\u4e2a\uff0c\u4e0d\u7136\u771f\u770b\u4e0d\u51fa\u6765\u3002</p> <pre><code>constexpr int N = 500*500;\nint cnt[N+1];\n\nvoid solve()\n{\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vector&lt;string&gt;s(n);\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;s[i];\n    }\n    vector&lt;vector&lt;int&gt;&gt;C(n+1,vector&lt;int&gt;(m+1));\n    int tot=0;\n    for(int i=0;i&lt;n;i++)\n        for(int j=0;j&lt;m;j++){\n            if(s[i][j]=='C'){\n                C[i][j]=++tot;\n                cnt[tot]=0;\n                if(i-1&gt;=0&amp;&amp;s[i-1][j]=='D'){\n                    C[i-1][j]=tot;\n                }\n                if(i+1&lt;n&amp;&amp;s[i+1][j]=='U'){\n                    C[i+1][j]=tot;\n                }\n                if(j-1&gt;=0&amp;&amp;s[i][j-1]=='R'){\n                    C[i][j-1]=tot;\n                }\n                if(j+1&lt;m&amp;&amp;s[i][j+1]=='L'){\n                    C[i][j+1]=tot;\n                }\n            }\n        }\n    // cout&lt;&lt;'\\n';\n    for(int i=0;i&lt;n;i++)\n        for(int j=0;j&lt;m;j++){\n            // cout&lt;&lt;C[i][j]&lt;&lt;\" \\n\"[j+1==m];\n            cnt[C[i][j]]++;\n        }\n    int all=0;\n    for(int i=1;i&lt;=tot;i++){\n        // cerr&lt;&lt;cnt[i]&lt;&lt; '\\n';\n        all+=cnt[i];\n        if(cnt[i]!=3){\n            cout&lt;&lt;\"No\\n\";\n            return;\n        }\n    }\n    // cerr&lt;&lt;all&lt;&lt;'\\n';\n    // if(all==n*m){\n    //     cout&lt;&lt;\"Yes\\n\";\n    // }else \n    if(all==n*m-1&amp;&amp;s[0][m-1]=='.')\n        cout&lt;&lt;\"Yes\\n\";\n    else\n        cout&lt;&lt;\"No\\n\";\n}\n</code></pre>"},{"location":"XCPC/Provincial/2024Sichuan/#f","title":"F","text":"<p>\u8fd8\u771f\u4e0d\u96be\uff0c\u4e5f\u662f\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u884c\u3002</p> <p>\u4e0b\u6b21\u6bd4\u8d5b\u771f\u7684\u5f97\u597d\u597d\u601d\u8003\uff0c\u8fd9\u573a\u5176\u5b9e\u53ef\u5199\u9898\u8fd8\u633a\u591a\u7684\u6765\u7740\u3002BF\u5982\u679c\u591a\u60f3\u4f1a\u662f\u80fd\u51fa\u7684\u3002\u8865\u8fd92\u9898\u90fd\u6ca1\u770b\u9898\u89e3\uff0c\u611f\u89c9\u786e\u5b9e\u4e0d\u96be\u7684\u3002</p> <p>\u8fd9\u9898\u6211\u53ea\u641c\u4e86\u4e00\u4e0b\u600e\u4e48\u5224\u65ad\u76f4\u7ebf\u8fc7\u77e9\u5f62\u3002\u3002\u3002\u5176\u5b9e\u5411\u91cf\u600e\u4e48\u8868\u793a\u76f4\u7ebf\u65b9\u7a0b\u4e5f\u4e0d\u592a\u8bb0\u5f97\u3002</p> <p>\u5047\u5982\u65b9\u5411\u5411\u91cf\u662f \\((vx,vy)\\) \u90a3\u4e48\u76f4\u7ebf\u65b9\u7a0b\u662f \\(vx(y-y_0)=vy(x-x_0)\\) \uff0c \\((x_0,y_0)\\) \u4e3a\u8d77\u70b9\u4f4d\u7f6e\u3002\u5224\u65ad\u4e24\u70b9\u662f\u5426\u5728\u76f4\u7ebf\u540c\u4fa7\uff0c\u53ea\u9700\u8981\u770b\u5e26\u5165\u76f4\u7ebf\u65b9\u7a0b\u540e\u7ed3\u679c\u7684\u6b63\u8d1f\u3002\u540c\u53f7\u5219\u540c\u4fa7\uff0c\u7b49\u4e8e0\u5219\u5728\u76f4\u7ebf\u4e0a\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u5706\u5fc3\u5728\u77e9\u5f62\u4e2d\u7684\u5408\u6cd5\u8303\u56f4\uff0c\u4e5f\u5c31\u662f \\((lx+r,ly+r)\\) \u548c \\((rx-r,ry-r)\\) \u4e4b\u95f4\u7684\u77e9\u5f62\u533a\u57df\u3002\u6211\u4eec\u53ea\u9700\u8981\u770b\u5706\u5fc3\u662f\u5426\u4f1a\u7ecf\u8fc7\u8fd9\u4e2a\u533a\u57df\u5c31\u884c\u4e86\u3002</p> <p>\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u548c\u77e9\u5f62\u7684\u6bcf\u6761\u8fb9\u76f8\u4ea4\u3002\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06\u56db\u4e2a\u70b9\u5e26\u5165\u76f4\u7ebf\u65b9\u7a0b\uff0c\u5224\u65ad\u662f\u5426\u56db\u4e2a\u70b9\u90fd\u4f4d\u4e8e\u76f4\u7ebf\u540c\u4fa7\u3002\u4f46\u662f\u8981\u6ce8\u610f\u7684\u8fd9\u4e2a\u76f4\u7ebf\u662f\u6709\u65b9\u5411\u7684\uff0c\u4e5f\u8bb8\u4f1a\u5f80\u53cd\u65b9\u5411\u8d70\uff0c\u4f46\u662f\u5224\u7684\u80fd\u76f8\u4ea4\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7279\u5224\u4e00\u4e0b\u76f4\u63a5\u8f93\u51fa\u3002</p> <pre><code>void solve()\n{\n    int x, y, r, vx, vy;\n    cin &gt;&gt; x &gt;&gt; y &gt;&gt; r &gt;&gt; vx &gt;&gt; vy;\n    // \u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u5706\u5fc3\u653e\u5728\u54ea\u4e2a\u77e9\u5f62\u53ef\u4ee5\u4f7f\u5f97\u6ee1\u8db3\u6761\u4ef6\u3002\n    // \u7136\u540e\u5224\u65ad\u5706\u5fc3\u7684\u8fd0\u52a8\u8f68\u8ff9\u662f\u5426\u4f1a\u7ecf\u8fc7\u8fd9\u4e2a\u533a\u57df\u3002\n    // \u53ef\u4ee5\u5c06\u9876\u70b9\u90fd\u5e26\u5165\u76f4\u7ebf\u65b9\u7a0b\uff0c\u770b\u662f\u5426\u90fd\u5728\u76f4\u7ebf\u540c\u4fa7\u3002\n    // \u8fd0\u52a8\u8def\u5f84\u53ef\u4ee5\u8868\u793a\u4e3a vx * (Y-y) = vy * (X-x)\n\n    // \u5706\u5fc3\u9700\u8981\u5728\n    int lx, ly, rx, ry;\n    cin &gt;&gt; lx &gt;&gt; ly &gt;&gt; rx &gt;&gt; ry;\n    // \u5706\u5fc3\u5fc5\u987b\u5728 (lx+r,ly+r) \u548c (rx-r,ry-r) \u4e4b\u95f4\n    if (rx - lx &lt; 2 * r || ry - ly &lt; 2 * r) {\n        cout &lt;&lt; \"No\\n\";\n        return;\n    }\n    // \u7531\u4e8e\u662f\u6709\u65b9\u5411\u7684 \u6211\u4eec\u76f4\u63a5\u6765\u7b80\u5355\u5224\u65ad\u4e00\u4e0b\u4f1a\u4e0d\u4f1a\u7ecf\u8fc7\n    if (x &gt; rx - r || y &gt; ry - r) {\n        if (vx &gt;= 0 &amp;&amp; vy &gt;= 0) {\n            cout &lt;&lt; \"No\\n\";\n            return;\n        }\n    }\n    if (y &gt; ry - r || x &lt; lx + r) {\n        if (vx &lt;= 0 &amp;&amp; vy &gt;= 0) {\n            cout &lt;&lt; \"No\\n\";\n            return;\n        }\n    }\n    if (y &lt; ly + r || x &lt; lx + r) {\n        if (vx &lt;= 0 &amp;&amp; vy &lt;= 0) {\n            cout &lt;&lt; \"No\\n\";\n            return;\n        }\n    }\n    if (y &lt; ly + r || x &gt; rx - r) {\n        if (vx &gt;= 0 &amp;&amp; vy &lt;= 0) {\n            cout &lt;&lt; \"No\\n\";\n            return;\n        }\n    }\n    auto calc = [&amp;](int X, int Y) {\n        return 1LL * vx * (Y - y) - 1LL * vy * (X - x);\n    };\n    set&lt;long long&gt; st;\n    st.insert(calc(lx + r, ly + r));\n    st.insert(calc(lx + r, ry - r));\n    st.insert(calc(rx - r, ry - r));\n    st.insert(calc(rx - r, ly + r));\n    if (((*st.begin() &lt; 0) &amp;&amp; (*st.rbegin() &gt; 0)) || st.contains(0))\n        cout &lt;&lt; \"Yes\\n\";\n    else\n        cout &lt;&lt; \"No\\n\";\n}\n</code></pre>"},{"location":"XCPC/Provincial/2024Sichuan/#h","title":"H","text":"<p>\u7a0d\u5fae\u63a8\u4e00\u4e0b\u524d\u9762\u51e0\u4e2a\u554a\uff0c\u7136\u540e\u5c31\u53ef\u4ee5 guess \u4e86\uff0c\u627e\u89c4\u5f8b\u3002</p> <pre><code>//1 G ,1\n//2 G ,2\n//3 Y ,1\n//4 G ,2\n//5 G ,3 , 3 Y , 1 G\n//6 Y ,2\n//7 G ,3\n//8 G ,4 \n//9 Y ,3 , 7 Y , 3\n//10 G\n//11 G\n</code></pre> <p>\u8fd9\u662f\u6211\u4eec\u63a8\u7684\uff0c\u5c31\u662f \\(n\\) \u4e3a\u591a\u5c11\uff0c\u7136\u540e\u8c01\u80fd\u8d62\uff0c\u80fd\u62ff\u5230\u591a\u5c11\u4e2a\u77f3\u5934\u3002</p> <p>\u5199\u8fd9\u4e48\u51e0\u4e2a\u5927\u6982\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u4e00\u5b9a\u662f\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a\u8c01\u80fd\u8d62\u7684\u3002\u4e24\u4e2a\u4eba\u90fd\u5e0c\u671b\u80fd\u62ff\u8d70\u5c3d\u53ef\u80fd\u591a\u7684\u77f3\u5934\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u600e\u4e48\u9009\u90fd\u662f\u8f93\uff0c\u90a3\u80af\u5b9a\u5c31\u662f\u62ff 2 \u4e2a\u3002</p> <p>\u524d\u9762\u63a8\u7684\u5c31\u662f\uff0c\u663e\u7136 1 \u548c 2 \u4e2a\u77f3\u5934\u65f6\uff0c\u5148\u624b\u5fc5\u8d62\u3002\u5982\u679c\u662f 3 \u4e2a\u77f3\u5934\uff0c\u90a3\u4e48\u5148\u624b\u7684\u4eba\u4e00\u5b9a\u4f1a\u628a\u4ed6\u8f6c\u6362\u6210 2 \u6216 1\uff0c\u4e14\u53e6\u4e00\u4e2a\u4eba\u5148\u624b\uff0c\u4e8e\u662f\u53d8\u6210\u53e6\u4e00\u4e2a\u4eba\u7684\u5fc5\u80dc\u72b6\u6001\u3002\u6240\u4ee5\u5c31\u591a\u63a8\u51e0\u4e2a\u5c31\u53ef\u4ee5\u731c\u5566\u3002</p> <pre><code>void solve()\n{\n    long long n;\n    cin&gt;&gt;n;\n    long long ans=(n-1)/3+1;\n    if(n%3==0){\n        cout&lt;&lt;\"1 \";\n        cout&lt;&lt;ans&lt;&lt;'\\n';\n    }else{\n        cout&lt;&lt;\"0 \";\n        if(n%3==2) cout&lt;&lt;ans+1&lt;&lt;'\\n';\n        else cout&lt;&lt;ans&lt;&lt;'\\n';\n    }\n}\n</code></pre>"},{"location":"XCPC/Provincial/2024Sichuan/#l","title":"L","text":"<p>\u8fd9\u4e2a\u5c31\u662f\u5f88\u7b7e\u5230\u5566\u3002</p> <p>\u5c31\u770b\u628a\u54ea\u4e2a\u653e\u5230\u7b2c\u4e00\u4e2a\u9505\uff0c\u54ea\u4e2a\u653e\u7b2c\u4e8c\u4e2a\u9505\u3002</p> <p>\u7136\u540e\u6309\u503c\u6392\u5e8f\u8f93\u51fa\u4e0b\u6807\u5373\u53ef\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;pair&lt;int, int&gt;&gt; v1, v2;\n    for (int i = 1; i &lt;= n; i++) {\n        int a, b, c, d;\n        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;\n        if (c == d) {\n            if (a &lt; b) {\n                v1.push_back({ a, i });\n            } else {\n                v2.push_back({ b, i });\n            }\n        } else if (c)\n            v1.push_back({ a, i });\n        else\n            v2.push_back({ b, i });\n    }\n    sort(v1.begin(),v1.end(),[](pair&lt;int,int&gt;x,pair&lt;int,int&gt;y){\n        return x.first&lt;y.first;\n    });\n    sort(v2.begin(),v2.end(),[](pair&lt;int,int&gt;x,pair&lt;int,int&gt;y){\n        return x.first&lt;y.first;\n    });\n    cout&lt;&lt;v1.size()&lt;&lt;' ';\n    for(auto [_,i]:v1)\n        cout&lt;&lt;i&lt;&lt;\" \";\n    cout&lt;&lt;'\\n';\n    cout&lt;&lt;v2.size()&lt;&lt;' ';\n    for(auto [_,i]:v2)\n        cout&lt;&lt;i&lt;&lt;\" \";\n}\n</code></pre>"},{"location":"algorithm/graph/BipartiteGraph/","title":"\u4e8c\u5206\u56fe","text":""},{"location":"algorithm/graph/BipartiteGraph/#2025220","title":"2025\u5e742\u670820\u65e5","text":""},{"location":"algorithm/graph/BipartiteGraph/#_1","title":"\u4e8c\u5206\u56fe","text":"<p>\u4e8c\u5206\u56fe(Bipartite graph) \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\uff0c\u53ef\u4ee5\u5c06\u56fe\u91cc\u7684\u6240\u6709\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408 \\(V1\\) \uff0c \\(V2\\) \uff0c\u8fd9\u5f20\u56fe\u4e0a\u7684\u6240\u6709\u8fb9\u90fd\u662f\u4e00\u4e2a\u70b9\u5728 \\(V1\\) \u4e2d \uff0c\u4e00\u4e2a\u70b9\u5728 \\(V2\\) \u4e2d\u3002</p>"},{"location":"algorithm/graph/BipartiteGraph/#_2","title":"\u6027\u8d28","text":"<p>\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u79cd\u7684\u70b9\u5206\u522b\u67d3\u6210\u9ed1\u8272\u548c\u767d\u8272\uff0c\u4e8c\u5206\u56fe\u79cd\u7684\u6bcf\u4e00\u6761\u8fb9\u4e00\u5b9a\u90fd\u662f\u8fde\u63a5\u4e00\u4e2a\u9ed1\u8272\u70b9\u548c\u4e00\u4e2a\u767d\u8272\u70b9\u3002\u5373\u4e8c\u5206\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u7684\u76f8\u90bb\u70b9\u4e00\u5b9a\u90fd\u662f\u989c\u8272\u76f8\u53cd\u7684\u3002</p> <p>\u4e8c\u5206\u56fe\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7 DFS \u6216 BFS \u6765\u5224\u5b9a\u4e8c\u5206\u56fe\u3002</p>"},{"location":"algorithm/graph/BipartiteGraph/#_3","title":"\u5e94\u7528","text":"<p>\u4e8c\u5206\u56fe\u6027\u8d28</p> <p>CF1949I</p> <p>\u8fd9\u4e2a\u5c31\u662f\u53bb\u5224\u5b9a\u6bcf\u4e2a\u8fde\u901a\u5757\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi x(n+1),y(n+1),r(n+1);\n    for(int i=1;i&lt;=n;i++)\n        cin&gt;&gt;x[i]&gt;&gt;y[i]&gt;&gt;r[i];\n    vector&lt;vi&gt;adj(n+1,vi());\n    auto calc=[&amp;](int x){\n        return 1ll*x*x;\n    };\n    for(int i=1;i&lt;=n;i++)\n        for(int j=i+1;j&lt;=n;j++){\n            if(calc(x[i]-x[j])+calc(y[i]-y[j])==calc(r[i]+r[j])){\n                adj[i].push_back(j);\n                adj[j].push_back(i);\n            }\n        }\n    vi s(n+1,-1);\n    for(int i=1;i&lt;=n;i++){\n        if(s[i]!=-1) continue;\n        bool ok=true;\n        int x=0,y=0;\n        auto dfs=[&amp;](auto &amp;&amp;self,int u)-&gt;void{\n            if(s[u]) x++;\n            else y++;\n            // cerr&lt;&lt;u&lt;&lt;'\\n';\n            for(auto v:adj[u]){\n                if(s[v]!=-1){\n                    if(s[v]==s[u]) ok=false;\n                    continue;\n                }\n                s[v]=s[u]^1;\n                self(self,v);\n            }\n        };\n        s[i]=0;\n        dfs(dfs,i);\n        if(ok&amp;&amp;x!=y){\n            cout&lt;&lt;\"YES\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"NO\\n\";\n}\n</code></pre>"},{"location":"algorithm/graph/BipartiteGraph/#_4","title":"\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d","text":"<p>\u4ece\u4e8c\u5206\u56fe\u91cc\u9009\u51fa\u82e5\u5e72\u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u90fd\u4e0d\u76f8\u4ea4\uff0c\u4e14\u8fb9\u7684\u6570\u91cf\u6700\u591a\uff0c\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002</p> <p>P3386 \u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d - \u6d1b\u8c37</p> <pre><code>void solve()\n{\n    int n,m,e;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;e;\n    vector&lt;vi&gt;adj(n+1,vi());\n    for(int i=1;i&lt;=e;i++){\n        int u,v;\n        cin&gt;&gt;u&gt;&gt;v;\n        adj[u].push_back(v);\n    }\n    vector&lt;int&gt;match(m+1);\n    int ans=0;\n    for(int i=1;i&lt;=n;i++){\n        vector&lt;bool&gt;sel(m+1);//\u8bb0\u6709\u6ca1\u6709\u88ab\u9009\u8fc7\n        auto dfs=[&amp;](auto &amp;&amp;self,int u)-&gt;bool{\n            for(auto v:adj[u]){\n                if(!sel[v]){\n                    sel[v]=true;\n                    if(!match[v]||self(self,match[v])){\n                        match[v]=u;\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        if(dfs(dfs,i))\n            ans++;\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre> <p>\u9009\u53d6\u5de6\u8fb9\u4e00\u4e2a\u70b9\uff0c\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u53f3\u4fa7\u7684\u70b9\u548c\u5b83\u5339\u914d\u3002\u5982\u679c\u5df2\u7ecf\u5339\u914d\uff0c\u5219\u770b\u80fd\u4e0d\u80fd\u8ba9\u5b83\u5df2\u5339\u914d\u7684\u70b9\u53bb\u5c1d\u8bd5\u5339\u914d\u522b\u7684\u70b9\uff0c\u5982\u679c\u53ef\u4ee5\u5339\u914d\uff0c\u90a3\u4e48\u76f4\u63a5\u7b54\u6848+1\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u53eb <code>\u5308\u7259\u5229\u7b97\u6cd5</code> \uff0c\u6bcf\u6b21\u53bb\u627e\u589e\u5e7f\u8def\u5f84\u3002</p>"},{"location":"algorithm/graph/BipartiteGraph/#_5","title":"...","text":""},{"location":"algorithm/numbertheory/basic/","title":"\u6570\u8bba\u57fa\u7840","text":"<p>\u8bb0\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u6027\u8d28\u4e4b\u7c7b\u7684\uff0c\u65b9\u4fbf\u81ea\u5df1\u4e4b\u540e\u67e5\u770b\uff0c\u56e0\u4e3aoi-wiki\u8fd9\u79cd\uff0c\u867d\u7136\u5185\u5bb9\u5f88\u5168\uff0c\u4f46\u662f\u5927\u90e8\u5206\u6211\u90fd\u4e0d\u4f1a\u3002\u81ea\u5df1\u770b\u4e00\u70b9\u8bb0\u4e00\u70b9\u4e5f\u597d\u3002</p>"},{"location":"algorithm/numbertheory/basic/#_1","title":"\u6570\u8bba\u57fa\u7840","text":""},{"location":"algorithm/numbertheory/basic/#_2","title":"\u6574\u9664","text":"<p>\u5176\u5b9e\u6211\u6709\u65f6\u5019\u90fd\u4e0d\u592a\u8bb0\u5f97\u6574\u9664\u7b26\u53f7\u90a3\u4e2a\uff0c\u54ea\u4e2a\u662f\u88ab\u9664\u6570\u90a3\u4e2a\u662f\u9664\u6570...</p> <p>\\(a|b\\) \u8868\u793a\uff0c\\(a\\) \u53ef\u4ee5\u6574\u9664 \\(b\\) \uff0c\u5373\u5b58\u5728 \\(q\\) \u4f7f\u5f97 \\(b=aq\\) \u3002</p> <p>\\(b\\) \u662f \\(a\\) \u7684\u500d\u6570\uff0c\\(a\\) \u662f \\(b\\) \u7684\u7ea6\u6570\u3002</p>"},{"location":"algorithm/numbertheory/basic/#_3","title":"\u6700\u5927\u516c\u7ea6\u6570","text":"<p>\u6700\u5927\u516c\u7ea6\u6570(greatest common divisor)\uff0c\u7b80\u79f0gcd\u3002</p> <p>\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u6574\u6570\u62e5\u6709\u7684\u5171\u540c\u7ea6\u6570\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u3002</p> <p>\\(a,b,c\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\u8bb0\u4e3a \\((a,b,c)\\) \uff0c\u6700\u5c0f\u516c\u500d\u6570\u8bb0\u4e3a \\([a,b,c]\\)\u3002</p>"},{"location":"algorithm/numbertheory/basic/#_4","title":"\u8f97\u8f6c\u76f8\u9664\u6cd5","text":"<p>\u6211\u597d\u50cf\u8fd8\u662f\u4e0d\u4f1a\u8bc1\u660e\u8fd9\u4e2a\u6765\u7740\u3002\u3002\u3002</p> <p>\\(gcd(a,b)=g\\) \uff0c\u90a3\u4e48 \\(gcd(a,b-a)=g\\) \u3002</p> <p>\u6216\u8005\u8bf4\u56e0\u4e3a\u540e\u9762\u7684\u7b49\u4e8e \\(g\\) \uff0c\u6240\u4ee5\u524d\u9762\u7684\u7b49\u4e8e \\(g\\) ?</p> <p>\u8bbe \\(a&lt;b\\) ,  \\(gcd(a,b)=g\\) , \\(a=xg\\) , \\(b=yg\\) \u3002</p> <p>\u90a3\u4e48 \\(gcd(x,y)=1\\) , \u6240\u4ee5 \\(gcd(x,y-x)=1\\) \uff0c\u989d\uff0c\u8fd9\u4e0d\u8fd8\u662f\u8f97\u8f6c\u76f8\u9664\u6cd5\u5417\u3002\u3002\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u53c8\u662f\u548b\u8bc1\u660e\u7684\u5462\u3002\u3002\u3002\u6211\u8bb0\u5f97\u6709\u4e2a\u5565\u662f\u8ddf\u4e92\u7d20\u6709\u5173\u7684\u3002\u3002\u3002</p>"},{"location":"algorithm/numbertheory/basic/#__gcd","title":"__gcd()","text":"<pre><code>  template&lt;typename _EuclideanRingElement&gt;\n    _GLIBCXX20_CONSTEXPR\n    _EuclideanRingElement\n    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n    {\n      while (__n != 0)\n    {\n      _EuclideanRingElement __t = __m % __n;\n      __m = __n;\n      __n = __t;\n    }\n      return __m;\n    }\n</code></pre>"},{"location":"cp_solving/1/","title":"_1","text":""},{"location":"cp_solving/1/#2025","title":"2025\u5e74","text":"<p>2\u67088\u65e5</p>"},{"location":"cp_solving/1/#4c","title":"\u725b\u5ba2\u5bd2\u50474C","text":"<p>\u8fd9\u662f\u600e\u4e48\u60f3\u5230\u7684... \u4e3a\u4ec0\u4e48\u6211\u60f3\u4e0d\u5230\u5462\u3002\u3002\u3002</p> <p>\u6211\u90fd\u6ca1\u6709\u60f3\u5230\u8fc7\u5982\u679c\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u90a3\u4e48 <code>01</code> \u548c <code>10</code> \u7684\u6570\u91cf\u4e00\u5b9a\u76f8\u540c\u3002\u3002\u3002</p> <p>\u8fd9\u4e2a\u600e\u4e48\u60f3\u5230\u5462\uff1f\uff1f\uff1f</p> <p><code>101010</code> \u50cf\u8fd9\u6837\u7684\uff0c\u5176\u5b9e <code>01</code> \u548c <code>10</code> \u7684\u6570\u91cf\u5c31\u4f1a\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u6700\u540e\u52a0\u4e00\u4e2a <code>1</code> \u5c31\u80fd\u6570\u91cf\u4e00\u6837\u4e86\uff0c\u662f\u53ef\u4ee5\u53d1\u73b0\u662f\u5934\u5c3e\u662f\u5426\u76f8\u540c\u624d\u4f1a\u5f71\u54cd\uff0c\u4e2d\u95f4\u7684\u5b57\u7b26\u662f\u4ec0\u4e48\u90fd\u662f\u65e0\u6240\u8c13\u7684\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u90a3\u4e48\u4e2d\u95f4\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u53cd\u8f6c\u8fc7\u6765\u90fd\u662f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\u3002\u597d\u5427\u3002\u3002\u3002</p>"},{"location":"cp_solving/1/#4d","title":"\u725b\u5ba2\u5bd2\u50474D","text":"<p>\u8001\u5b9e\u8bf4\u6211\u771f\u6709\u70b9\u8fd8\u662f\u6ca1\u770b\u61c2\u9898\u89e3\u3002\u3002\u3002</p> <p>\u6211\u4eec\u4f1a\u5148\u62ff\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f4\u63a5\u5339\u914d\uff0c\u7136\u540e\u770b\u77ed\u7684\u8fd9\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u591a\u5c11\u6b21\u3002\u8fd9\u4e2a\u6570\u91cf\u8bb0\u4e3a <code>sum</code> \uff0c\u7136\u540e\u4e4b\u540e\u957f\u7684\u4f1a\u591a\u51fa\u4e00\u6bb5\u6765\u3002</p> <p>\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u4e24\u4e24\u4e4b\u95f4\u8fdb\u884c\u5339\u914d\uff0c\u5269\u5355\u4e2a\u5c31\u5f97\u989d\u5916\u82b1\u4e00\u6b21\u673a\u4f1a\uff0c\u8fd9\u4e2a\u6570\u91cf\u8bb0\u4e3a <code>ans</code> \u3002</p> <p>\u5982\u679c <code>ans</code> \\(\\le\\) <code>sum</code> \u90a3\u4e48\u53ef\u4ee5\u8c03\u6574\u4f4d\u7f6e\u4f7f\u5f97\u8fd9\u4e9b\u8981\u6539\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u4e00\u8d77\u6539\uff0c\u6240\u4ee5\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\u53ef\u4ee5\u53d8\u6210 <code>ans</code> \u6b21\u3002\u5426\u5219\u5c31\u662f \\(ans+\\frac{\\lfloor sum-ans \\rfloor}{2}\\) \u3002\u3002\u3002</p> <p>\u4e5f\u662f\u5dee\u4e0d\u591a\u7406\u89e3\u4e86\u3002\u3002\u3002</p> <p>2\u670816\u65e5</p> <p></p>"},{"location":"cp_solving/1/#cf1041c","title":"CF1041C","text":"<p>\u786e\u5b9e\u6c34\u9898\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5929\u90fd\u662f\u76f8\u5bf9\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8d2a\u5fc3\u5c31\u884c\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n,m,d;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;d;\n    d++;\n    vector&lt;pii&gt;a(n+1);\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i].fi;\n        a[i].se=i;\n    }\n    sort(ALL(a));\n    dbg(a);\n    set&lt;pii&gt;st;\n    st.insert({a[1].fi,a[1].se});\n    vi ans(n+1);\n    ans[a[1].se]=1;\n    int tot=1;\n    for(int i=2;i&lt;=n;i++){\n        dbg(st);\n        if(st.begin()-&gt;fi&gt;a[i].fi-d){\n            ans[a[i].se]=++tot;\n            st.insert({a[i].fi,a[i].se});\n        }else{\n            // auto [x,y]=*st.lower_bound({a[i].fi-d,0});\n            //\u54e6\u54e6\u662f\u8fd9\u91cc \u4e0a\u4e00\u884c\u5199\u9519\u4e86 \u56e0\u4e3a\u54b1\u4eec\u8fd9\u91cc\u662f\u9700\u8981\u627e\u7b2c\u4e00\u4e2a\u6bd4a[i].fi-d\u5c0f\u7684\u6570\u5b57\u3002\u3002\u3002\n\n            auto [x,y]=*prev(st.upper_bound({a[i].fi-d+1,0}));\n            //\u6ce8\u610f\u8fd9\u91cc\u5f97\u6539\u6210a[i].fi-d+1\u3002\u3002\u3002 \u591a\u6ce8\u610f\uff0c\u4e0d\u7136\u771f\u7684\u4e0d\u597d\u627e\u51fa\u6765\u5982\u679c\u770b\u4e0d\u4e86\u6837\u4f8b\n            ans[a[i].se]=ans[y];\n            st.erase({x,y});\n            st.insert({a[i].fi,a[i].se});\n        }\n    }\n    cout&lt;&lt;tot&lt;&lt;'\\n';\n    for(int i=1;i&lt;=n;i++)\n        cout&lt;&lt;ans[i]&lt;&lt;\" \\n\"[i==n];\n}\n</code></pre>"},{"location":"cp_solving/1/#cf698b","title":"CF698B","text":"<p>\u751a\u81f3\u662f\u4e00\u4e2a\u6d1b\u8c37\u84dd\u9898\uff0c\u4f46\u662fcf *1700\u3002</p> <p>\u4f46\u662f\u8fd9\u9898\u7ea6\u7b49\u4e8e\u6284\u7684\u9898\u89e3\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n\n    vi p(n+1);\n    int root=0;\n    for(int i=1;i&lt;=n;i++)\n        cin&gt;&gt;p[i];\n    for(int i=1;i&lt;=n;i++){\n        if(i==p[i]){\n            root=i;\n            break;\n        }\n    }\n    vi q(p);\n    vector&lt;int&gt;vis(n+1);\n    int tot=0;\n    auto dfs=[&amp;](auto &amp;&amp;self,int u){\n        if(vis[u]) return;\n        vis[u]=tot;\n        if(q[u]==u){\n            if(root){\n                q[u]=root;\n            }else{\n                root=u;\n            }\n            return;\n        }\n        if(vis[q[u]]){\n            if(vis[q[u]]==tot){\n                //\u6210\u73af\u4e86\n                if(root){\n                    q[u]=root;\n                }else{\n                    root=u;\n                    q[u]=u;\n                }\n                return;\n            }\n        }\n        self(self,q[u]);\n    };\n    for(int i=1;i&lt;=n;i++){\n        ++tot;\n        dfs(dfs,i);\n    }\n    int ans=0;\n    for(int i=1;i&lt;=n;i++){\n        ans+=q[i]!=p[i];\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n    for(int i=1;i&lt;=n;i++)\n        cout&lt;&lt;q[i]&lt;&lt;\" \\n\"[i==n];\n}\n</code></pre> <p>\u5c31\u662f\u76f4\u63a5DFS\uff0c\u5982\u679c\u8d70\u5230\u73af\u4e86\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u628a\u73af\u4e0a\u4e00\u70b9\u62c6\u5f00\uff0c\u6709\u6839\u8282\u70b9\u5c31\u8fde\u6839\uff0c\u6ca1\u6709\u5c31\u9009\u4e00\u4e2a\u6839\u8282\u70b9\u3002\u5982\u679c\u6709\u4e00\u4e2a\u5b83\u672c\u6765\u5c31\u662f\u7236\u8282\u70b9\u4e3a\u81ea\u8eab\uff0c\u90a3\u4e48\u8981\u4e48\u8ba9\u5b83\u505a\u6839\u8282\u70b9\uff0c\u8981\u4e48\u8ba9\u5b83\u8fde\u5230\u8ddf\u6839\u8282\u70b9\u3002\u6700\u540e\u7edf\u8ba1\u4fee\u6539\u6b21\u6570\u548c\u8f93\u51fa\u65b9\u6848\u4e5f\u662f\u975e\u5e38\u7684\u65b9\u4fbf\u3002</p> <p>\u4f46\u662f\u4e3a\u4ec0\u4e48vis\u8981\u5f04\u6210int\u578b\uff0c\u4e14\u8981\u6bcf\u6b21dfs\u90fd\u4e0d\u4e00\u6837\u7684\u503c\u5462\u3002\u56e0\u4e3a\u8fd9\u662f\u5355\u5411\u8fb9\uff0c\u53ef\u80fd\u662f\u5176\u4ed6\u65b9\u5f0f\u8bbf\u95ee\u8fc7\u7684\u70b9\u3002</p> <p>2\u670817\u65e5</p>"},{"location":"cp_solving/1/#cf691d","title":"CF691D","text":"<p>\u4ec0\u4e48\u6c34\u9898\uff0c\u76f4\u63a5DFS\u5c31\u8fc7\u4e86\u3002\u3002\u3002</p>"},{"location":"cp_solving/1/#cf1721d","title":"CF1721D","text":"<p>\u6700\u70e7\u8111\u7684\u4e00\u96c6\u3002\u3002\u3002</p> <p>\u6211\u4eec\u662f\u6bd4\u8f83\u5bb9\u6613\u5224\u65ad\u6700\u9ad8\u4f4d\u80fd\u4e0d\u80fd\u53d6\u52301\u7684\uff0c\u53ea\u9700\u8981 \\(c\\) \u6570\u7ec4\u5168\u4e3a 1 \uff0c\u5373  \\(a\\) \u548c \\(b\\) \u79cd\u8fd9\u4e00\u4f4d\u7684 1 \u7684\u4e2a\u6570\u521a\u597d\u4e3a n \u3002\u4f46\u662f\u540e\u9762\u7684\u4f4d\u5374\u4e0d\u80fd\u8fd9\u6837\uff0c\u56e0\u4e3a\u4f60\u53ef\u80fd\u4e3a\u4e86\u4f7f\u4e0b\u4e00\u4f4d\u4e3a1\u800c\u4f7f\u5f97\u9ad8\u4f4d\u7684\u53ef\u4ee5\u5f97\u5230\u76841\u53d8\u62100\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u7684\u7b54\u6848\u662f ans \uff0c\u90a3\u4e48\u5982\u679c\u65b0\u7684\u4e00\u4f4d\u8981\u9009 1 \uff0c\u90a3\u4e48 </p> <p>$(a_i \\&amp;  x ) \\oplus (b_i \\&amp; x)=x $ .</p> <p>\u8fd9\u6837\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\u7684\u4f4d\u4e86\uff0c\u975e\u5e38\u5de7\u5999\u7684\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u9898\u554a\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi a(n+1),b(n+1);\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n    }\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;b[i];\n    }\n    // (ai&amp;x)^(bi&amp;x)=x\n    int ans=0;\n    auto check=[&amp;](int x){\n        vi v1,v2;\n        for(int i=1;i&lt;=n;i++)\n            v1.push_back(a[i]&amp;x);\n        for(int i=1;i&lt;=n;i++)\n            v2.push_back(b[i]&amp;x^x);\n        sort(all(v1));\n        sort(all(v2));\n        return v1==v2;\n    };\n    for(int i=29;i&gt;=0;i--){\n        if(check(ans|(1&lt;&lt;i)))\n            ans|=(1&lt;&lt;i);\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre> <p>\u8fd8\u662f\u4e00\u4e2a1800\u7684\u9898\u554a\uff0c\u4e0b\u6b21\u9047\u5230\u8fd9\u79cd\uff0c\u8fd8\u662f\u5f88\u96be\u5199\u51fa\u6765\uff0c\u4f46\u662f\u65e0\u6240\u8c13\uff0c\u6211\u519950\u4e2a\u519980\u4e2a\u3002</p>"},{"location":"cp_solving/1/#cf1281b","title":"CF1281B","text":"<p>\u4e0d\u77e5\u9053\u5bf9\u4e86\u6ca1\uff0c\u5076\u9047 <code>queueforces</code> \uff0c\u62fc\u5c3d\u5168\u529b\u65e0\u6cd5\u6218\u80dc\u3002</p> <p>\u4f46\u662f\u770b\u7740\u611f\u89c9\u5e94\u8be5\u4e0d\u96be\u3002\u3002\u3002</p> <p>WA\u4e86\u51e0\u6b21\uff0c\u4f46\u662f\u8fd9\u592a\u7b80\u5355\u5427\u3002</p> <pre><code>void solve()\n{\n    string s,c;\n    cin&gt;&gt;s&gt;&gt;c;\n    int n=sz(s);\n    vi f(26);\n    for(int i=0;i&lt;n;i++)\n        f[s[i]-'A']=i;\n    if(s&lt;c){\n        cout&lt;&lt;s&lt;&lt;'\\n';\n        return;\n    }\n    vi suf(n);\n    suf[n-1]=s[n-1]-'A';\n    for(int i=n-2;i&gt;=0;i--){\n        suf[i]=min(suf[i+1],s[i]-'A');\n    }\n    //\u8bb0\u5f55\u540e\u7f00\u7684\u6700\u5c0f\u5b57\u6bcd\n    //\u5426\u5219s\u4e00\u5b9a\u6709\u4e00\u4e2a\u5b57\u6bcd\u6bd4c\u5927\u7684\uff0c\u6216\u8005\u957f\u5ea6\u66f4\u957f\n    for(int i=0;i&lt;min(sz(s),sz(c));i++){\n        if(s[i]&gt;c[i]){\n            char ch=*min_element(s.begin()+i,s.end());\n            swap(s[i],s[f[ch-'A']]);\n            // cerr&lt;&lt;ch&lt;&lt;\" \"&lt;&lt;f[ch-'a']&lt;&lt;'\\n';\n            if(s&lt;c)\n                cout&lt;&lt;s&lt;&lt;'\\n';\n            else\n                cout&lt;&lt;\"---\\n\";\n            return;\n        }else{\n            //\u7b49\u4e8e\u7684\u60c5\u51b5\u4e5f\u53ef\u4ee5\u4ea4\u6362\n            if(suf[i]&lt;s[i]-'A'){\n                // cerr&lt;&lt;i&lt;&lt;\" \"&lt;&lt;suf[i]&lt;&lt;\" \"&lt;&lt;s[i]&lt;&lt;'\\n';\n                swap(s[i],s[f[suf[i]]]);\n                cout&lt;&lt;s&lt;&lt;'\\n';\n                return;\n            }\n        }\n    }\n    cout&lt;&lt;\"---\\n\";\n}\n</code></pre> <p>\u8ba8\u8bba\u4e00\u4e0b\u5c31\u884c\uff0c\u8fd9\u4e5f\u80fd\u67091600\u3002</p>"},{"location":"cp_solving/1/#p3371","title":"\u6d1b\u8c37P3371","text":"<p>\u56e0\u4e3aCF\u521a\u624d\u5728queue\uff0c\u4e8e\u662f\u968f\u624b\u6253\u4e2adijkstra\uff0c10\u5206\u949f\u3002</p> <p>\u4f46\u662f\u5c31\u7a81\u7136\u53d1\u73b0\u6211\u597d\u50cf\u771f\u5fd8\u8bb0\u4e86\u600e\u4e48\u5b9a\u4e49greater&lt;&gt;\u7684\u4f18\u5148\u961f\u5217\u4e86\u3002\u3002\u3002</p> <pre><code>void solve()\n{\n    int n,m,s;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;\n    vector&lt;vector&lt;pii&gt;&gt;adj(n+1,vector&lt;pii&gt;());\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        adj[u].push_back({v,w});\n    }\n    vector&lt;int&gt;dis(n+1,(1LL&lt;&lt;31)-1);\n    dis[s]=0;\n    auto dij=[&amp;](){\n        priority_queue&lt;pii&gt;pq;\n        pq.push({0,s});\n        while(!pq.empty()){\n            auto [dist,u]=pq.top();\n            // cerr&lt;&lt;dist&lt;&lt;\" \"&lt;&lt;u&lt;&lt;'\\n';\n            dist=-dist;\n            pq.pop();\n            if(dist&gt;dis[u]) continue;\n            for(auto [v,w]:adj[u]){\n                if(dis[u]+w&lt;dis[v]){\n                    dis[v]=dis[u]+w;\n                    pq.push({-dis[v],v});\n                }\n            }\n        }\n    };\n    dij();\n    for(int i=1;i&lt;=n;i++)\n        cout&lt;&lt;dis[i]&lt;&lt;\" \\n\"[i==n];\n}\n</code></pre>"},{"location":"cp_solving/1/#cf1619f","title":"CF1619F","text":"<p>\u611f\u89c9\u597d\u96be\u7684\u6765\u7740\u3002\u3002\u3002</p> <p>\u4e0d\u662f\uff0c\u770b\u9898\u89e3\u4e4b\u540e\u600e\u4e48\u8fd9\u4e48\u7b80\u5355\u3002\u3002\u3002</p> <p>\u56e0\u4e3a \\(nk \\le 2\\cdot 10^5\\) \uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u5c31\u884c\u4e86\uff0c\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u5b58\u5f53\u524d\u7684\u72b6\u6001\uff0c\\(b_i\\) \u5927\u7684\u5750\u5c0f\u684c\u5b50\uff0c\\(b_i\\) \u5c0f\u7684\u5750\u5927\u684c\u5b50\u3002\u3002\u3002\u6ca1\u60f3\u5230\u5b9e\u73b0\u8fd9\u4e48\u7b80\u5355\u3002</p> <pre><code>void solve()\n{\n    int n, m, k;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    vi b(n + 1);\n    for (int i = 1; i &lt;= k; i++) {\n        priority_queue&lt;pii&gt; pq;\n        for (int j = 1; j &lt;= n; j++)\n            pq.push({ b[j], j });\n        for (int j = 1; j &lt;= m - (n % m); j++) {\n            cout &lt;&lt; n / m &lt;&lt; \" \";\n            for (int l = 1; l &lt;= n / m; l++) {\n                // assert(!pq.empty());\n                auto x = pq.top().se;\n                pq.pop();\n                cout &lt;&lt; x &lt;&lt; \" \";\n            }\n            cout &lt;&lt; '\\n';\n        }\n        for (int j = 1; j &lt;= n % m; j++) {\n            cout &lt;&lt; n / m + 1 &lt;&lt; \" \";\n            for (int l = 1; l &lt;= n / m + 1; l++) {\n                // assert(!pq.empty());\n\n                auto x = pq.top().se;\n                pq.pop();\n                cout &lt;&lt; x &lt;&lt; \" \";\n                b[x]++;\n            }\n            cout &lt;&lt; '\\n';\n        }\n    }\n    cout &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/","title":"1600-1800 day1-day4","text":"<p>\u56e0\u4e3a\u611f\u89c9\u591a\u5199\u4e00\u70b9\u5bf9\u81ea\u5df1\u6709\u4e00\u70b9\u70b9\u96be\u5ea6\u7684\u9898\uff0c\u4f1a\u5e2e\u52a9\u5f88\u5927\u3002\u6240\u4ee5\u51b3\u5b9a\u8bd5\u4e00\u4e0b\u3002\u6bd4\u5982\u6bcf\u5929\u51993\u9053cf rating\u5728*1600-*1800\u7684\u9898\u76ee\uff0c\u770b\u770b\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u80fd\u4e0d\u80fd\u7a33\u5b9a\u84dd\u540d\u6c34\u5e73\u4e0d\u8981\u6389\u5230\u9752\u3002\u3002\u3002</p> <p>\u7136\u540e\u6709\u65f6\u5019\u53ef\u80fd\u4e5f\u4f1a\u5199\u6d1b\u8c37\u7684\u7eff\u8272\u96be\u5ea6\u7684\u9898\uff0c\u5927\u81f4\u4e5f\u662f\u6700\u4f4ecf *1600\u7684\u9898\u3002\u8bf4\u767d\u4e86\u5176\u5b9e\u5927\u90e8\u5206\u90fd\u662f\u770b\u9898\u89e3\u7684\uff0c\u751a\u81f3\u53ef\u80fd\u770b\u9898\u6ca1\u770b\u4e00\u4f1a\u5c31\u770b\u9898\u89e3\u3002\u53ea\u80fd\u8bf4\u6211\u8bd5\u4e00\u4e0b\u5427\uff0c\u4e5f\u8bb8\u662f\u9a97\u81ea\u5df1\uff0c\u4e5f\u8bb8\u662f\u6709\u5e2e\u52a9\uff0c\u603b\u6bd4\u4ec0\u4e48\u90fd\u4e0d\u505a\u597d\u3002</p>"},{"location":"cp_solving/2/#day1-219","title":"day1 2\u670819\u65e5","text":""},{"location":"cp_solving/2/#cf2022c-1800","title":"CF2022C *1800","text":"<p>\u8fd9\u4e2a DP \u592a\u725b\u3002\u3002\u3002</p> <p>\u6bcf\u6b21\u5206\u5272\u5b8c\u533a\u57df\u4e4b\u540e\uff0c\u672b\u5c3e\u53ea\u6709\u51e0\u79cd\u72b6\u6001:</p> <pre><code>XX   X.   XX\nX.   XX   XX \n</code></pre> <p>X\u8868\u793a\u5df2\u7ecf\u88ab\u9009\u51fa\u6765\uff0c$ .$ \u8868\u793a\u6ca1\u6709\u88ab\u9009\u3002</p> <p>\u56e0\u4e3a\u5982\u679c\u653e\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\uff0c\u90a3\u4e48\u5e95\u4e0b\u4e5f\u4e00\u5b9a\u5f97\u653e\u4e00\u4e2a\u3002\u6240\u4ee5\u72b6\u6001\u5176\u5b9e\u53ef\u4ee5\u770b\u6210\u53ea\u6709\u8fd93\u79cd\u3002\u7136\u540e\u8fdb\u884cDP\uff0c\u770b\u6bcf\u4e00\u79cd\u72b6\u6001\u7684\u7968\u6570\u662f\u591a\u5c11\u3002</p> <p>\u6211\u521a\u624d\u8fd8\u5728\u60f3\uff0c\u5b83\u600e\u4e48\u4fdd\u8bc1\u7b54\u6848\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\u5212\u5206\u5462\uff1f</p> <p>\u5176\u5b9e\u56e0\u4e3a\u53ef\u4ee5\u5012\u7740\u770b\u7684\uff0c\u6700\u540e\u662f\u5168\u90e8\u586b\u6ee1\u4e86\uff0c\u6240\u4ee5\u9006\u7740\u63a8\u56de\u53bb\u4e00\u5b9a\u4f1a\u662f\u5168\u90e8\u586b\u6ee1\u7684\u3002</p> <pre><code>void solve()\n{\n    /*\n    dp0 dp1 dp2\n    X.  XX  XX\n    XX  X.  XX \n    */\n    int n;\n    cin&gt;&gt;n;\n    string s[2];\n    cin&gt;&gt;s[0]&gt;&gt;s[1];\n    s[0]=\" \"+s[0];\n    s[1]=\" \"+s[1];\n    auto check1=[&amp;](int i){\n        return ((s[0][i+1]=='A')+(s[1][i+1]=='A')+(s[1][i+2]=='A'))&gt;=2;\n    };\n    auto check2=[&amp;](int i){\n        return (s[0][i+1]=='A')+(s[1][i+1]=='A')+(s[0][i+2]=='A')&gt;=2;\n    };\n    auto check3=[&amp;](int i){\n        int res=0;\n        assert(i+3&lt;=n);\n        if((s[0][i+1]=='A')+(s[0][i+2]=='A')+(s[0][i+3]=='A')&gt;=2) res++;\n        if((s[1][i+1]=='A')+(s[1][i+2]=='A')+(s[1][i+3]=='A')&gt;=2) res++;\n        return res;\n    };\n    vector&lt;vi&gt; dp(n+1,vi(3));\n    for(int i=1;i&lt;=n;i++){\n        if(i+1&lt;=n){\n            cmax(dp[i+1][0],dp[i-1][2]+check1(i-1));\n            cmax(dp[i+1][1],dp[i-1][2]+check2(i-1));\n            cmax(dp[i+1][2],dp[i][0]+((s[0][i]=='A')+(s[0][i+1]=='A')+(s[1][i+1]=='A')&gt;=2));\n            cmax(dp[i+1][2],dp[i][1]+((s[1][i]=='A')+(s[0][i+1]=='A')+(s[1][i+1]=='A')&gt;=2));\n        }\n        if(i+3&lt;=n){\n            cmax(dp[i+3][0],dp[i][0]+((s[0][i]=='A')+(s[0][i+1]=='A')+(s[0][i+2]=='A')&gt;=2)+((s[1][i+1]=='A')+(s[1][i+2]=='A')+(s[1][i+3]=='A')&gt;=2));\n            cmax(dp[i+3][1],dp[i][1]+((s[1][i]=='A')+(s[1][i+1]=='A')+(s[1][i+2]=='A')&gt;=2)+((s[0][i+1]=='A')+(s[0][i+2]=='A')+(s[0][i+3]=='A')&gt;=2));\n        }\n        if(i+2&lt;=n){\n            cmax(dp[i+2][2],dp[i-1][2]+check3(i-1));\n        }\n    }\n    // for(int i=1;i&lt;=n;i++)\n    //     cerr&lt;&lt;dp[i][0]&lt;&lt;\" \"&lt;&lt;dp[i][1]&lt;&lt;\" \"&lt;&lt;dp[i][2]&lt;&lt;\" \\n\";\n    cout&lt;&lt;dp[n][2]&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#cf1949i-1800","title":"CF1949I *1800","text":"<p>\u8fd9\u662f\u4e4b\u524d\u54b1\u4eec\u4e00\u8d77\u6253\u7684\u90a3\u4e00\u573a\uff0c\u53ea\u5199\u4e86\u4e00\u9898\u3002</p> <p>\u90a3\u4e2a\u5706\u76d8\u7684\u9898\u3002\u3002\u3002</p> <p>\u770b\u4e86\u9898\u89e3\u611f\u89c9\u5c31\u597d\u6709\u9053\u7406\uff0c\u800c\u4e14\u4e0d\u662f\u5f88\u96be\u60f3\u3002</p> <p>\u8bf4\u767d\u4e86\u76ee\u524d\u8fd8\u662f\u5f97\u591a\u6284\u9898\u89e3\u624d\u80fd\u8fdb\u6b65\u3002\u3002\u3002</p> <p>\u56e0\u4e3a\u534a\u5f84\u4e4b\u548c\u8981\u4e25\u683c\u51cf\u5c0f\uff0c\u90a3\u4e9b\u4e0d\u4e0e\u5176\u4ed6\u5706\u76d8\u76f8\u5207\u7684\uff0c\u5f88\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u51cf\u5c0f\u5c31\u884c\u3002\u5982\u679c\u6709\u82e5\u5e72\u4e2a\u76f8\u5207\u7684\u6328\u5728\u4e00\u8d77\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5706\u76d8\u534a\u5f84\u51cf\u5c0f\uff0c\u90a3\u4e48\u548c\u5b83\u76f8\u90bb\u7684\u4e00\u5b9a\u8981\u589e\u52a0\u3002\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u6709\u6ca1\u6709\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u4e14\u589e\u5927\u51cf\u5c0f\u7684\u6570\u91cf\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u4f7f\u5f97\u603b\u7684\u534a\u5f84\u51cf\u5c0f\u3002</p> <p>\u53ef\u4ee5\u628a\u76f8\u5207\u7684\u8fde\u8fb9\u5efa\u56fe\uff0c\u8fd9\u6837\u4f1a\u6709\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\u68c0\u67e5\u6709\u6ca1\u6709\u53ef\u4ee5\u51cf\u5c0f\u534a\u5f84\u7684\u3002\u9898\u89e3\u8bf4\u597d\u50cf\u8fd9\u6837\u9ed1\u767d\u67d3\u8272\u7684\u5c31\u662f\u4e8c\u5206\u56fe\uff0c\u6709\u7a7a\u770b\u770b\u8fd9\u4e2a\u6982\u5ff5\u3002</p> <p>\u554a\u3002\u6211\u670d\u4e86\uff0c\u4e00\u4e2a continue \u7684\u4f4d\u7f6e\u653e\u9519\u4e86\u5bfc\u81f4 WA \u4e86\u534a\u5c0f\u65f6\u624d\u53d1\u73b0\uff0c\u4e00\u76f4 RE \uff0c\u5e78\u597d\u80fd\u770b\u9519\u5728\u7b2c\u51e0\u4e2a\u6d4b\u8bd5\u70b9\uff0cRE \u5f88\u591a\u65f6\u5019\u53ef\u80fd\u662f\u56e0\u4e3a\u5185\u5b58\u66b4\u4e86\uff0c\u9012\u5f52\u6ca1\u6709\u7ed3\u675f\u4e4b\u7c7b\u7684\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi x(n+1),y(n+1),r(n+1);\n    for(int i=1;i&lt;=n;i++)\n        cin&gt;&gt;x[i]&gt;&gt;y[i]&gt;&gt;r[i];\n    vector&lt;vi&gt;adj(n+1,vi());\n    auto calc=[&amp;](int x){\n        return 1ll*x*x;\n    };\n    for(int i=1;i&lt;=n;i++)\n        for(int j=i+1;j&lt;=n;j++){\n            if(calc(x[i]-x[j])+calc(y[i]-y[j])==calc(r[i]+r[j])){\n                adj[i].push_back(j);\n                adj[j].push_back(i);\n            }\n        }\n    vi s(n+1,-1);\n    for(int i=1;i&lt;=n;i++){\n        if(s[i]!=-1) continue;\n        bool ok=true;\n        int x=0,y=0;\n        auto dfs=[&amp;](auto &amp;&amp;self,int u)-&gt;void{\n            if(s[u]) x++;\n            else y++;\n            // cerr&lt;&lt;u&lt;&lt;'\\n';\n            for(auto v:adj[u]){\n                if(s[v]!=-1){\n                    if(s[v]==s[u]) ok=false;\n                    continue;\n                }\n                s[v]=s[u]^1;\n                self(self,v);\n            }\n        };\n        s[i]=0;\n        dfs(dfs,i);\n        if(ok&amp;&amp;x!=y){\n            cout&lt;&lt;\"YES\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"NO\\n\";\n}\n</code></pre>"},{"location":"cp_solving/2/#cf1995c-1800","title":"CF1995C *1800","text":"<p>\u7ed9\u4e00\u4e2a\u6570\u7ec4 \\(a\\) \uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a \\(a_i\\) \u5c06\u5176\u53d8\u4e3a \\(a_i^2\\) \uff0c\u95ee\u6700\u5c11\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\u624d\u80fd\u4f7f\u5176\u6210\u4e3a\u975e\u9012\u51cf\u6570\u7ec4\u3002</p> <p>\u76f4\u63a5\u4e58\u80af\u5b9a\u4f1a\u7206\u3002\u5176\u5b9e\u53ef\u4ee5\u4e34\u65f6\u8fdb\u884c\u64cd\u4f5c\u4f7f\u5f97 \\(a_i\\) \u521a\u597d\u5927\u4e8e \\(a_{i-1}\\) \uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a \\(a_i\\) \u9700\u8981\u64cd\u4f5c\u591a\u5c11\u6b21\u3002</p> <p>\u5982\u679c \\(a_i\\) \u5148\u64cd\u4f5c\u5230\u521a\u597d\u5927\u4e8e \\(a_{i-1}\\) \uff0c\u90a3\u4e48\u53ea\u9700\u8981\u52a0\u4e0a \\(a_{i-1}\\) \u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u884c\u3002</p> <p>\u8bb0 \\(f_i\\) \u4e3a \\(a_i\\) \u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\u5982\u679c \\(a_i\\) \u6bd4 \\(a_{i-1}\\) \u5c0f\uff0c\u90a3\u4e48\u663e\u7136\u8fdb\u884c\u540c\u6837\u6b21\u6570\u7684\u64cd\u4f5c\u662f\u4e0d\u591f\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u8bb0\u5f55\u4f7f\u5f97 \\(a_i\\) \u521a\u597d\u5927\u4e8e \\(a_{i-1}\\) \u7684\u64cd\u4f5c\u6b21\u6570\u3002\u82e5\u4e00\u5f00\u59cb\u5c31\u5927\u4e8e\uff0c\u5c31\u5f97\u628a \\(a_{i-1}\\) \u589e\u5927\u5230\u521a\u597d\u5c0f\u4e8e \\(a_i\\) \u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vl a(n+1);\n    for(int i=1;i&lt;=n;i++)\n        cin&gt;&gt;a[i];\n    ll ans=0;\n    vl b(n+1);\n    for(int i=2;i&lt;=n;i++){\n        if(a[i]==1&amp;&amp;a[i]&lt;a[i-1]){\n            cout&lt;&lt;\"-1\\n\";\n            return;\n        }\n    }\n    for(int i=2;i&lt;=n;i++){\n        ll x=a[i],y=a[i-1];\n        while(x&lt;y){\n            x*=x;\n            b[i]++;\n        }\n        while(y!=1&amp;&amp;y*y&lt;=x){\n            y*=y;\n            b[i]--;\n        }\n        b[i]+=b[i-1];\n        cmax(b[i],0LL);\n        ans+=b[i];\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#p3386","title":"\u6d1b\u8c37P3386 \u666e\u53ca+/\u63d0\u9ad8","text":"<p>\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u3002</p> <p>\u6bcf\u6b21\u770b\u65b0\u7684\u70b9\u80fd\u4e0d\u80fd\u627e\u5230\u5339\u914d\u7684\u70b9\u3002</p> <pre><code>void solve()\n{\n    int n,m,e;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;e;\n    vector&lt;vi&gt;adj(n+1,vi());\n    for(int i=1;i&lt;=e;i++){\n        int u,v;\n        cin&gt;&gt;u&gt;&gt;v;\n        adj[u].push_back(v);\n    }\n    vector&lt;int&gt;match(m+1);\n    int ans=0;\n    for(int i=1;i&lt;=n;i++){\n        vector&lt;bool&gt;sel(m+1);//\u8bb0\u6709\u6ca1\u6709\u88ab\u9009\u8fc7\n        auto dfs=[&amp;](auto &amp;&amp;self,int u)-&gt;bool{\n            for(auto v:adj[u]){\n                if(!sel[v]){\n                    sel[v]=true;\n                    if(!match[v]||self(self,match[v])){\n                        match[v]=u;\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        if(dfs(dfs,i))\n            ans++;\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#day2-220","title":"day2 2\u670820\u65e5","text":""},{"location":"cp_solving/2/#cf1985h1-1700","title":"CF1985H1 *1700","text":"<p>\u8fd9\u9898\u597d\u7b80\u5355\uff0c\u76f4\u63a5\u66b4\u529b\u5c31\u8fc7\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vector&lt;vector&lt;char&gt;&gt;a(n+1,vector&lt;char&gt;(m+1));\n    for(int i=1;i&lt;=n;i++)\n        for(int j=1;j&lt;=m;j++)\n            cin&gt;&gt;a[i][j];\n    int tot=0,sum=0;\n    vector&lt;vi&gt;vis(n+1,vi(m+1));\n    vector&lt;pii&gt;dir{{0,1},{0,-1},{1,0},{-1,0}};\n    auto dfs=[&amp;](auto &amp;&amp;self,int i,int j)-&gt;void{\n        // cerr&lt;&lt;i&lt;&lt;\" \"&lt;&lt;j&lt;&lt;'\\n';\n        vis[i][j]=tot;\n        sum++;\n        for(auto [dx,dy]:dir){\n            int nx=dx+i,ny=dy+j;\n            if(nx&lt;1||nx&gt;n||ny&lt;1||ny&gt;m) continue;\n            if(a[nx][ny]=='#'&amp;&amp;!vis[nx][ny])\n                self(self,nx,ny);\n        }\n    };\n    vi cnt(n*m+1);\n    for(int i=1;i&lt;=n;i++)\n        for(int j=1;j&lt;=m;j++){\n            if(a[i][j]=='#'&amp;&amp;!vis[i][j]){\n                // cerr&lt;&lt;i&lt;&lt;\" \"&lt;&lt;j&lt;&lt;'\\n';\n                ++tot,sum=0;\n                dfs(dfs,i,j);\n                cnt[tot]=sum;\n\n            }\n        }\n    // cerr&lt;&lt;tot&lt;&lt;'\\n';\n    int ans=0;\n    for(int i=1;i&lt;=n;i++){\n        int now=m;\n        set&lt;int&gt;st;\n        if(i-1&gt;=1){\n            for(int j=1;j&lt;=m;j++)\n                st.insert(vis[i-1][j]);\n        }\n        if(i+1&lt;=n){\n            for(int j=1;j&lt;=m;j++){\n                st.insert(vis[i+1][j]);\n            }\n        }\n        for(int j=1;j&lt;=m;j++){\n            st.insert(vis[i][j]);\n            now-=(a[i][j]=='#');\n        }\n        for(auto x:st)\n            now+=cnt[x];\n        cmax(ans,now);\n    }\n    for(int i=1;i&lt;=m;i++){\n        int now=n;\n        set&lt;int&gt;st;\n        if(i-1&gt;=1){\n            for(int j=1;j&lt;=n;j++)\n                st.insert(vis[j][i-1]);\n        }\n        if(i+1&lt;=m){\n            for(int j=1;j&lt;=n;j++){\n                st.insert(vis[j][i+1]);\n            }\n        }\n        for(int j=1;j&lt;=n;j++){\n            st.insert(vis[j][i]);\n            now-=(a[j][i]=='#');\n        }\n        for(auto x:st)\n            now+=cnt[x];\n        cmax(ans,now);\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#cf1930c-1700","title":"CF1930C *1700","text":"<p>\u8fd9\u4e2a\u6ca1\u60f3\u5230\u54c8\u3002</p> <p>\u5c31\u662f\u62ff\u7684\u987a\u5e8f\u65e0\u6240\u8c13\u7684\uff0c\u56e0\u4e3a\u4f60\u5e76\u4e0d\u662f\u8981\u4f18\u5148\u62ff\u5927\u7684\u3002\u5148\u62ff\u540e\u9762\u7684\u4e00\u6837\u7684\u3002</p> <p>\u76f4\u63a5\u5148\u5c06 \\(a_i+i\\)  \u6392\u5e8f\uff0c\u7136\u540e\u987a\u7740\u62ff\u3002\u56e0\u4e3a\u5e76\u4e0d\u662f\u591a\u96c6\uff0c\u6240\u4ee5\u91cd\u590d\u7684\u54b1\u4eec\u4e00\u5b9a\u662f\u628a\u4ed6 -1 \u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i], a[i] += i;\n    sort(ALL(a), greater&lt;&gt;());\n    set&lt;int&gt; st;\n    st.insert(a[1]);\n    for (int i = 2; i &lt;= n; i++) {\n        cmin(a[i],a[i-1]-1);\n        st.insert(a[i]);\n    }\n    for (auto it = st.rbegin(); it != st.rend(); it++)\n        cout &lt;&lt; *it &lt;&lt; ' ';\n    cout &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#cf1923d-1800","title":"CF1923D *1800","text":"<p>\u5509\u5509\uff0c\u8fd9\u4e2a\u81ea\u5df1\u591a\u770b\u770b\u8bf4\u4e0d\u5b9a\u80fd\u60f3\u51fa\u6765\u7684\u3002</p> <p>\u4e8c\u5206\uff0c\u9996\u5148\u80af\u5b9a\u6709\u5355\u8c03\u6027\u3002</p> <p>\u5176\u6b21\u53ea\u8981\u67d0\u4e00\u6bb5\u4e0d\u5168\u4e3a\u540c\u4e00\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u80af\u5b9a\u53ef\u4ee5\u5408\u6210\u4e00\u4e2a\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vi c(n + 1);\n    vl pre(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        pre[i] = pre[i - 1] + a[i];\n    for (int i = 2; i &lt;= n; i++)\n        c[i] = c[i - 1] + (a[i - 1] != a[i]);\n    for (int i = 1; i &lt;= n; i++) {\n        int ans = n + 1;\n        if (a[i - 1] &gt; a[i])\n            ans = 1;\n        if (i + 1 &lt;= n &amp;&amp; a[i + 1] &gt; a[i])\n            ans = 1;\n        if (pre[i - 1] &gt; a[i] &amp;&amp; c[i - 1]) {\n            int lo = 0, hi = i;\n            while (lo &lt; hi - 1) {\n                int mid = (lo + hi) &gt;&gt; 1;\n                if (pre[i - 1] - pre[mid - 1] &gt; a[i] &amp;&amp; c[i - 1] - c[mid])\n                    lo = mid;\n                else\n                    hi = mid;\n            }\n            cmin(ans, i - lo);\n        }\n        if (i != n &amp;&amp; pre[n] - pre[i] &gt; a[i] &amp;&amp; c[n] - c[i + 1]) {\n            int lo = i, hi = n + 1;\n            while (lo &lt; hi - 1) {\n                int mid = (lo + hi) &gt;&gt; 1;\n                // cerr&lt;&lt;mid&lt;&lt;\" \"&lt;&lt;pre[mid]-pre[i]&lt;&lt;'\\n';\n                if (pre[mid] - pre[i] &gt; a[i] &amp;&amp; c[mid] - c[i + 1])\n                    hi = mid;\n                else\n                    lo = mid;\n            }\n            cmin(ans, hi - i);\n        }\n        if (ans == n + 1)\n            ans = -1;\n        cout &lt;&lt; ans &lt;&lt; \" \\n\"[i == n];\n    }\n}\n</code></pre>"},{"location":"cp_solving/2/#day3-221-22","title":"day3 2\u670821 22\u65e5","text":"<p>\u8fd9\u51e0\u5929\u6ca1\u548b\u5199\u3002\u3002\u3002</p>"},{"location":"cp_solving/2/#cf2044g1-1700","title":"CF2044G1 *1700","text":"<p>\u56e0\u4e3a\u6709n\u4e2a\u70b9n\u6761\u8fb9\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u51fa\u5ea6\uff0c\u4e14\u6ca1\u6709\u81ea\u73af\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u6709\u73af\u3002\u73af\u4e0a\u7684\u70b9\u662f\u4e00\u76f4\u4e0d\u4f1a\u53d8\u7684\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u5176\u4ed6\u7684\u70b9\u90fd\u53d8\u62100\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u8fde\u5230\u73af\u4e0a\u7684\u6700\u957f\u7684\u94fe\u3002\u7136\u540e\u8fd9\u4e2a\u94fe\u4e0a\u7684\u70b9\u5168\u53d8\u62100\u4e86\u4e4b\u540e\uff0c\u70b9\u7684\u503c\u5c31\u4e0d\u4f1a\u53d8\u4e86\u3002\u76f4\u63a5DFS\u5c31\u884c\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi r(n + 1), a(n + 1, 1), de(n + 1);\n    a[0] = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; r[i];\n        de[r[i]]++;\n    }\n    /*\n    \u53ea\u6709\u5728\u73af\u4e0a\u7684\u70b9\u662f\u4e0d\u4f1a\u53d8\u7684\n    \u5426\u5219\u5c31\u5f97\u627e\u6700\u957f\u7684\u94fe\u662f\u591a\u957f\n    */\n    vi t = de;\n    vector&lt;bool&gt; circle(n + 1);\n    vi L(n + 1);\n    auto topsort = [&amp;]() {\n        queue&lt;int&gt; q;\n        for (int i = 1; i &lt;= n; i++)\n            if (!de[i])\n                q.push(i);\n        while (!q.empty()) {\n            int x = q.front();\n            // cerr&lt;&lt;x&lt;&lt;'\\n';\n            circle[x] = true;\n            q.pop();\n            // assert(x&gt;=1&amp;&amp;x&lt;=n);\n            if (!(--de[r[x]]))\n                q.push(r[x]);\n        }\n        // cerr&lt;&lt;sz(q)&lt;&lt;'\\n';\n        while (!q.empty()) {\n            assert(q.front() &gt;= 1 &amp;&amp; q.front() &lt;= n);\n            circle[q.front()] = true;\n            q.pop();\n        }\n    };\n    topsort();\n    int ans = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        if (!t[i]) {\n            auto dfs = [&amp;](auto&amp;&amp; self, int u) {\n                // cerr&lt;&lt;u&lt;&lt;'\\n';\n                // assert(len&lt;=n);\n                // assert(u&lt;=n);\n                if (!circle[u] || L[u])\n                    return;\n                self(self, r[u]);\n                cmax(L[u], L[r[u]] + 1);\n                cmax(ans, L[u]);\n            };\n            dfs(dfs, i);\n        }\n    }\n    cout &lt;&lt; ans + 2 &lt;&lt; '\\n';\n}\n</code></pre> <p>\u7528\u62d3\u6251\u6392\u5e8f\u628a\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u7ed9\u627e\u51fa\u6765\uff0c\u7136\u540e\u54b1\u4eec\u53ef\u4ee5\u53ea\u5bf9\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u8fdb\u884cDFS\uff0c\u800c\u4e14\u53ef\u4ee5\u53ea\u7528\u5bf9\u5165\u5ea6\u4e3a0\u7684\u70b9\u5f00\u59cbDFS\uff0c\u8fd9\u6837\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230\u6240\u6709\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u3002</p>"},{"location":"cp_solving/2/#cf2044g2-1900","title":"CF2044G2 *1900","text":"<p>\u548cG1\u7279\u522b\u50cf\uff0c\u4e5f\u633a\u7b80\u5355\u7684\u5176\u5b9e\u3002\u3002\u3002</p> <p>\u56e0\u4e3a\u53ef\u4ee5\u5b58\u5728\u624b\u4e0a\uff0c\u7136\u540e\u4e5f\u53ea\u6709\u73af\u4e0a\u7684\u70b9\u4e0d\u4f1a\u53d8\u3002\u6240\u4ee5\u9700\u8981\u7edf\u8ba1\u6240\u6709\u8fde\u5728\u73af\u4e0a\u7684\u70b9\u7684\u5b50\u6811\u7684\u6700\u5927\u5927\u5c0f\u3002</p> <p>\u6211\u81ea\u5df1\u5199\u5f97\u6709\u95ee\u9898\u627e\u4e86\u597d\u4e45\uff0c\u56e0\u4e3a\u6211\u6700\u5f00\u59cb\u5199\u7684\u662f\u7edf\u8ba1\u73af\u4e0a\u7684\u70b9\u80fd\u5230\u7684\u70b9\u7684\u6570\u91cf\u3002\u3002\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u4e2a\u70b9\u53ef\u80fd\u4f1a\u8fde\u51e0\u4e2a\u5b50\u6811\uff0c\u8fd9\u51e0\u4e2a\u5b50\u6811\u662f\u540c\u65f6\u51cf\u5c0f\u7684\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u8fd9\u4e00\u70b9\u3002\u3002\u3002</p> <pre><code>void solve()\n{\n    /*\n    \u56e0\u4e3a\u4e0d\u4f1a\u4e22\u4e86\uff0cn\u6761\u8fb9 \u4e00\u5b9a\u4f1a\u6709\u73af\n    \u90a3\u4e48\u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u73af\u4e0a\u6bcf\u4e2a\u70b9\u4e0a\u7684\u503c\u4e00\u76f4\u76f8\u540c\n    \u5373\u540c\u4e00\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u8fde\u7684\u70b9\u7684\u6570\u91cf\u8981\u662f\u76f8\u540c\u7684\n    \u3002\u3002\u3002\u4e0d\u5bf9\uff0c\u5510\u4e86\n    \u6bcf\u6b21\u53ea\u4f1a\u7ed9\u4e00\u4e2a \u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u73af\u4e0a\u662f\u4e0d\u4f1a\u53d8\u7684\n    */\n    int n;\n    cin &gt;&gt; n;\n    vi r(n + 1), a(n + 1, 1), de(n + 1);\n    a[0] = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; r[i];\n        de[r[i]]++;\n    }\n    vi t = de;\n    vector&lt;bool&gt; circle(n + 1);\n    // vi L(n + 1);\n    auto topsort = [&amp;]() {\n        queue&lt;int&gt; q;\n        for (int i = 1; i &lt;= n; i++)\n            if (!de[i])\n                q.push(i);\n        while (!q.empty()) {\n            int x = q.front();\n            circle[x] = true;\n            q.pop();\n            if (!(--de[r[x]]))\n                q.push(r[x]);\n        }\n    };\n    topsort();\n    int ans = 0;\n    vi cnt(n + 1), f(n + 1);\n    for (int i = 1; i &lt;= n; i++) {\n        if (!t[i]) {\n            auto dfs = [&amp;](auto&amp;&amp; self, int u) -&gt; void {\n                if (f[u])\n                    return;\n                if (!circle[r[u]]) {\n                    f[u] = u;\n                    cnt[u] = 1;\n                    return;\n                }\n\n                self(self, r[u]);\n                f[u] = f[r[u]];\n                cnt[f[u]]++;\n                // cerr &lt;&lt; u&lt;&lt;\" \"&lt;&lt;f[u] &lt;&lt; \" \" &lt;&lt; cnt[f[u]] &lt;&lt; '\\n';\n                // assert(f[u]&amp;&amp;(f[u]!=u)&amp;&amp;(!circle[f[u]]));\n                cmax(ans, cnt[f[u]]);\n            };\n            dfs(dfs, i);\n        }\n    }\n    cmax(ans, *max_element(ALL(cnt)));\n    cout &lt;&lt; ans + 2 &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#cf2059c-1600","title":"CF2059C *1600","text":"<p>\u597d\u7b80\u5355\u7684\uff0c\uff0c\uff0c\u53ea\u8981\u7528\u4e0a\u4e00\u70b9\u70b9\u7684\u89c2\u5bdf\u80fd\u529b\u3002</p> <p>\u8d5b\u65f6\u5361b\u597d\u4e45\uff0c\u7136\u540ec\u6ca1\u548b\u770b\u4e86\u3002\u607c\u3002</p> <pre><code>void solve()\n{\n    /*\n    \u7b2cn-1\u6b21\u670d\u52a1\u53ea\u80fd\u7ed9a_n=1\u7684\n    \u800cn-2\u6b21\u670d\u52a1\u53ea\u80fd\u7ed9a_n=1 a_n-1=1\u7684\n    \u56e0\u4e3a\u8981+2\u4e2a\u6570\u5b57\u7b49\u4e8e2 \u6240\u4ee5\u53ea\u80fd\u90a3\u6837\n    \u6240\u4ee5\u54b1\u4eec\u5c31\u662f\u8981\u770b\u5168\u75311\u7ec4\u6210\u7684\u5217\u6709\u591a\u5c11\u4e2a\n    */\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;vi&gt; a(n + 1, vi(n + 1));\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= n; j++)\n            cin &gt;&gt; a[i][j];\n    // vi cnt(n + 1);\n    multiset&lt;int&gt; st;\n    for (int i = 1; i &lt;= n; i++) {\n        int now = 0;\n        for (int j = n; j &gt;= 1; j--) {\n            if (a[i][j] != 1)\n                break;\n            now++;\n        }\n        // cnt[now]++;\n        st.insert(now);\n    }\n    for (int i = 1; i &lt; n; i++) {\n        if (*st.rbegin() &lt; i) {\n            cout &lt;&lt; i &lt;&lt; '\\n';\n            return;\n        }\n        st.erase(st.lower_bound(i));\n    }\n    cout &lt;&lt; n &lt;&lt; '\\n';\n}\n</code></pre> <p>\u56e0\u4e3a \\(a_{i,j}\\) \u8303\u56f4\u662f \\([1,10^9]\\) \uff0c\u6211\u4eec\u6bcf\u6b21\u5fc5\u987b\u8ba9\u4e00\u5217\u53d8\u62100\uff0c\u90a3\u4e48\u6211\u4eec\u5012\u6570\u7b2c\u4e8c\u6b21\u670d\u52a1\u7684\u90a3\u4e00\u5217\uff0c\u4ed6\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u5fc5\u987b\u662f1\uff0c\u4e0d\u7136\u6211\u4eec\u4e0d\u53ef\u80fd\u5f97\u52301\u4e86\u3002\u6211\u4eec\u4e0b\u4e00\u4e2a\u8981\u5f97\u5230\u7684\u6570\u5b57\u662f2\uff0c\u4f46\u53ea\u80fd\u5728\u5012\u6570\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u4e4b\u524d\u7528\u4e86\uff0c\u4f46\u662f\u4e24\u4e2a\u6570\u5b57\u4ee5\u4e0a\u52a0\u8d77\u6765\u662f\u4e0d\u53ef\u80fd\u7b49\u4e8e2\u7684\uff0c\u800c\u4e24\u4e2a\u6570\u5b57\u52a0\u8d77\u6765\u7b49\u4e8e2\u4e5f\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u6709\u5bf9\u540e\u4e24\u4e2a\u6570\u5b57\u90fd\u4e3a1\u7684\u90a3\u4e00\u5217\u64cd\u4f5c\u624d\u80fd\u5f97\u52301\u3002</p> <p>\u540c\u7406\uff0c\u6211\u4eec\u8981\u5f97\u5230\u4e0b\u4e00\u4e2a\u503c\uff0c\u53ea\u80fd\u662f\u90a3\u4e00\u5217\u540e\u9762\u7684\u8fde\u7eed\u76841\u7684\u4e2a\u6570\u5927\u4e8e\u8fd9\u4e2a\u503c\u3002</p> <p>\u5509\u5509\uff0c\u611f\u89c9\u5f88\u591a\u5927\u6982\u96be\u5ea6\u7684\u9898\uff0c\u591a\u60f3\u4e00\u4f1a\u5c31\u80fd\u51fa\u6765\u7684\u3002\u5c31\u7b97\u60f3\u4e0d\u51fa\u6765\uff0c\u4e5f\u4f1a\u597d\u5f88\u591a\u3002</p>"},{"location":"cp_solving/2/#day4-224","title":"day4 2\u670824\u65e5","text":""},{"location":"cp_solving/2/#cf1766d-1600","title":"CF1766D *1600","text":"<p>\\(gcd(x,y)\\) = \\(gcd(x,y\\%x)\\)</p> <p>\u8fd9\u9898\u91cc\uff0c\u6211\u4eec\u77e5\u9053 \\(gcd(x+k,y+k)\\) = \\(gcd(x+k,y-x)\\) \uff0c\u6240\u4ee5\u5982\u679c \\(gcd(x+k,y+k)\\ne 1\\) \uff0c\u90a3\u4e48 \\(x+k\\) \u4e00\u5b9a\u4f1a\u662f \\(y-x\\) \u7684\u4e00\u4e2a\u56e0\u5b50\u7684\u500d\u6570\u3002\u4f46\u662f\u76f4\u63a5\u679a\u4e3e\u56e0\u5b50\uff0c\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u3002</p> <p>\u4e8e\u662f\u6211\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\uff0c\u53ea\u7528\u679a\u4e3e\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u8d28\u56e0\u5b50\uff0c\u6bd4\u5982\u8ba9 $x=(\\lfloor\\frac{x}{g}\\rfloor+1) \\cdot g $\uff0c\u5982\u679c \\(g\\) \u4e0d\u662f\u8d28\u6570\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u7528 \\(g\\) \u7684\u56e0\u5b50\uff0c\u7edd\u5bf9\u4e0d\u4f1a\u60c5\u51b5\u66f4\u5dee\u3002</p> <p>\u7b5b\u8d28\u56e0\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u5b57\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u3002\u77e5\u9053\u6700\u5c0f\u8d28\u56e0\u5b50\u4e4b\u540e\u53ef\u4ee5\u4e00\u76f4\u9664\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5206\u89e3\u51fa\u8d28\u56e0\u5b50\u3002\u5728\u9884\u5904\u7406\u5b8c\u540e\uff0c\u7b5b\u8d28\u56e0\u5b50\u590d\u6742\u5ea6\u4e3a \\(\\log k\\) \u3002</p> <p>\u7528\u57c3\u6c0f\u7b5b\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \\(n\\log\\log n\\)   \uff0c\u6b27\u62c9\u7b5b\u7684\u590d\u6742\u5ea6\u4e3a \\(n\\) \u3002</p> <pre><code>constexpr int N = 1e7 + 5;\nint mind[N + 5];\n\nvoid init()\n{\n    for (int i = 1; i &lt;= N; i++)\n        mind[i] = i;\n    for (int i = 2; i * i &lt;= N; i++) {\n        if (mind[i] != i)\n            continue;\n        for (int j = i * i; j &lt;= N; j += i)\n            cmin(mind[j], i);\n    }\n}\nvi get_primes(int x)\n{\n    vi res;\n    while (x &gt; 1) {\n        res.push_back(mind[x]);\n        while (x % res.back() == 0)\n            x /= res.back();\n    }\n    return res;\n}\nvoid solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i++) {\n        int x, y;\n        cin &gt;&gt; x &gt;&gt; y;\n        if (y == x + 1) {\n            cout &lt;&lt; \"-1\\n\";\n            continue;\n        }\n        if (__gcd(x, y) != 1) {\n            cout &lt;&lt; \"0\\n\";\n            continue;\n        }\n        int z = y - x;\n        int ans = INF;\n        auto calc = [&amp;](int t) {\n            return (x / t + 1) * t;\n        };\n        for (auto v : get_primes(z)) {\n            cmin(ans, calc(v) - x);\n        }\n        cout &lt;&lt; ans &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"cp_solving/2/#p10814","title":"\u6d1b\u8c37P10814 \u666e\u53ca+/\u63d0\u9ad8","text":"<p>\u786e\u5b9e\u662f\u4e00\u4e2a\u5f88\u5178\u7684\u9898\uff0c\u6211\u8bb0\u5f97\u7f51\u7edc\u8d5b\u8fd8\u662f\u54ea\u4e2a\u533a\u57df\u8d5b\u4e5f\u6709\u4e2a\u5dee\u4e0d\u591a\u7684\u3002\u3002\u3002</p> <p>\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u5c0f\u4e8e\u7b49\u4e8ex\u7684\u6570\u5b57\u7684\u6570\u91cf\u662f\u6bd4\u8f83\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5982\u679c\u8981\u67e5\u8be2\u533a\u95f4\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u6bd4\u8f83\u9ad8\u3002</p> <p>\u53ef\u4ee5\u79bb\u7ebf\u5904\u7406\uff0c\u8d70\u5230 \\(l-1\\) \uff0c\u5c31\u5148\u628a\u5bf9\u5e94\u7684 \\(ans\\) \u51cf\u53bb\u5f53\u524d\u7684\u5c0f\u4e8e \\(x\\) \u7684\u6570\u91cf\uff0c\u7136\u540e\u7b49\u8d70\u5230 \\(r\\) \u518d\u52a0\u4e0a\u5f53\u524d\u7684\u5c0f\u4e8e \\(x\\) \u7684\u6570\u91cf\u3002</p> <pre><code>constexpr int N = 2e6;\n\nstruct Fenwick {\n    vector&lt;int&gt; b;\n    Fenwick()\n    {\n        // b.resize(N+1,0);\n        b = vector&lt;int&gt;(N + 1);\n    }\n    int lowbit(int x) { return (x) &amp; (-x); }\n    void upd(int i, int x)\n    {\n        while (i &lt;= N) {\n            // dbg(i);\n            b[i] += x;\n            i += lowbit(i);\n        }\n    }\n    int ask(int i)\n    {\n        int res = 0;\n        while (i) {\n            // cerr&lt;&lt;\"ask: \"&lt;&lt;i&lt;&lt;\" \"&lt;&lt;b[i]&lt;&lt;'\\n';\n            res += b[i];\n            i -= lowbit(i);\n        }\n        // cerr&lt;&lt;\"res: \"&lt;&lt;res&lt;&lt;'\\n';\n        return res;\n    }\n    int query(int l, int r)\n    {\n        return ask(r) - ask(l - 1);\n    }\n};\n\nvoid solve()\n{\n    Fenwick C;\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;int&gt; a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;array&lt;int, 4&gt;&gt; q(m);\n    for (int i = 0; i &lt; m; i++)\n        cin &gt;&gt; q[i][0] &gt;&gt; q[i][1] &gt;&gt; q[i][2], q[i][3] = i;\n    sort(q.begin(), q.end(), greater&lt;&gt;());\n    vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; adj(n + 1, vector&lt;pair&lt;int, int&gt;&gt;());\n    vector&lt;int&gt; ans(m);\n    for (int i = 1; i &lt;= n; i++) {\n        // cerr&lt;&lt;\"i: \"&lt;&lt;i&lt;&lt;'\\n';\n        while (!q.empty() &amp;&amp; q.back()[0] == i) {\n            auto [x, y, z, j] = q.back();\n            // cerr&lt;&lt;\"q: \"&lt;&lt;z&lt;&lt;\" \"&lt;&lt;j&lt;&lt;'\\n';\n            q.pop_back();\n            // dbg(adj);\n            // dbg(q);\n            ans[j] -= C.ask(z);\n            adj[y].push_back({ z, j });\n        }\n        // dbg(\"yuanshen\");\n        // dbg(adj);\n        C.upd(a[i], 1);\n        for (auto [x, j] : adj[i]) {\n            // cerr&lt;&lt;\" adj: \"&lt;&lt;x&lt;&lt;\" \"&lt;&lt;j&lt;&lt;'\\n';\n            ans[j] += C.ask(x);\n        }\n    }\n    for (auto x : ans)\n        cout &lt;&lt; x &lt;&lt; \"\\n\";\n    // cout&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/2/#cf2045m-1800","title":"CF2045M *1800","text":"<p>\u4e0d\u662f\uff0c\u8fd9\u600e\u4e48\u4e5f\u80fd\u662f1800\u7684\u9898\u554a\uff0c\u5199\u4e86\u5c31\u80fd\u5bf9\u3002\u3002\u3002\u867d\u7136\u6211WA\u4e86\uff0c\u6ca1\u770b\u6570\u636e\u611f\u89c9\u5f88\u96be\u627e\u51fa\u6765\u3002\u3002\u3002</p> <p>\u6ca1\u6ce8\u610f\u3002\u3002\u3002\u4e0d\u7528 <code>to_string</code> \u5bfc\u81f4\u7684\u3002</p> <pre><code>void solve()\n{\n    int r, c;\n    cin &gt;&gt; r &gt;&gt; c;\n    vector&lt;string&gt; s(r);\n    int all = 0;\n    for (int i = 0; i &lt; r; i++) {\n        cin &gt;&gt; s[i];\n        for (auto x : s[i])\n            if (x == '\\\\' || x == '/')\n                all++;\n    }\n    // map&lt;char, pair&lt;int, int&gt;&gt; mp;\n    vector&lt;pair&lt;int, int&gt;&gt; mp(128);\n    mp['N'] = { 1, 0 }, mp['S'] = { -1, 0 };\n    mp['W'] = { 0, 1 }, mp['E'] = { 0, -1 };\n    // int cnt = 0;\n    set&lt;pair&lt;int, int&gt;&gt; st;\n    auto dfs = [&amp;](auto&amp;&amp; self, int x, int y, char d) -&gt; void {\n        if (x &lt; 0 || x &gt;= r || y &lt; 0 || y &gt;= c)\n            return;\n        if (s[x][y] == '/') {\n            // cnt++;\n            st.insert({ x, y });\n            if (d == 'N')\n                d = 'E';\n            else if (d == 'S')\n                d = 'W';\n            else if (d == 'W')\n                d = 'S';\n            else\n                d = 'N';\n        } else if (s[x][y] == '\\\\') {\n            // cnt++;\n            st.insert({ x, y });\n            if (d == 'N')\n                d = 'W';\n            else if (d == 'S')\n                d = 'E';\n            else if (d == 'W')\n                d = 'N';\n            else\n                d = 'S';\n        }\n        int nx = x + mp[d].first, ny = y + mp[d].second;\n        self(self, nx, ny, d);\n    };\n    vector&lt;string&gt; ans;\n    for (int _ = 0; _ &lt; 2; _++) {\n        char d = (_ ? 'N' : 'S');\n        for (int i = 0; i &lt; c; i++) {\n            // cnt = 0;\n            st.clear();\n            if (d == 'N')\n                dfs(dfs, 0, i, d);\n            else\n                dfs(dfs, r - 1, i, d);\n            // cerr&lt;&lt;cnt&lt;&lt;'\\n';\n            if (st.size() == all) {\n                string tmp { d };\n                // tmp.push_back('1' + i);\n                tmp+=to_string(i+1);\n                ans.push_back(tmp);\n            }\n        }\n    }\n    for (int _ = 0; _ &lt; 2; _++) {\n        char d = (_ ? 'W' : 'E');\n        for (int i = 0; i &lt; r; i++) {\n            // cnt = 0;\n            st.clear();\n            if (d == 'W')\n                dfs(dfs, i, 0, d);\n            else\n                dfs(dfs, i, c - 1, d);\n            if (st.size() == all) {\n                string tmp { d };\n                // tmp.push_back('1' + i);\n                tmp+=to_string(i+1);\n                ans.push_back(tmp);\n            }\n        }\n    }\n    cout &lt;&lt; ans.size() &lt;&lt; '\\n';\n    for (auto x : ans)\n        cout &lt;&lt; x &lt;&lt; ' ';\n}\n</code></pre> <p>\u4f46\u662f\u771f\u7684\u5199\u4e86\u5c31\u80fd\u8fc7\u554a\uff0c\u4e4b\u524d\u770b\u8fc7\u4e00\u773c\u8fd9\u4e2a\u9898\uff0c\u770b\u5230\u8fd9\u4e2a\u56fe\u5c31\u4e0d\u60f3\u5199\u4e86\u3002\u4f46\u662f\u771f\u5199\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u5c31\u6309\u9898\u610fDFS\u5c31\u884c\u3002\u5728\u6d1b\u8c37\u4f30\u8ba1\u8981 <code>\u5efa\u8bae\u8bc4\u6a59</code> \u4e86\u3002\u597d\u5427\u6ca1\u6709\uff0c\u662f\u7eff\u3002\u5f00\u4e2a\u73a9\u7b11</p> <p>\u6211\u8981\u505a\u7684\u662f\u677f\u5237\uff0c\u90a3\u4e48\u5c31\u662f\u4e0d\u80fd\u7ba1\u96be\u8fd8\u662f\u7b80\u5355\uff0c\u4e0d\u7ba1\u5199\u8d77\u6765\u96be\u4e0d\u96be\u53d7\uff0c\u5c31\u987a\u7740\u5199\uff0c\u800c\u4e14\u5176\u5b9e\u96be\u5ea6\u90fd\u5dee\u4e0d\u591a\u7684\uff0c\u591a\u601d\u8003\uff0c\u603b\u4f1a\u66f4\u63a5\u8fd1\u7b54\u6848\u7684\u3002</p>"},{"location":"cp_solving/2/#cf2045a-1700","title":"CF2045A *1700","text":"<p>\u8fd9\u9898\u66f4\u662f\u7b80\u5355\uff0c\u867d\u7136\u8fd8\u662f\u82b1\u4e86\u4e09\u5341\u591a\u5206\u949f\uff0c\u5f88\u6162\u4e86\u3002</p> <p>\u5c31\u662f\u7eaf\u5206\u7c7b\u8ba8\u8bba+\u4e00\u70b9\u70b9\u8d2a\u5fc3\u3002\u3002\u3002</p> <p>\u53ea\u8981\u80fd\u8010\u5fc3\u5199\uff0c\u5927\u6982\u7387\u80fd\u5199\u51fa\u6765\u7684\u3002</p> <pre><code>void solve()\n{\n    string s;\n    cin &gt;&gt; s;\n    vector&lt;int&gt; cnt(26);\n    for (auto x : s)\n        cnt[x - 'A']++;\n    int vowels = cnt['A' - 'A'] + cnt['E' - 'A'] + cnt['I' - 'A'] + cnt['O' - 'A'] + cnt['U' - 'A'];\n    int consonants = s.size() - vowels;\n    if (vowels * 2 &gt; consonants) {\n        // cerr &lt;&lt; \"1\\n\";\n        vowels = consonants / 2;\n        int ans = vowels * 3;\n        int rest = consonants % 2;\n        int x = cnt['N' - 'A'], y = cnt['G' - 'A'];\n        if (x &gt; y)\n            swap(x, y);\n        // \u6700\u591a\u53ea\u80fd\u591a\u52a0x\u4e2a\n        ans += min({ vowels * 2, x, rest });\n        cout &lt;&lt; ans &lt;&lt; '\\n';\n    } else {\n        // \u53ef\u80fd\u9700\u8981\u7528y\n        int x = cnt['N' - 'A'], y = cnt['G' - 'A'], z = cnt['Y' - 'A'];\n        if (x &gt; y)\n            swap(x, y);\n        if ((vowels + z) * 3 &lt;= s.size()) {\n            // \u80af\u5b9a\u5168\u62ff\n            // cerr &lt;&lt; \"2\\n\";\n            int ans = (vowels + z) * 3;\n            int rest = s.size() - ans;\n            ans += min({ (vowels + z) * 2, x, rest });\n            cout &lt;&lt; ans &lt;&lt; '\\n';\n        } else {\n            // \u5426\u5219\u53ea\u80fd\u52a0\u4e00\u90e8\u5206\n            // \u76f4\u63a5\u62ff\u6210s.size()/3\n            vowels = s.size() / 3;\n            if (vowels * 3 == s.size()) {\n                // cerr &lt;&lt; \"3\\n\";\n                cout &lt;&lt; s.size() &lt;&lt; '\\n';\n            } else {\n                // \u5426\u5219\u7ee7\u7eed\u4e4b\u524d\u7684\u64cd\u4f5c\n                // cerr &lt;&lt; \"4\\n\";\n                int ans = vowels * 3;\n                int rest = s.size() - ans;\n                int x = cnt['N' - 'A'], y = cnt['G' - 'A'];\n                if (x &gt; y)\n                    swap(x, y);\n                // \u6700\u591a\u53ea\u80fd\u591a\u52a0x\u4e2a\n                ans += min({ vowels * 2, x, rest });\n                cout &lt;&lt; ans &lt;&lt; '\\n';\n            }\n        }\n    }\n}\n</code></pre> <p>\u4e5f\u591a\u4e8f\u6837\u4f8b\u7ed9\u5f97\u7b97\u6bd4\u8f83\u5f3a\u7684\u4e86\uff0c\u4e0d\u7136\u6709\u4e9b\u60c5\u51b5\u786e\u5b9e\u53ef\u80fd\u5f97\u591a\u82b1\u70b9\u65f6\u95f4\u624d\u80fd\u60f3\u5230\u3002\u3002\u3002</p>"},{"location":"cp_solving/2/#cf2039c2-1800","title":"CF2039C2 *1800","text":"<p>\u5f53 \\(y\\le x\\) \u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u7b97\u5c31\u884c\u4e86\u3002</p> <p>\u5f53 $y&gt;x $ \u65f6\uff0c\\(x\\oplus y\\le x+y &lt;2y\\) \uff0c\u6240\u4ee5 \\(x\\oplus y\\) \u4e0d\u53ef\u80fd\u88ab \\(y\\) \u6574\u9664\uff0c\u53ea\u53ef\u80fd\u662f \\(x\\) \u7684\u500d\u6570\u3002</p> <p>\u6211\u4eec\u8bbe \\(p=x\\oplus y\\) \uff0c\u90a3\u4e48 \\(y=p\\oplus x\\) \uff0c\u6211\u4eec\u9700\u8981 \\(y\\) \u662f\u5c0f\u4e8e\u7b49\u4e8e \\(m\\)\u3002</p> <p>\\(p\\) \u662f \\(x\\) \u7684\u500d\u6570\uff0c\\(y\\le p\\oplus x\\le p+x\\le m\\) \uff0c\u6240\u4ee5 \\(x\\) \u7684 \\(\\lfloor\\frac{m}{x}\\rfloor-1\\) \u500d\u80af\u5b9a\u90fd\u662f\u80fd\u8868\u793a\u51fa\u6765\u7684\uff0c\u54b1\u4eec\u53ea\u7528\u5224\u65ad \\(\\lfloor\\frac{m}{x}\\rfloor\\) \u80fd\u4e0d\u80fd\u8fbe\u5230\u3002</p> <p>\u4e0d\u5bf9\uff0c\u518d\u5224\u4e00\u4e0b\u591a\u4e00\u70b9\u80fd\u4e0d\u80fd\u8fbe\u5230\u3002\u4e3a\u4ec0\u4e48\u53ea\u7528\u591a\u5224\u4e00\u4e2a\u518d\u591a\u4e00\u500d\uff1f</p> <p>\\(x\\oplus y \\le x+y\\) \uff0c\u6240\u4ee5\u82e5 \\(x\\oplus y &gt;m+x\\) \uff0c\u90a3\u4e48 \\(y&gt; m\\) \uff0c\u6240\u4ee5 \\(p\\le m+x\\) \uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5927\u4e8e \\(\\lfloor \\frac{m}{x} \\rfloor +1\\) \u500d\u3002</p> <pre><code>void solve()\n{\n    int x;\n    long long m;\n    cin&gt;&gt;x&gt;&gt;m;\n    long long ans=0;\n    for(int i=1;i&lt;=min(m,1LL*x-1);i++){\n        if((i^x)%i==0)\n            ans++;\n    }\n    if(m&lt;x){\n        cout&lt;&lt;ans&lt;&lt;'\\n';\n    }else{\n        ans+=m/x-1;\n        if(((m/x*x)^x)&lt;=m) ans++;\n        if(((m/x*x+x)^x)&lt;=m) ans++;\n        cout&lt;&lt;ans&lt;&lt;'\\n';\n    }\n}\n</code></pre> <p>\u611f\u89c9\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u9898\u76ee\u554a\uff0c\u4e4b\u524d\u8bb0\u5f97\u54ea\u4e00\u573a\u533a\u57df\u8d5b\u8fd8\u662f\u5565\uff0c\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u3002\u3002\u3002\u975e\u5e38\u597d\u7684\u9898\u76ee\uff0c\u611f\u89c9\u6709\u5fc5\u8981\u6536\u85cf\u4e00\u4e0b\u3002</p> <p>\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u4f46\u662f\u8fd9\u4e9b\u662f\u6309\u6211\u81ea\u5df1\u7684\u7406\u89e3\u63a8\u51fa\u6765\u7684\u3002</p>"},{"location":"cp_solving/2025/0301/","title":"3\u67081\u65e5-3\u67089\u65e5","text":"<p>\u4ee5\u540e\u53ea\u4f1a\u8bb0\u5f55\u6bcf\u5468\u7684\u60c5\u51b5\u4e86\uff0c\u6216\u8005\u4e00\u6bb5\u65f6\u95f4\u7684\u3002</p> <p>\u56e0\u4e3a\u5f88\u96be\u4fdd\u8bc1\u6bcf\u5929\u80fd\u56fa\u5b9a\u505a\u591a\u5c11\u4e2a\u7279\u5b9a\u96be\u5ea6\u7684\u9898\u76ee\uff0c\u53ef\u80fd\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u4e8b\u60c5\uff0c\u6216\u8005\u6709\u6bd4\u8d5b\u4e4b\u7c7b\u7684\u3002\u800c\u4e14\u5c31\u662f\u4e5f\u6b63\u597d\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u5468\u90fd\u6253\u4e86\u54ea\u4e9b\u6bd4\u8d5b\u4e4b\u7c7b\u7684\u3002</p> <p>\u4ee5\u540e\u65b0VP\u6216\u8005\u8865\u6700\u8fd1\u6bd4\u8d5b\u7684\u9898\uff0c\u5c31\u4f1a\u653e\u5728\u6bd4\u8d5b\u7684\u754c\u9762\u6216XCPC\u3002\u7136\u540e\u65e5\u5e38\u627e\u7684\u5199\u7684\u9898\u53ef\u80fd\u4f1a\u653e\u8fd9\u3002</p>"},{"location":"cp_solving/2025/0301/#33","title":"3\u67083\u65e5","text":""},{"location":"cp_solving/2025/0301/#cf2065g-1700","title":"CF2065G *1700","text":"<p>\u5c31\u4e0a\u4e2a\u661f\u671f\u624d\u505a\u8fc7\u4e00\u9053\u7528\u4e86\u8d28\u6570\u7b5b\u548c\u7b5b\u6700\u5c0f\u8d28\u56e0\u5b50\u7684\u9898\u76ee\uff0c\u4e8e\u662f\u5c31\u60f3\u4e86\u4e0b\u8fd9\u9898\u7684\u6027\u8d28\u5f88\u5feb\u5c31\u80fd\u5bf9\u3002</p> <p>\u867d\u7136\u4e5f\u662fWA\u4e86\u4e00\u6b21\uff0c\u770b\u4e86\u6570\u636e\u624d\u77e5\u9053\u54ea\u6709\u95ee\u9898\u3002\u5e94\u8be5\u5148\u6392\u5e8f\u7684\u3002\u53ef\u4ee5\u5c11\u8003\u8651\u5f88\u591a\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int N = 2e5;\nbitset&lt;N + 1&gt; is;\nstd::vector&lt;int&gt; primes;\n// \u8bb0\u4e00\u4e0b\u6700\u5c0f\u8d28\u56e0\u5b50\nvector&lt;int&gt; minp(N + 1);\n\nvoid solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    long long ans = 0;\n    int sum = 0;\n    vector&lt;int&gt; cnt(n + 1);\n    // auto sqrtI = [&amp;](int x) {\n    //     int y = (int)sqrt(x);\n    //     return y * y == x ? y : 0;\n    // };\n    vector&lt;int&gt; a(n);\n    for (auto&amp; i : a)\n        cin &gt;&gt; i;\n    sort(a.begin(), a.end());\n    for (int i = 1; i &lt;= n; i++) {\n        int x = a[i - 1];\n        // cin &gt;&gt; x;\n        cnt[x]++;\n        if (!is[x]) {\n            // \u5982\u679c\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48\u53ea\u80fd\u548c\u5176\u4ed6\u7684\u8d28\u6570\uff0c\u9664\u4e86\u5b83\u672c\u8eab\n            sum++;\n            ans += sum - cnt[x];\n            // \u8fd8\u5f97\u770b\u4e00\u4e0b x*x\n            if (1LL * x * x &lt;= n)\n                ans += cnt[x * x];\n        } else {\n            // \u5426\u5219\u5224\u4e00\u4e0b\u6700\u5c0f\u8d28\u56e0\u5b50\n            if (!is[x / minp[x]]) {\n                // cerr &lt;&lt; x &lt;&lt; \" \" &lt;&lt; minp[x] &lt;&lt; '\\n';\n                // \u5982\u679c\u53ea\u6709\u4e24\u4e2a\u8d28\u56e0\u5b50 \u90a3\u4e48\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u7684\u6570\u91cf\n                // \u5f53\u7136\u5b83\u81ea\u5df1\u548c\u81ea\u5df1\u4e5f\u662f\u53ef\u4ee5\u7684\n                ans += cnt[minp[x]] + cnt[x];\n                if (1LL * minp[x] * minp[x] != x)\n                    ans += cnt[x / minp[x]];\n            }\n            // 2 3 ,6 ,2 7\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n/*\n6\n5 4 6 6 2 3\n\u8fd9\u4e3a\u4ec0\u4e48\u4f1a\u662f8\u5462\uff1f\n5 2,5 3,2 3,2 4\n6 2,6 3. \u5076\u6ca1\u6709\u5224 \u8d28\u6570\u53ef\u80fd\u548c\u500d\u6570\n*/\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    for (int i = 2; i &lt;= N; i++) {\n        if (!is[i]) {\n            minp[i] = i;\n            primes.push_back(i);\n            // cerr &lt;&lt; i &lt;&lt; '\\n';\n            if (1LL * i * i &gt; N)\n                continue;\n            for (int j = i * i; j &lt;= N; j += i) {\n                is[j] = true, minp[j] = i;\n            }\n        }\n    }\n    // cout &lt;&lt; primes.size() &lt;&lt; '\\n';\n    int T = 1;\n    cin &gt;&gt; T;\n    while (T--)\n        solve();\n    return 0;\n}\n</code></pre>"},{"location":"cp_solving/2025/0301/#cf2065f-1700","title":"CF2065F *1700","text":"<p>\u8fd9\u4e2a\u66f4\u662f\u7b80\u5355\u4e86\u3002\u6ee1\u8db3\u7b54\u6848\u7684\u60c5\u51b5\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5224\u65ad\u957f\u5ea6\u4e3a2\u548c3\u7684\u8def\u5f84\u662f\u5426\u6ee1\u8db3\u3002\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u4f46\u662fDFS\u662f\u4e0d\u662f\u53ef\u80fd\u4f1a\u8d85\u65f6\u6765\u7740\u3002</p> <p>\u53ea\u8981\u8fde\u8fb9\u7684\u65f6\u5019\u5c31\u5904\u7406\u5c31\u884c\u4e86\u3002\u597d\u5427DFS\u597d\u50cf\u4e5f\u884c\u3002</p> <p>\u770b\u4e86\u4e0b\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u8f93\u5165\u65f6\u5148\u5224\u4e0b\u957f\u5ea6\u4e3a2\u7684\uff0c\u7136\u540e\u627e\u7684\u65f6\u5019\u53ea\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u70b9\u8fde\u7684\u70b9\uff0c\u770b\u8fd9\u4e00\u6b21\u6807\u8bb0\u662f\u5426\u6709\u91cd\u590d\u7684\u3002\u4e5f\u5f88\u597d\u3002\u5dee\u4e0d\u591a\uff0c\u6216\u8005\u6bcf\u6b21\u5f00\u4e2aset\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n + 1);\n    string s(n, '0');\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;set&lt;int&gt;&gt; g(n + 1);\n    // vector&lt;vector&lt;int&gt;&gt; adj(n + 1, vector&lt;int&gt;());\n    for (int i = 1; i &lt; n; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        if (a[u] == a[v]) {\n            s[a[u] - 1] = '1';\n        }\n        if (g[u].contains(a[v])) {\n            s[a[v] - 1] = '1';\n        } else\n            g[u].insert(a[v]);\n        if (g[v].contains(a[u])) {\n            s[a[u] - 1] = '1';\n        } else\n            g[v].insert(a[u]);\n        // g[u].insert(a[v]), g[v].insert(a[u]);\n    }\n    // auto dfs = [&amp;](auto&amp;&amp; self, int u, int pre, int val, int cnt, int len) -&gt; void {\n    //     if ((s[val - 1] == '1') || (pre &amp;&amp; cnt &gt; 0)) {\n    //         // cerr &lt;&lt; pre &lt;&lt; \" \" &lt;&lt; u &lt;&lt; \" \" &lt;&lt; val &lt;&lt; '\\n';\n    //         s[val - 1] = '1';\n    //         return;\n    //     }\n    //     if (len == 3)\n    //         return;\n    //     for (auto v : adj[u]) {\n    //         if (v == pre)\n    //             continue;\n    //         if (a[v] == val)\n    //             self(self, v, u, val, cnt + 1, len + 1);\n    //         else\n    //             self(self, v, u, val, cnt - 1, len + 1);\n    //     }\n    // };\n    // for (int i = 1; i &lt;= n; i++) {\n    //     dfs(dfs, i, 0, a[i], 1, 0);\n    // }\n    cout &lt;&lt; s &lt;&lt; '\\n';\n}\n</code></pre> <p><code>set::count</code> \u548c <code>contains</code> \u6548\u7387\u5dee\u522b\u4e0d\u662f\u5f88\u5927\uff0c\u90fd\u662f \\(\\log n\\) \uff0c\u4f46\u662f <code>multiset::count</code> \u7684\u590d\u6742\u5ea6\u65f6 <code>n</code> \u3002</p>"},{"location":"cp_solving/2025/0301/#cf2065e-1600","title":"CF2065E *1600","text":"<p>\u6709\u70b9\u7b80\u5355\u7684\u6784\u9020\u3002</p> <pre><code>void solve()\n{\n    int n, m, k;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    auto work = [](int n, int m, int k) -&gt; string {\n        // \u8ba9n \u5927\u4e8e m\n        // \u76f4\u63a5\u653ek\u4e2a0\uff0c\n        // \u7136\u540e\u5982\u679cn-k&gt;m \u90a3\u4e48\u4e0d\u884c\n\n        // \u597d\u50cf\u4e5f\u884c\n        // \u4e0d\u5bf9\uff0c\u5e94\u8be5\u4e0d\u884c\u5427\uff0c\u6bcf\u4e2a\u90fd\u9700\u8981\u4e00\u4e2a1\u6765\u963b\u6321\u3002\n\n        // \u8fd8\u6709\u5176\u4ed6\u65b9\u5f0f\u5417\uff1f\n        string s(k, '0');\n        if (k &gt; n || n - k &gt; m) {\n            return {};\n        }\n        n -= k;\n        for (int i = k; n &amp;&amp; m; i += 2) {\n            s += \"10\";\n            n--, m--;\n        }\n        // m\u5269\u4e0b\u7684\u80af\u5b9a\u5c0f\u4e8ek\n        s = string(m, '1') + s;\n        return s;\n    };\n    string ans = (n &gt; m ? work(n, m, k) : work(m, n, k));\n    if (n &lt; m) {\n        for (int i = 0; i &lt; ans.size(); i++) {\n            if (ans[i] == '0')\n                ans[i] = '1';\n            else\n                ans[i] = '0';\n        }\n    }\n    if (ans.empty())\n        cout &lt;&lt; \"-1\\n\";\n    else\n        cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/2025/0301/#35","title":"3\u67085\u65e5","text":""},{"location":"cp_solving/2025/0301/#cf2006b-1800","title":"CF2006B *1800","text":"<p>\u7edf\u8ba1\u5f53\u524d\u7684\u5df2\u77e5\u8fb9\u7684\u6743\u503c\u4e4b\u548c <code>sum</code> \uff0c\u82e5\u662f\u4e00\u6761\u8def\u5f84\u4e0d\u662f\u6240\u6709\u7684\u8fb9\u90fd\u5df2\u7ecf\u786e\u5b9a\uff0c\u90a3\u4e48\u5b83\u7684\u6743\u503c\u53ef\u4ee5\u52a0\u4e0a <code>w-sum</code>  \u3002\u800c\u5176\u5b9e\u6bcf\u6761\u8fb9\u90fd\u4e00\u5b9a\u4f1a\u88ab\u7ecf\u8fc7\u4e24\u6b21\u3002</p> <p>\u8fd9\u4e2a\u786e\u5b9e\u662f\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u7ed3\u8bba\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u770b\u6709\u591a\u5c11\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u5df2\u7ecf\u88ab\u5168\u90e8\u8d4b\u503c\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n;\n    long long w;\n    cin &gt;&gt; n &gt;&gt; w;\n    vector&lt;vector&lt;int&gt;&gt; adj(n + 1, vector&lt;int&gt;());\n    vector&lt;vector&lt;int&gt;&gt; f(n + 1, vector&lt;int&gt;());\n    vector&lt;int&gt; p(n + 1), cnt(n + 1);\n    for (int i = 2; i &lt;= n; i++) {\n        cin &gt;&gt; p[i];\n        adj[p[i]].push_back(i);\n    }\n    auto dfs = [&amp;](auto&amp;&amp; self, int u) -&gt; int {\n        int mx = u;\n        // cerr&lt;&lt;u&lt;&lt;'\\n';\n        for (auto v : adj[u]) {\n            cnt[mx]++;\n            f[v].push_back(mx);\n            mx = max(mx, self(self, v));\n            cnt[mx]++;\n            f[v].push_back(mx);\n        }\n        return mx;\n    };\n    dfs(dfs, 1);\n    // for(int i=1;i&lt;=n;i++)\n    //     cerr&lt;&lt;cnt[i]&lt;&lt;\" \\n\"[i==n];\n    // return ;\n    long long ans = 0, sum = 0;\n    int tot = n;\n    for (int z = 1; z &lt; n; z++) {\n        int x;\n        long long y;\n        cin &gt;&gt; x &gt;&gt; y;\n        for (auto v : f[x]) {\n            cnt[v]--;\n            if (!cnt[v]) {\n                --tot;\n            }\n        }\n        w -= y;\n        ans += 2 * y;\n        cout &lt;&lt; ans + 1LL * tot * w &lt;&lt; ' ';\n    }\n    cout &lt;&lt; '\\n';\n}\n</code></pre> <p>\u8bf4\u5b9e\u8bdd\uff0c\u53ef\u80fd\u8fd8\u662f\u6709\u4e9b\u5730\u65b9\u4e0d\u592a\u7406\u89e3\u7684\u3002</p>"},{"location":"cp_solving/2025/0301/#cf1990d-1800","title":"CF1990D *1800","text":"<p>\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u4e2a\u7eaf\u6c34\u9898\u4e86\u3002\u5f88\u663e\u7136\u5982\u679c\u5f53\u524d\u8fd9\u4e00\u884c\u76841\u7684\u4e2a\u6570\u662f\u5927\u4e8e2\u7684\u8bdd\uff0c\u90a3\u54b1\u4eec\u80af\u5b9a\u5f97\u6d88\u9664\u4e00\u884c\u5427\u3002\u5982\u679c\u662f\u4e24\u4e2a2\u4e14\u8fde\u7740\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u4ecb\u610f\u53bb\u4f7f\u7528 1 \u64cd\u4f5c\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4ece\u4e0a\u5f80\u4e0b\u904d\u5386\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u4f7f\u75281\u64cd\u4f5c\u4f1a\u662f\u5728\u4ec0\u4e48\u5730\u65b9\u5462\uff1f\u80af\u5b9a\u662f\u5728\u7b2c\u4e00\u5217\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6b64\u65f6\u5982\u679c\u4e0b\u4e00\u884c\u7684\u6570\u91cf\u662f\u5c0f\u4e8e\u7b49\u4e8e2\uff0c\u54b1\u4eec\u65e0\u9700\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u5982\u679c\u662f\u572834\u4e4b\u95f4\uff0c\u6211\u4eec\u80af\u5b9a\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b211\u64cd\u4f5c\uff0c\u4e14\u663e\u7136\u80af\u5b9a\u662f\u53ea\u80fd\u5728\u7b2c3\u5217\u4f7f\u7528\u3002</p> <p>\u5c31\u8bb0\u4e00\u4e0b\u4e0a\u4e00\u884c\u7684\u4f7f\u7528\u60c5\u51b5\u5c31\u597d\u4e86\uff0c\u800c\u4e14\u53ea\u4f1a\u5728\u7b2c\u4e00\u5217\u548c\u7b2c\u4e09\u5217\u4f7f\u7528\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;int&gt; lst(n + 1);\n    int ans = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        if (!a[i])\n            continue;\n        if (lst[i - 1] == 1) {\n            if (a[i] &lt;= 2)\n                continue;\n            if (a[i] &gt; 4) {\n                ans++;\n                continue;\n            }\n            lst[i] = 3, ans++;\n        } else if (lst[i - 1] == 3) {\n            if (a[i] &gt; 4) {\n                ans++;\n                continue;\n            }\n            ans++;\n            lst[i] = 1;\n            continue;\n        } else {\n            if (a[i] &lt;= 2) {\n                lst[i] = 1;\n                ans++;\n            } else\n                ans++;\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/2025/0301/#cf1987d-1800","title":"CF1987D *1800","text":"<p>\u6211\u4eec\u5148\u5bf9A\u8fdb\u884c\u53bb\u91cd\uff0c\u8bb0\u4e00\u4e0b\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> <p>\u8fd9\u65f6\u5019\u6211\u4eec\u4ee4 \\(n\\) \u4e3a\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p> <p>\u6211\u4eec\u9700\u8981\u4ece \\(n\\) \u4e2a\u6570\u5b57\u91cc\u9009\u51fa \\(k\\) \u4e2a\u6570\u5b57\u8fdb\u884c\u5220\u9664\uff0c\u4e14\u5e0c\u671b\u5220\u9664\u7684\u6570\u5b57\u6700\u591a\u3002</p> <p>\u6211\u4eec\u5220\u9664\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u7684\u6570\u91cf\u4e00\u5b9a\u8981\u5c0f\u4e8e\u5b83\u524d\u9762\u7684\u4e0d\u540c\u5143\u7d20\u7684\u6570\u91cf\uff0c\u5373\u6ee1\u8db3\u80fd\u5728Alice\u5230\u8fd9\u91cc\u4e4b\u524d\u5220\u9664\u5b8c\u8fd9\u4e2a\u6570\u5b57\u3002\u540e\u9762\u7684\u540c\u7406\u3002</p> <p>\u53ef\u4ee5\u7528 dp \u6765\u5b9e\u73b0\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;int&gt; A(1), c(1);\n    sort(a.begin() + 1, a.end());\n    for (int i = 1, cnt = 0; i &lt;= n; i++) {\n        cnt++;\n        if ((i == n) || (a[i + 1] != a[i])) {\n            A.push_back(a[i]);\n            c.push_back(cnt);\n            cnt = 0;\n        }\n    }\n    n = A.size() - 1;\n    // vector&lt;vector&lt;int&gt;&gt; dp(n + 1, vector&lt;int&gt;(n + 1, 6666));\n    vector&lt;int&gt; dp(n + 1, 6666);\n    dp[0] = 0;\n    cerr &lt;&lt; n &lt;&lt; '\\n';\n    for (int i = 1; i &lt;= n; i++) {\n        vector ndp = dp;\n        for (int j = 1; j &lt;= i; j++) {\n            // if (dp[j - 1] == 6666)\n            //     break;\n            if (dp[j - 1] + c[i] &lt;= i - j)\n                ndp[j] = min(dp[j - 1] + c[i], dp[j]);\n        }\n        dp = ndp;\n    }\n    for (int i = n; i &gt;= 0; i--) {\n        if (dp[i] != 6666) {\n            cout &lt;&lt; n - i &lt;&lt; '\\n';\n            return;\n        }\n    }\n}\n</code></pre> <p>\\(dp_{i,j}\\) \u8868\u793a\u4ece\u524d \\(i\\) \u4e2a\u6570\u5b57\u91cc\u9009\u51fa \\(j\\) \u4e2a\u8fdb\u884c\u5220\u9664\u82b1\u8d39\u7684\u6700\u5c0f\u56de\u5408\u6570\u3002</p>"},{"location":"cp_solving/2025/0301/#details","title":"details","text":""},{"location":"cp_solving/2025/0301/#31","title":"3\u67081\u65e5","text":"<ul> <li> CF2071C</li> <li> 24\u56db\u5ddd\u7701\u8d5bBFG</li> <li> ABC394ABCD</li> </ul> <p>\u8865\u4e86\u6628\u665a\u6ca1\u5199\u51fa\u6765\u7684 CF2071C \u3002</p> <p>\u4e2d\u5348VP\u4e862024\u5e74\u56db\u5ddd\u7701\u8d5b\uff0c\u5927\u6982110\u540d\u94dc\uff0c54\u94f6\uff0c\u6211\u4eec80\u3002</p> <p>\u53ea\u80fd\u8bf4\u7b97\u6b63\u5e38\u5427\uff0c\u5f97\u591a\u8865\u9898\u554a\uff0c\u80fd\u81ea\u5df1\u5199\u51fa\u6765\u7684\uff0c\u5927\u6982\u7387\u5e2e\u52a9\u4e0d\u5927\uff0c\u53ea\u6709\u89c9\u5f97\u5750\u7262\u7684\u9898\u76ee\u624d\u4f1a\u6709\u4e9b\u4ef7\u503c\u3002\u3002\u3002</p> <p>\u8fd9\u573a B\uff0c F \uff0c G \uff0c\u8865\u9898\u90fd\u53ef\u4ee5\u770b\u4e0b\u3002</p> <p>\u665a\u4e0a\u6253\u4e86 ABC394 \uff0c\u53ea\u5199\u4e864\u9898\uff0cE\u9898\u6ca1\u5199\u51fa\u6765\uff0c\u6ca1\u591a\u5c11\u65f6\u95f4\u4e86\uff0cD\u9898\u5199\u5f97\u592a\u6162\u4e86\uff0cE\u4e00\u5f00\u59cb\u53c8\u60f3\u9519\u4e86\u3002</p> <p>\u5e94\u8be5\u662fdijkstra\u677f\u5b50\u9898\u3002</p>"},{"location":"cp_solving/2025/0301/#32","title":"3\u67082\u65e5","text":"<ul> <li> ABC395E</li> <li> ABC395F</li> <li> CF2071D1</li> <li> 24\u56db\u5ddd\u7701\u8d5bB</li> <li> 24\u56db\u5ddd\u7701\u8d5bF</li> <li> \u725b\u5ba2\u5468\u8d5b83 ABCDE</li> </ul>"},{"location":"cp_solving/2025/0301/#33_1","title":"3\u67083\u65e5","text":"<ul> <li> CF2065G</li> <li> CF2065F</li> <li> CF2065E</li> </ul>"},{"location":"cp_solving/2025/0301/#35_1","title":"3\u67085\u65e5","text":"<ul> <li> CF2006B</li> <li> CF1990D</li> <li> CF1987D</li> </ul>"},{"location":"cp_solving/2025/0301/#37","title":"3\u67087\u65e5","text":"<p>\u5509\u5509\uff0c\u6628\u5929\u53c8\u662f\u6ca1\u548b\u5199\u9898\uff0c\u4eca\u5929\u518d\u597d\u597d\u5199\u4e0b\uff0c\u4eca\u5929\u676d\u7535\u6625\u5b63\u8054\u8d5b\u7b2c\u4e00\u573a\u3002</p>"},{"location":"cp_solving/2025hdu-spring/01/","title":"2025\u201c\u9489\u8019\u7f16\u7a0b\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u7b97\u6cd5\u8bbe\u8ba1\u6625\u5b63\u8054\u8d5b","text":"<p>\u6211\u611f\u89c9\u81ea\u5df1\u6c34\u5e73\u5c31\u662f\u83ab\u540d\u5176\u5999\u5f88\u4f4e\uff0c\u4ee5\u524d\u6216\u8bb8\u8fd8\u80fd\u627e\u501f\u53e3\u8bf4\u81ea\u5df1\u662f\u5927\u4e00\u7684\uff0c\u73b0\u5728\u5462\uff0c\u5df2\u7ecf\u662f\u5927\u4e8c\u4e86\u3002\u8fd8\u662f\u6bd4\u4e0d\u8fc7\u5f88\u591a\u4eba\u634f\u3002</p> <p>\u54c8\u54c8\u54c8\uff0c\u6ca1\u5fc5\u8981\u60f3\u90a3\u4e48\u591a\uff0c\u597d\u597d\u8865\u9898\u5c31\u884c\u3002\ud83d\ude4c\ud83d\ude4c\ud83d\ude2d\ud83d\ude2d\ud83d\ude2d\ud83d\ude4c\ud83d\ude4c</p> <p>\u8fd9\u573a\u505a\u4e86\u4eba\u6700\u591a\u7684\u56db\u4e2a\u9898\uff0c\u5176\u5b9e\u4e5f\u8fd8\u884c\u4e86\u30021005\u662fWA\u4e8615\u6b21\u8fc7\u7684\uff0c\u5f88\u4e0d\u5bb9\u6613\u4e86\u3002\u867d\u7136\u5f88\u591a\u90fd\u4e71\u4ea4\u7684\uff0c\u4f46\u662f\u8fd9\u573a\u5bf9\u6211\u8868\u73b0\u8fd8\u884c\u4e86\u7684\u3002</p> <p>1005\u4e00\u5f00\u59cb\u6ca1\u60f3\u7740\u7528dijkstra\u7684\uff0c\u5c31\u4e00\u5806\u5faa\u73af\u4e71\u641e\uff0c\u6700\u540e\u5f00\u59cb\u5199\u6700\u77ed\u8def30\u5206\u949fac\u4e86\uff0c\u4e2d\u95f4wa\u4e24\u53d1\uff0c\u6ca1\u4ed4\u7ec6\u68c0\u67e5\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c1006\u8fd9\u4e2a\u7b7e\u5230\u9898\u90fd WA \u4e86\u56db\u6b21\u3002\u6ca1\u5fc5\u8981\u90a3\u4e48\u6025\u7684\u30021007\u521a\u5f00\u59cb\u770b\u5230\u88ab\u5413\u5230\u4e86\uff0c\u9898\u76ee\u5f88\u4e45\u6ca1\u770b\u61c2\uff0c\u540e\u6765\u770b\u5230\u5f88\u591a\u95ee\u7684\uff0c\u7a0d\u5fae\u653e\u677e\u4e86\u70b9\uff0c\u63a8\u4e86\u4e00\u4e0bac\u4e86\u5f88\u723d\uff0c\u666e\u901a\u535a\u5f08\u5427\u3002</p> <p>\u597d\u597d\u8865\u9898\u5427\uff0c\u6162\u6162\u770b\u3002\u5148\u81ea\u5df1\u770b\u770b\u9898\u8bd5\u8bd5\u3002</p> <p>\u5176\u5b9e\u5f88\u591a\u65f6\u5019\uff0c\u9898\u76ee\u53ea\u662f\u770b\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u5176\u5b9e\u6ca1\u4ec0\u4e48\u7684\uff0c\u9759\u4e0b\u5fc3\u6765\uff0c\u6162\u6162\u770b\u770b\u9898\u3002</p>"},{"location":"cp_solving/AtCoder/ABC395/","title":"Atcoder Beginner Contest 395","text":"<p>\u6bd4\u8d5b\u65f6\u95f4: 2025-03-01</p>"},{"location":"cp_solving/AtCoder/ABC395/#atcoder-beginner-contest-395","title":"AtCoder Beginner Contest 395","text":"<p>\u8d5b\u65f6\u53ea\u51fa\u4e86ABCD\uff0cE\u5176\u5b9e\u4e5f\u53ea\u662f\u4e2a\u7eff\u9898\uff0c\u521a\u624d\u8865\u7684\u65f6\u5019\u5012\u662f\u5f88\u5feb\u5c31A\u4e86\uff0c\u8d5b\u65f6\u5199\u5f97\u65f6\u5019\u6ca1\u591a\u5c11\u65f6\u95f4\u4e86\uff0c\u4e14\u65b9\u6cd5\u9519\u4e86\uff0c\u6211\u600e\u4e48\u4e0a\u6765\u76f4\u63a5\u5199dfs\uff0c\u60f3\u5403TLE\u4e86\u3002</p>"},{"location":"cp_solving/AtCoder/ABC395/#a","title":"A","text":"<p>\u76f4\u63a5\u5224\u65ad\u5c31\u884c\u4e86\u3002\u6211\u6ca1\u6ce8\u610f\u8fd8\u4e0d\u80fd\u76f8\u7b49\uff0c\u7136\u540e\u7528\u4e86is_sorted()\uff0c\u4e14\u53ea\u6d4b\u4e86\u524d\u4e24\u4e2a\u6837\u4f8b\u559c\u63d0WA\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;int&gt;a(n);\n    for(int i=0;i&lt;n;i++)\n        cin&gt;&gt;a[i];\n    for(int i=1;i&lt;n;i++){\n        if(a[i]&lt;=a[i-1]){\n            cout&lt;&lt;\"No\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"Yes\\n\";\n}\n</code></pre>"},{"location":"cp_solving/AtCoder/ABC395/#b","title":"B","text":"<p>\u76f4\u63a5\u6a21\u62df\u5c31\u884c\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;vector&lt;char&gt;&gt;s(n+1,vector&lt;char&gt;(n+1));\n    for(int i=1;i&lt;=n;i++){\n        int j=n-i+1;\n        if(j&lt;i) continue;\n        for(int k=i;k&lt;=j;k++)\n            for(int l=i;l&lt;=j;l++){\n                if(i&amp;1) s[k][l]='#';\n                else s[k][l]='.'; \n            }\n    }\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=n;j++){\n            cout&lt;&lt;s[i][j];\n        }\n        cout&lt;&lt;'\\n';\n    }\n}\n</code></pre>"},{"location":"cp_solving/AtCoder/ABC395/#c","title":"C","text":"<p>\u8bb0\u4e00\u4e0b\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6bcf\u6b21\u9047\u5230\u5c31\u66f4\u65b0\u5c31\u884c\u4e86\u3002</p> <pre><code>constexpr int N = 1e6;\n\nint lst[N+1];\n\nvoid solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;int&gt;a(n+1);\n    int ans=n+1;\n    for(int i=1;i&lt;=n;i++){\n        int x;\n        cin&gt;&gt;x;\n        if(lst[x]){\n            ans=min(ans,i-lst[x]+1);\n        }\n        lst[x]=i;\n    }\n    cout&lt;&lt;(ans==n+1?-1:ans)&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/AtCoder/ABC395/#d","title":"D","text":"<p>\u7a0d\u5fae\u6709\u70b9\u64cd\u4f5c\u554a\uff0c\u63a7\u4e86\u6211\u4e00\u4e2a\u5c0f\u65f6\u3002</p> <p>\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u601d\u8def\u6ca1\u60f3\u660e\u767d\uff0c\u975e\u5e38\u7684\u6df7\u4e71\uff0c\u73b0\u5728\u6765\u7a0d\u5fae\u6574\u7406\u4e00\u4e0b\u3002</p> <p>\u8fd9\u4e2a\u64cd\u4f5c \\(2\\) \u9700\u8981\u4ea4\u6362 \\(a\\) \u548c \\(b\\) \u91cc\u9762\u88c5\u7684\u9e1f\u3002\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u771f\u7684\u53bb\u6362\uff0c\u56e0\u4e3a\u66f4\u65b0\u6bcf\u4e2a\u9e1f\u7684\u5bb6\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53ea\u6539\u53d8\u5b83\u4eec\u4ee3\u8868\u7684\u503c\uff0c\u6bd4\u5982\u8bf4\u539f\u672c\u6bcf\u4e2a\u4eba\u7684\u5bb6\u5c31\u662f \\(i\\) \uff0c\u90a3\u6211\u73b0\u5728\u4ea4\u6362 \\(1\\) \u548c \\(2\\) \uff0c\u600e\u4e48\u80fd\u4f7f\u5f97\u4e0d\u7528\u6539\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u5bb6\u5462\uff1f</p> <p>\u6211\u4eec\u5176\u5b9e\u76f8\u5f53\u4e8e\u53ef\u4ee5\u53ea\u7528\u6539\u8fd9\u4e24\u4e2a\u5de2\u7684\u7f16\u53f7\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u4ea4\u6362 \\(a\\) \u548c \\(b\\) \u8fd9\u4e24\u4e2a\u5de2\u7684\u5185\u5bb9\uff0c\u90a3\u5176\u5b9e\u4e5f\u76f8\u5f53\u4e8e\u628a \\(a\\) \u7684\u7f16\u53f7\u6539\u6210 \\(b\\) \uff0c\\(b\\) \u6539\u6210 \\(a\\) \u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u8bbe \\(home_i\\) \u4ee3\u8868\u7684\u662f\u7b2c \\(i\\) \u53ea\u9e1f\u7684\u5bb6\u3002\u5047\u8bbe\u6211\u4eec\u9700\u8981\u4ea4\u6362 \\(1\\) \u548c \\(2\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u4fee\u6539\u5b83\u4eec\u6620\u5c04\u7684\u503c\u3002\u5373\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u539f\u59cb\u7684\u7b2c \\(i\\) \u4e2a\u5de2\u7a74\u73b0\u5728\u5b83\u7684\u4f4d\u7f6e\u662f\u591a\u5c11\u3002\u6bd4\u5982 \\(p_i\\) \u4ee3\u8868\u7b2c \\(i\\) \u4e2a\u5de2\u7a74\u7684\u4f4d\u7f6e\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8981\u8f93\u51fa \\(i\\) \u7684\u5bb6\u9700\u8981\u8f93\u51fa \\(p_{home_i}\\) \uff0c\\(home_i\\) \u4ee3\u8868\u7b2c \\(i\\) \u53ea\u9e1f\uff0c\u5b83\u73b0\u5728\u7684\u5bb6\u7684\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\u7136\u540e \\(p_i\\) \u5c31\u53ef\u4ee5\u8868\u793a\u5f53\u521d\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u5de2\u73b0\u5728\u6240\u5728\u7684\u4f4d\u7f6e\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u679c\u8981\u4ea4\u6362\u4e24\u4e2a\u5de2\uff0c\u53ea\u9700\u8981\u4ea4\u6362\u5b83\u4eec\u5bf9\u5e94\u7684 \\(p\\) \u503c\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u9700\u8981\u4ea4\u6362\u5de2 \\(a\\) \u548c \\(b\\) \u65f6\uff0c\u8fd9\u91cc\u7ed9\u7684\u662f\u5de2\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u7684 \\(p\\) \u8bb0\u7684\u662f\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u7684\u5de2\u7684\u73b0\u5728\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u8bb0\u4e00\u4e0b\u6bcf\u4e2a\u4f4d\u7f6e\u5f53\u524d\u653e\u7684\u662f\u54ea\u4e00\u4e2a\u5de2\u3002</p> <p>\u8fd9\u4e2a\u66f4\u7b80\u5355\u5b9e\u73b0\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a \\(pos\\) \u6570\u7ec4\u5b9e\u73b0\uff0c\u53ea\u6709\u64cd\u4f5c \\(2\\) \u4f1a\u79fb\u52a8\u9e1f\u5de2\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u4ea4\u6362 \\(pos_a\\) \u548c \\(pos_b\\) \u4ee3\u8868\u5c31\u6362 \\(a\\) \u548c \\(b\\) \u4f4d\u7f6e\u4e0a\u7684\u9e1f\u5de2\u3002</p> <p>\u7136\u540e\u518d\u4ea4\u6362 \\(home_{pos_a}\\) \u548c \\(home_{pos_b}\\) \uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u5b9e\u9645\u7684\u9e1f\u5de2\u7684\u5bf9\u5e94\u7684\u503c\u3002</p> <pre><code>void solve()\n{\n    int n,q;\n    cin&gt;&gt;n&gt;&gt;q;\n    vector&lt;int&gt;home(n+1);\n    vector&lt;int&gt;p(n+1),pos(n+1);\n    for(int i=1;i&lt;=n;i++)\n        home[i]=p[i]=pos[i]=i;\n    while(q--){\n        int op;\n        cin&gt;&gt;op;\n        if(op==1){\n            int a,b;\n            cin&gt;&gt;a&gt;&gt;b;\n            home[a]=pos[b];\n            //\u6211\u4eec\u8fd8\u5f97\u77e5\u9053 \u54ea\u4e2api \u7b49\u4e8e b...\n            //\u8fd9\u6837\u597d\u50cf\u4e5f\u4e0d\u5bf9\uff0c\u7eaf\u4e71\u5199\u4e86\u4e00\u5768\u3002\u3002\u3002\n        }else if(op==2){\n            int a,b;\n            cin&gt;&gt;a&gt;&gt;b;\n            //p[30]\u4e0d\u5c31\u662f8\u5417\uff1f\n            swap(p[pos[a]],p[pos[b]]);\n            //p[rev[b]] p[xx]=b\n            swap(pos[a],pos[b]);\n            // cerr&lt;&lt;p[a]&lt;&lt;\" \"&lt;&lt;p[b]&lt;&lt;'\\n';\n            // rev[p[p[a]]]=p[a],p[p[b]]=p[b];\n        }else{\n            int a;\n            cin&gt;&gt;a;\n            cout&lt;&lt;p[home[a]]&lt;&lt;'\\n';\n        }\n        // for(int i=1;i&lt;=n;i++)\n        //     cerr&lt;&lt;p[i]&lt;&lt;\" \\n\"[i==n];\n        // for(int i=1;i&lt;=n;i++)\n        //     cerr&lt;&lt;rev[i]&lt;&lt;\" \\n\"[i==n];\n    }\n    // cerr&lt;&lt;rev[7]&lt;&lt;\" \"&lt;&lt;rev[8]&lt;&lt;\" \"&lt;&lt;rev[30]&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/AtCoder/ABC395/#e","title":"E","text":"<p>\u611f\u89c9\u786e\u5b9e dijkstra \u677f\u9898\u3002\u53ea\u662f\u7a0d\u5fae\u8bb0\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u5c31\u884c\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n, m, x;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;\n    set&lt;pair&lt;int, int&gt;&gt; edges;\n    vector&lt;vector&lt;int&gt;&gt; adj(n + 1, vector&lt;int&gt;());\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        edges.insert({ u, v });\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    vector&lt;long long&gt; cost(n + 1, 1e18);\n    vector&lt;vector&lt;long long&gt;&gt; dis(n + 1, vector&lt;long long&gt;(2, 1e18));\n    dis[1][0] = 0;\n    auto dijkstra = [&amp;]() {\n        priority_queue&lt;array&lt;long long, 3&gt;, vector&lt;array&lt;long long, 3&gt;&gt;, greater&lt;&gt;&gt; pq;\n        pq.push({ 0, 1, 0 }); // \u8ddd\u79bb \u7f16\u53f7 \u72b6\u6001\n        while (!pq.empty()) {\n            auto [d, u, rev] = pq.top();\n            pq.pop();\n            if (d &gt; dis[u][rev])\n                continue;\n            for (auto v : adj[u]) {\n                if (rev) {\n                    if (edges.contains({ v, u })) {\n                        if (dis[u][rev] + 1 &lt; dis[v][rev]) {\n                            dis[v][rev] = dis[u][rev] + 1;\n                            pq.push({ dis[v][rev], v, rev });\n                        }\n                    } else {\n                        if (dis[u][rev] + x + 1 &lt; dis[v][rev ^ 1]) {\n                            dis[v][rev ^ 1] = dis[u][rev] + x + 1;\n                            pq.push({ dis[v][rev ^ 1], v, rev ^ 1 });\n                        }\n                    }\n                } else {\n                    if (edges.contains({ u, v })) {\n                        if (dis[u][rev] + 1 &lt; dis[v][rev]) {\n                            dis[v][rev] = dis[u][rev] + 1;\n                            pq.push({ dis[v][rev], v, rev });\n                        }\n                    } else {\n                        if (dis[u][rev] + x + 1 &lt; dis[v][rev ^ 1]) {\n                            dis[v][rev ^ 1] = dis[u][rev] + x + 1;\n                            pq.push({ dis[v][rev ^ 1], v, rev ^ 1 });\n                        }\n                    }\n                }\n            }\n        }\n    };\n    dijkstra();\n    cout &lt;&lt; min(dis[n][0], dis[n][1]) &lt;&lt; '\\n';\n}\n</code></pre> <p>\u660e\u5929\u518d\u628a F \u770b\u4e86\uff0c\u662f\u4e2a\u9752\u9898\u3002</p>"},{"location":"cp_solving/AtCoder/ABC395/#f","title":"F","text":"<p>\u770b\u51fa\u6765\u4e86\u662f\u4e8c\u5206\uff0c\u4f46\u662fcheck\u4e0d\u592a\u4f1a\u5199\u3002</p> <p>\u6211\u672c\u6765\u8bb0\u6bcf\u4e2a\u7684 [l,r] \uff0c\u7136\u540e\u770b\u6bcf\u4e2a\u76f8\u90bb\u7684\u80fd\u4e0d\u80fd\u76f8\u4ea4\uff0c\u4f46\u6211\u5224\u7684 [l,r] \u5c31\u662f\u7b80\u5355\u7684\u770b\u5b83\u81ea\u5df1\u7684\u9ad8\u5ea6\u3002\u5176\u5b9e\u53ef\u4ee5\u6574\u4f53\u8003\u8651\u3002</p> <p>\u7528\u4e00\u4e2a \\([L,R]\\) \u6765\u8bb0\u4e00\u4e0b\u5f53\u524d\u7684\u5408\u6cd5\u7684\u533a\u95f4\uff0c\u6bcf\u6b21\u53ef\u4ee5\u88ab\u6269\u5c55\u5230 \\([L-x,R+x]\\) , \u7136\u540e\u5f53\u524d\u7684 \\(u\\) \u7684\u8303\u56f4\u662f \\([max(0,H-d),U]\\) \u3002</p> <p>\u4e00\u76f4\u6269\u5c55\u533a\u95f4\u7136\u540e\u5224\u6709\u6ca1\u6709\u4ea4\u96c6\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n, x;\n    cin &gt;&gt; n &gt;&gt; x;\n    vector&lt;int&gt; u(n), d(n);\n    for (int i = 0; i &lt; n; i++)\n        cin &gt;&gt; u[i] &gt;&gt; d[i];\n    long long lo = 0, hi = 2e9 + 1;\n    auto check = [&amp;](long long H) {\n        long long L = 0, R = H;\n        for (int i = 0; i &lt; n; i++) {\n            //:\u4e4b\u524d\u7684\u533a\u95f4 [L-X,R+X]\n            //:\u5f53\u524d\u7684\u533a\u95f4 [max(0,H-D),U]\n            L = max({L-x,H-d[i],0LL});\n            R = min(R + x, 1LL*u[i]);\n            if(L&gt;R) return false;\n        }\n        return true;\n    };\n    while (lo &lt; hi - 1) {\n        long long mid = (lo + hi) &gt;&gt; 1;\n        if (check(mid))\n            lo = mid;\n        else\n            hi = mid;\n    }\n    // cout&lt;&lt;check(2)&lt;&lt;'\\n';\n    long long ans = 0;\n    for (int i = 0; i &lt; n; i++) {\n        ans += u[i] + d[i] - lo;\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2064/","title":"Codeforces Round 1005 (Div. 2)","text":"<p>2025-02-16 Codeforces Round 1005 (Div. 2)</p>"},{"location":"cp_solving/Codeforces/2064/#codeforces-round-1005-div-2","title":"Codeforces Round 1005 (Div. 2)","text":"<p>\u6bd4\u8d5b\u94fe\u63a5: Codeforces Round 1005 (Div. 2)</p> <p>\u5f88\u62bd\u8c61\u7684\u4e00\u96c6\u3002\u7b97\u624b\u901f\u573a\u5427\uff0c\u8fd9C\u6709\u70b9\u641e\u7b11\u3002\u3002\u3002</p> <p>\u4f46\u662fB\u6211\u53c8\u7a81\u7136\u611f\u89c9\u6709\u70b9\u6ca1\u60f3\u660e\u767d\u4e86\u3002\u7136\u540eD\u611f\u89c9\u5f88\u96be\u641e\u4e86\uff0c\u57fa\u672c\u4e0d\u7528\u770b\u4e86\u3002\u3002\u3002</p> <p></p>"},{"location":"cp_solving/Codeforces/2064/#a","title":"A","text":"<p>\u8981\u4f7f\u5f97s\u91cc\u9762\u53ea\u67090\uff0ct\u91cc\u9762\u53ea\u67091\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u79cd\u64cd\u4f5c\u65b9\u5f0f\u5c31\u662f\uff0c\u628a\u6700\u524d\u9762\u76841\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u603b\u4f53\u79fb\u52a8\u5230t\u91cc\u9762\uff0c\u7136\u540e\u518d\u627et\u91cc\u9762\u6700\u524d\u9762\u7684\u4e00\u4e2a0\uff0c\u518d\u628a\u8fd9\u4e2a\u5f00\u59cb\u7684\u540e\u7f00\u6574\u4f53\u79fb\u5230s\u91cc\u9762\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4ece1\u5f00\u59cb\u627e\uff0c\u7136\u540e\u627e0\u3002\u5b9e\u9645\u4e0a\u91cd\u590d\u768400\uff0c11\u8fd9\u79cd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u770b\u505a1\u4e2a\u5b57\u7b26\u3002</p> <p>\u6240\u4ee5\u5b57\u7b26\u4e32\u6700\u540e\u5927\u6982\u662f01010101...\u8fd9\u79cd\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c31\u662f\u8f93\u51fa\u8fd9\u73a9\u610f\u7684\u957f\u5ea6\uff0c\u5982\u679c\u5f00\u5934\u4e3a0\u5c31-1\u3002</p> <pre><code>void solve()\n{\n    //10101 \u6709\u591a\u5c11\u4e2a \u5c31\u662f\u591a\u5c11\n    int n;\n    cin&gt;&gt;n;\n    string s;\n    cin&gt;&gt;s;\n    int lst=1;\n    s=\" \"+s;\n    int ans=0;\n    for(int i=1;i&lt;=n;i++){\n        if(s[i]!=s[i-1]&amp;&amp;s[i]-'0'==lst){\n            ans++;\n            lst^=1;\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2064/#b","title":"B","text":"<p>\u5f53\u65f6\u5199\u51fa\u6765\u597d\u6162\u554a\uff0c\u751a\u81f3\u8fd8\u611f\u89c9\u6709\u70b9\u96be\u6765\u7740\u3002\u3002\u3002\u73b0\u5728\u770b\u6765\u6709\u70b9\u5510\u3002\u3002\u3002</p> <p>\u6570\u7ec4\u7684\u5f97\u5206\u4e3a\u6570\u7ec4\u7684\u957f\u5ea6\u51cf\u53bb\u6570\u7ec4\u4e2d\u4e0d\u540c\u5143\u7d20\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u7684\u672c\u8d28\u662f\u4ec0\u4e48\u5462\uff1f\u5c31\u662f\u91cd\u590d\u5143\u7d20\u7684\u4e2a\u6570\u3002\u5c31\u5dee\u4e0d\u591a\u8fd9\u4e2a\u610f\u601d\u5427\u3002</p> <p>\u6bd4\u5982\u8bf4\u67093\u4e2a1\uff0c2\u4e2a2\uff0c\u90a3\u4e48\u5f97\u5206\u5c31\u662f2+1\uff0c\u91cd\u590d\u7684\u5143\u7d20\u7684\u6570\u91cf\u3002</p> <p>\u54b1\u4eec\u9700\u8981\u5220\u9664\u4e2d\u95f4\u7684\u4e00\u6bb5\u5b50\u6bb5\uff0c\u4f7f\u5f97\u5f97\u5206\u6700\u5927\u3002\u5982\u679c\u6709\u591a\u4e2a\uff0c\u5219\u8f93\u51fa\u4f7f\u5f97\u6570\u7ec4\u957f\u5ea6\u6700\u77ed\u7684\u65b9\u6848\u3002</p> <p>\u56e0\u4e3a\u5f97\u5206\u662f\u91cd\u590d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u4e00\u4e2a\u5143\u7d20\u90fd\u4e0d\u5220\uff0c\u5f97\u5206\u4e00\u5b9a\u4e5f\u662f\u6700\u5927\u7684\u3002\u6240\u4ee5\u54b1\u4eec\u5c31\u662f\u5220\u9664\u6700\u957f\u7684\u4ec5\u7531\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5143\u7d20\u7ec4\u6210\u7684\u5b50\u6bb5\uff0c\u8fd9\u6837\u4e0d\u4f1a\u4f7f\u5f97\u5206\u53d8\u5c0f\uff0c\u4e14\u80fd\u5220\u9664\u5c3d\u91cf\u591a\u7684\u5143\u7d20\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vi cnt(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cnt[a[i]]++;\n    int l = 0, mx = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        if (cnt[a[i]] == 1) {\n            int j = i;\n            while (j &lt;= n &amp;&amp; cnt[a[j]] == 1)\n                j++;\n            cmax(mx, j - i);\n            if (j - i == mx)\n                l = i;\n            i = j;\n        }\n    }\n    if (mx)\n        cout &lt;&lt; l &lt;&lt; \" \" &lt;&lt; l + mx - 1 &lt;&lt; '\\n';\n    else\n        cout &lt;&lt; \"0\\n\";\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2064/#c","title":"C","text":"<p>\u52a0\u4e86\u6b63\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u5269\u4e0b\u540e\u534a\u90e8\u5206\u4e86\uff0c\u52a0\u4e86\u8d1f\u6570\u7684\u8bdd\u53ea\u5269\u4e0b\u524d\u534a\u90e8\u5206\u4e86\u3002</p> <p>\u4f46\u662f\u4f60\u5168\u52a0\u6b63\u6570\u6216\u5168\u52a0\u8d1f\u6570\uff0c\u663e\u7136\u90fd\u662f\u53ef\u4ee5\u7684\u3002</p> <p>\u5f88\u5bb9\u6613\u60f3\u5230\u5c31\u5982\u679c\u8981\u52a0\u6b63\u6570\uff0c\u90a3\u4e48\u53ea\u80fd\u662f\u6b63\u6570\u5728\u8d1f\u6570\u524d\u9762\u3002\u6240\u4ee5\u7528\u4e24\u4e2a\u524d\u7f00\u548c\u5c31\u884c\u4e86\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    ll ans=0;\n    vi a(n+1);\n    vl p1(n+1),p2(n+1);\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n        p1[i]=p1[i-1],p2[i]=p2[i-1];\n        if(a[i]&lt;0)\n            p1[i]-=a[i];\n        else\n            p2[i]+=a[i];\n    }\n    ans=p1[n];\n    for(int i=1;i&lt;=n;i++){\n        cmax(ans,p2[i]+p1[n]-p1[i]);\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2064/#d","title":"D","text":"<p>\u6700\u9ad8\u4f4d\u6bd4 \\(x\\) \u4f4e\u7684\u6570\u5b57\u5fc5\u7136\u4e0d\u4f1a\u4f7f\u5f97 \\(x\\) \u7684\u6700\u9ad8\u4f4d\u964d\u4f4e\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5403\u6389\u6240\u6709\u6700\u9ad8\u4f4d\u6bd4\u5b83\u4f4e\u7684\u3002</p> <p>\u54b1\u4eec\u53ea\u9700\u8981\u627e\u5230\u5b83\u524d\u9762\u7684\u79bb\u5f97\u6700\u8fd1\u7684\u6700\u9ad8\u4f4d\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\uff0c\u5982\u679c\u80fd\u7ee7\u7eed\u5403\uff0c\u90a3\u4e48 \\(x\\) \u7684\u6700\u9ad8\u4f4d\u5fc5\u7136\u4f1a\u964d\u4f4e\uff0c\u6240\u4ee5\u64cd\u4f5c\u6b21\u6570\u6700\u591a\u53ea\u4f1a\u6709 \\(\\log x\\) \u6b21\uff0c\u76f4\u5230\u4e0d\u80fd\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u7528\u4e00\u4e2a\u6570\u7ec4 \\(lst_{i,j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6570\u5b57\u91cc\u9762\u6700\u540e\u9762\u7684\u6700\u9ad8\u4f4d\u5927\u4e8e\u7b49\u4e8e \\(j\\) \u7684\u4e0b\u6807\u3002\u7136\u540e\u6bcf\u6b21\u8df3\u8f6c\u5230 \\(lst_{idx,\\log x}\\) \uff0c\u518d\u770b\u80fd\u4e0d\u80fd\u7ee7\u7eed\u5403\u3002</p> <pre><code>void solve()\n{\n    int n, q;\n    cin &gt;&gt; n &gt;&gt; q;\n    vi w(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; w[i];\n    // \u627e\u5230\u4e0b\u4e00\u4e2a\u6700\u9ad8\u4f4d\u5927\u4e8e\u7b49\u4e8ex\u7684\n    vector&lt;vi&gt; lst(n + 1, vi(32, 0));\n    for (int i = 1; i &lt;= n; i++) {\n        lst[i] = lst[i - 1];\n        for (int j = __lg(w[i]); j &gt;= 0; j--)\n            lst[i][j] = i;\n    }\n    vi pre(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        pre[i] = pre[i - 1] ^ w[i];\n    // lst[i][j]\u6307 [1,i]\u4e4b\u95f4\u79bbi\u6700\u8fd1\u7684\u6700\u9ad8\u4f4d\u5927\u4e8e\u7b49\u4e8ej\u7684\u6570\u5b57\n    while (q--) {\n        int x;\n        cin &gt;&gt; x;\n        int idx = n;\n        while (idx &gt; 0 &amp;&amp; x) {\n            int nxt = lst[idx][__lg(x)];\n            x ^= pre[nxt] ^ pre[idx];\n            // cerr&lt;&lt;x&lt;&lt;\" \"&lt;&lt;nxt&lt;&lt;\" \"&lt;&lt;idx&lt;&lt;\"\\n\";\n            idx = nxt;\n            if (x &lt; w[nxt] || idx == 0)\n                break;\n            x ^= w[nxt];\n            idx--;\n            // cerr&lt;&lt;nxt&lt;&lt;'\\n';\n        }\n        cout &lt;&lt; n - idx &lt;&lt; ' ';\n    }\n    cout &lt;&lt; '\\n';\n}\n</code></pre> <p>\u611f\u89c9\u5bf9\u6211\u6765\u8bf4\u8fd8\u662f\u5f88\u96be\u60f3\u51fa\u6765\u7684\u3002</p>"},{"location":"cp_solving/Codeforces/2069/","title":"Educational Codeforces Round 174","text":""},{"location":"cp_solving/Codeforces/2069/#2025219","title":"2025\u5e742\u670819\u65e5","text":""},{"location":"cp_solving/Codeforces/2069/#educational-codeforces-round-174-rated-for-div-2","title":"Educational Codeforces Round 174 (Rated for Div. 2)","text":"<p>\u6bd4\u8d5b\u94fe\u63a5\uff1ahttps://codeforces.com/contest/2069</p> <p>\u8fd9\u573a\u611f\u89c9\u7b97\u6b63\u5e38\u53d1\u6325\u5427\u3002D\u98981800\u4ebaAC\uff0c\u6211\u505a\u4e0d\u51fa\u6765\u5012\u662f\u6b63\u5e38\u3002</p> <p>\u81f3\u4e8e\u8fd9B\u548cC\uff0c\u8fc7\u7684\u4eba\u90fd\u4e0d\u5c11\uff0c\u5199\u51fa\u6765\u7684\u901f\u5ea6\u6709\u70b9\u6162\u4e86\u3002\u8fd9\u4e2aC\u6211\u600e\u4e48\u60f3\u5f97\u6709\u70b9\u70e7\u8111\u3002\u3002\u3002\u7136\u540e\u778e\u641e\u5bf9\u4e86\u3002</p> <p>B\u5199\u5f97\u4e5f\u6709\u70b9\u70c2\u3002</p>"},{"location":"cp_solving/Codeforces/2069/#a","title":"A","text":"<p>\u5f53 \\(b_i\\) \u4e3a \\(1\\) \u65f6\uff0c\\(b_{i-1}=b_i=b_{i+1}\\) \uff0c\u53ea\u6709\u51fa\u73b0 \\(101\\) \u65f6\u4f1a\u6709\u51b2\u7a81\uff0c\u5176\u4ed6\u7684\u90fd\u53ef\u4ee5\u6210\u7acb\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi a(n+1);\n    for(int i=2;i&lt;n;i++)\n        cin&gt;&gt;a[i];\n    for(int i=3;i+1&lt;=n-1;i++){\n        if(a[i-1]==1&amp;&amp;a[i+1]==1&amp;&amp;a[i]==0){\n            cout&lt;&lt;\"NO\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"YES\\n\";\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2069/#b","title":"B","text":"<p>\u672c\u6765\u611f\u89c9\u8fd9\u9898\u53ef\u80fd\u4e5f\u4e0d\u597d\u505a\u7684\u3002\u3002</p> <p>\u6bcf\u6b21\u9700\u8981\u90091\u79cd\u989c\u8272\uff0c\u4e14\u4e0d\u80fd\u6709\u76f8\u90bb\u7684\uff0c\u90a3\u4e48\u6bcf\u79cd\u989c\u8272\u9700\u8981\u51e0\u6b21\u64cd\u4f5c\u5462\uff1f\u6211\u4eec\u6709\u5fc5\u8981DFS\u5417\uff1f\u6ca1\u6709\u3002\u5176\u5b9e\u4e00\u79cd\u989c\u8272\uff0c\u64cd\u4f5c\u6b21\u6570\u53ea\u4f1a\u662f1\u6b21\u6216\u80052\u6b21\u3002</p> <p>\u76f4\u63a5\u679a\u4e3e\u5c31\u884c\u4e86\uff0c\u5982\u679c\u4e00\u79cd\u989c\u8272\uff0c\u5b83\u6709\u76f8\u90bb\u7684\u5757\uff0c\u90a3\u4e48\u9700\u8981\u4e24\u6b21\u64cd\u4f5c\uff0c\u5426\u5219\u90fd\u662f1\u6b21\u64cd\u4f5c\u3002</p> <pre><code>void solve()\n{\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;vi&gt; a(n + 1, vi(m + 1));\n    vi cnt(n * m + 1);\n    set&lt;int&gt; st;\n    int mx = 0;\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= m; j++) {\n            cin &gt;&gt; a[i][j];\n            cnt[a[i][j]]++;\n            cmax(mx, cnt[a[i][j]]);\n            st.insert(a[i][j]);\n        }\n    vector&lt;bool&gt; ok(n * m + 1);\n    auto check = [&amp;](int x, int y) {\n        vector&lt;pii&gt; dirs { { 0, 1 }, { 0, -1 }, { 1, 0 }, { -1, 0 } };\n        for (auto [xx, yy] : dirs) {\n            int nx = xx + x, ny = yy + y;\n            if (nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; m)\n                continue;\n            if (a[nx][ny] == a[x][y])\n                return true;\n        }\n        return false;\n    };\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= m; j++) {\n            if (check(i, j))\n                ok[a[i][j]] = true;\n        }\n    }\n    int ans = 0;\n    for (auto x : st)\n        ans += (ok[x] ? 2 : 1);\n    if (ans != sz(st))\n        ans -= 2;\n    else\n        ans -= 1;\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2069/#c","title":"C","text":"<p>\u9996\u5148\u4e00\u5b9a\u8981\u77e5\u9053\u54ea\u4e9b\u60c5\u51b5\u662f\u7b26\u5408\u7684\uff0c\u624d\u597d\u601d\u8003\u3002\u3002</p> <p>\u6211\u672c\u6765\u4ee5\u4e3a\u662f\u53ea\u6709 123 \u662f\u53ef\u4ee5\u7684\uff0c\uff0c\u7136\u540e\u6d4b\u4e86\u6837\u4f8b\u53d1\u73b0\u4e0d\u5bf9\uff0c\u5b83\u5176\u5b9e\u8fd8\u6709\u89e3\u91ca\u3002\u90a3\u6211\u4eec\u53d1\u73b0\u53ea\u9700\u8981\u9996\u5c3e\u662f1\u548c3\uff0c\u4e2d\u95f42\u7684\u6570\u91cf\u65e0\u6240\u8c13\u3002\u3002\u90a3\u4e48\u5c31\u6709\u70b9\u4e0d\u597d\u5199\u3002\u3002</p> <p>\u4f46\u662f\u8003\u8651DP\u5c31\u53d1\u73b0\u5f88\u7b80\u5355\uff0c\u8bbe\\(dp_{0/1}\\) \u4ee3\u8868\u4ee5 \\(1\\) \u548c \\(2\\) \u7ed3\u5c3e\u7684\u5408\u6cd5\u5b50\u5e8f\u5217\u7684\u6570\u91cf\u3002\u90a3\u4e48\u53ea\u6709\u9047\u5230 \\(3\\) \u65f6\uff0c\u7b54\u6848\u5c31\u53ef\u4ee5\u52a0\u4e0a \\(dp_{i-1}\\) \u3002</p> <p>\u5982\u679c \\(a_i\\) \u662f \\(1\\) \uff0c\u90a3\u4e48\u663e\u7136 \\(dp_{i,0}=dp_{i-1}+1\\) \uff0c\u5982\u679c \\(a_i\\) \u662f \\(2\\) , \\(dp_{i,1}=2dp_{i-1,1}+dp_{i-1,0}\\) \u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi a(n + 1);\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    vector&lt;vl&gt; dp(n + 1, vl(3));\n    ll ans = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        dp[i] = dp[i - 1];\n        if (a[i] == 1)\n            dp[i][0]++;\n        else if (a[i] == 2) {\n            dp[i][1] = (dp[i][1] + dp[i - 1][0] + dp[i][1]) % mod;\n        } else\n            ans += dp[i][1], ans %= mod;\n        // if (a[i] == 3)\n        // cerr &lt;&lt; dp[i][0] &lt;&lt; \" \" &lt;&lt; dp[i][1] &lt;&lt; '\\n';\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre> <p>\u8fd9\u91cc\u597d\u5510\uff0c\u60f3\u4e86\u5f88\u4e45\u624d\u60f3\u660e\u767d\u3002\u3002\u3002</p> <p>\u7136\u540e\u5c31\u6218\u6597\u7ed3\u675f\u4e86\u3002D\u611f\u89c9\u786e\u5b9e\u5f88\u96be\u4e0d\u770b\u9898\u89e3\u5199\u51fa\u6765\u3002</p>"},{"location":"cp_solving/Codeforces/2069/#d","title":"D","text":"<p>use binary search \uff0c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u9996\u5c3e\u76f8\u540c\uff0c\u90a3\u663e\u7136\u6211\u4eec\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u9996\u5c3e\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u7136\u540e\u6211\u4eec\u4e8c\u5206\u68c0\u67e5\u7684\u957f\u5ea6\u3002\u7531\u4e8e\u9996\u5c3e\u4e0d\u540c\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u4e48\u662f\u4ece\u5f00\u5934\u5f00\u59cb\uff0c\u8981\u4e48\u662f\u5728\u672b\u5c3e\u7ed3\u675f\u3002</p> <p>\u5bf9\u4e8e\u5728\u672b\u5c3e\u7ed3\u675f\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u6765\u8ba1\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u7528\u524d\u7f00\u548c\u5b58\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u80fd\u6784\u6210\u56de\u6587\u4e32\u4e86\u3002</p> <pre><code>void solve()\n{\n    string s;\n    cin &gt;&gt; s;\n    int n = sz(s);\n    for (int i = 0; i &lt; n - i - 1; i++) {\n        if (s[i] != s[n - i - 1]) {\n            s = s.substr(i, n - i - 1 - i + 1);\n            break;\n        }\n    }\n    if (sz(s) == n &amp;&amp; s.front() == s.back()) {\n        cout &lt;&lt; \"0\\n\";\n        return;\n    }\n    cerr &lt;&lt; s &lt;&lt; \"\\n\";\n    n = sz(s);\n    s = \" \" + s;\n\n    vector&lt;vi&gt; pre(n + 1, vi(26));\n    auto check = [&amp;](int len) {\n        if (len &lt; n / 2) {\n            for (int i = len + 1; i &lt;= n / 2; i++) {\n                if (s[i] != s[n - i + 1])\n                    return false;\n            }\n        }\n        for (int i = 0; i &lt; 26; i++) {\n            if (len &gt;= n / 2) {\n                if (pre[len][i] &lt; pre[n][i] - pre[len][i])\n                    return false;\n            } else {\n                if (pre[len][i] &gt; pre[n][i] - pre[len][i])\n                    return false;\n            }\n        }\n        return true;\n    };\n    int ans = n;\n    for (int i = 1; i &lt;= n; i++)\n        pre[i] = pre[i - 1], pre[i][s[i] - 'a']++;\n    int lo = 1, hi = n;\n\n    while (lo &lt; hi - 1) {\n        int mid = (lo + hi) &gt;&gt; 1;\n        if (check(mid))\n            hi = mid;\n        else\n            lo = mid;\n    }\n    cmin(ans, hi);\n    reverse(ALL(s));\n    for (int i = 1; i &lt;= n; i++)\n        pre[i] = pre[i - 1], pre[i][s[i] - 'a']++;\n    lo = 1, hi = n;\n\n    while (lo &lt; hi - 1) {\n        int mid = (lo + hi) &gt;&gt; 1;\n        if (check(mid))\n            hi = mid;\n        else\n            lo = mid;\n    }\n    cmin(ans, hi);\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2070/","title":"Educational Codeforces Round 175","text":"<p>\u6bd4\u8d5b\u65e5\u671f: 2025-02-27</p>"},{"location":"cp_solving/Codeforces/2070/#educational-codeforces-round-175-rated-for-div-2","title":"Educational Codeforces Round 175 (Rated for Div. 2)","text":"<p>\u6bd4\u8d5b\u94fe\u63a5: https://codeforces.com/contest/2070</p> <p>\u7cd6\u4e38\u7684\u4e00\u628a\u3002\u3002\u3002D\u53ea\u662f\u4e2a\u57fa\u7840\u7684bfs\u6216\u8005\u89c2\u5bdf\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u4f46\u662f\u6ca1\u5199\u51fa\u6765\u3002</p> <p>\u8ddf\u72b6\u6001\u6709\u5173\u7cfb\u5427\uff0c\u4e5f\u662f\u57fa\u672c\u6ca1\u548b\u5199\u8fc7bfs\u4e86\uff0c\u4e5f\u662f\u83dc\u4e86\u3002\u4f46\u662f\u65e0\u6240\u8c13\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u8981\u6253\u6bd4\u8d5b\uff0c\u6389\u5206\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u505a\u9898\u6c38\u8fdc\u662f\u6bd4 rating \u548c\u5176\u4ed6\u4e1c\u897f\u91cd\u8981\u7684\u3002\u611f\u89c9\u8fd9\u79cd\u5b9e\u65f6\u7684\u6bd4\u8d5b\uff0c\u786e\u5b9e\u5f88\u4e0d\u4e00\u6837\u554a\u3002</p> <p>\u9898\u5199\u591a\u4e86\uff0c\u53d8\u5f3a\u662f\u5fc5\u7136\u4e8b\u4ef6\u3002\u53ea\u8981\u5199\u9898\u5199\u5f97\u591f\u591a\uff0c\u79ef\u7d2f\u591f\u591a\uff0c\u90a3\u4e48\u4e0a\u5206\u3001\u6bd4\u8d5b\u4f53\u9a8c\u53d8\u597d\uff0c\u8fd9\u4e9b\u90fd\u662f\u81ea\u7136\u800c\u7136\u7684\u4e8b\u60c5\u3002</p>"},{"location":"cp_solving/Codeforces/2070/#a","title":"A","text":"<p>\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u6bcf15\u4e2a\u6570\u5b57\u4f1a\u51fa\u73b03\u4e2a\u6ee1\u8db3\u7684\u3002</p> <pre><code>void solve()\n{\n    //0 1 2,15 16 17,30 31 32\n    int n;\n    cin&gt;&gt;n;\n    int ans=n/15*3;\n    for(int i=0;i&lt;=min(2,n%15);i++)\n        ans++;\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2070/#b","title":"B","text":"<p>\u8fd9\u4e2a\u5c31\u5f88\u660e\u663e\u5427\uff0c\u663e\u7136\u5224\u5f00\u59cb\u80fd\u4e0d\u80fd\u52300\uff0c\u5982\u679c\u80fd\u5230\uff0c\u770b\u540e\u9762\u4e00\u6b21\u56de\u52300\u8981\u591a\u957f\u65f6\u95f4\u3002</p> <pre><code>void solve()\n{\n    int n, x;\n    long long k;\n    cin &gt;&gt; n &gt;&gt; x &gt;&gt; k;\n    // \u770b-x\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\n    // \u7136\u540e\u518d\u770b 0 \u51fa\u73b0\u4e00\u6b21\u8981\u591a\u4e45\n    string s;\n    cin &gt;&gt; s;\n    vector&lt;int&gt; pre(n + 1);\n    for (int i = 1; i &lt;= n; i++) {\n        pre[i] = pre[i - 1];\n        if (s[i - 1] == 'L')\n            pre[i]--;\n        else\n            pre[i]++;\n    }\n    long long ans = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        if (pre[i] == -x &amp;&amp; i &lt;= k) {\n            ans++;\n            k -= i;\n            break;\n        }\n    }\n    if(!ans){\n        cout&lt;&lt;\"0\\n\";\n        return;\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        if(pre[i]==0){\n            ans+=k/i;\n            break;\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2070/#c","title":"C","text":"<p>\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u3002\u56e0\u4e3a\u8fd9\u4e2a\u80af\u5b9a\u662f\u4e00\u4e2a\u5355\u8c03\u7684\u3002</p> <p>\u68c0\u67e5\u7684\u65f6\u5019\uff0c\u5982\u679c\u662f\u84dd\u8272\u4e14\u503c\u5927\u4e8e\u6211\u4eec\u68c0\u67e5\u7684\u503c \\(x\\) \uff0c\u90a3\u4e48\u80af\u5b9a\u9700\u8981\u7528\u4e00\u6b21\u673a\u4f1a\u3002\u5982\u679c\u662f\u7ea2\u8272\uff0c\u5982\u679c\u6211\u4eec\u524d\u4e00\u4e2a\u662f\u5305\u542b\u5728\u6211\u4eec\u9009\u7684\u6bb5\u91cc\u9762\uff0c\u6211\u4eec\u80af\u5b9a\u5e0c\u671b\u8fd9\u4e2a\u6bb5\u80fd\u5c3d\u91cf\u7684\u957f\u3002</p> <pre><code>void solve()\n{\n    int n, k;\n    cin &gt;&gt; n &gt;&gt; k;\n    vi a(n + 1);\n    string s;\n    cin &gt;&gt; s;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    s = \" \" + s;\n    int cnt = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        if (s[i] == 'B' &amp;&amp; s[i] != s[i - 1]){\n            cnt++;\n        }\n    }\n    if (cnt &lt;= k) {\n        cout &lt;&lt; \"0\\n\";\n        return;\n    }\n    auto check=[&amp;](int val){\n        int res=0;\n        bool use=false;\n        for(int i=1;i&lt;=n;i++){\n            if(s[i]=='B'){\n                if(use){\n                    continue;\n                }else{\n                    if(a[i]&gt;val){\n                        res++;\n                        use=true;\n                    }\n                }\n            }else{\n                if(a[i]&gt;val) use=false;\n            }\n        }\n        return res&lt;=k;\n    };\n    int lo = 0, hi = INF+1;\n    while(lo&lt;hi-1){\n        int mid=(lo+hi)&gt;&gt;1;\n        if(check(mid)) hi=mid;\n        else lo=mid;\n    }\n    cout&lt;&lt;hi&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2070/#d","title":"D","text":"<p>...\u6700\u65e0\u8bed\u7684\u4e00\u96c6\u3002\u5509\u5509\uff0c\u8d77\u7801\u505a\u51fa\u6765\u4e86\u3002\u3002\u3002</p> <p>\u6700\u5f00\u59cb\u4e00\u76f4wa\uff0c\u4f46\u662f\u6ca1\u60f3\u5230\u54eawa\u4e86\uff0c\u72b6\u6001\u4e0d\u592a\u597d\u54c8\u3002\u3002\u3002</p> <p>\u800c\u4e14bfs\u76f4\u63a5\u628a\u76f8\u8fde\u7684\u5b50\u8282\u70b9\u52a0\u5165\u961f\u5217\u5c31\u884c\u554a\u3002\u6211\u592a\u5510\u4e86\u3002</p> <p>\u4e0d\u7528bfs\u4e5f\u53ef\u4ee5\u5199\uff0c\u56e0\u4e3a\u5176\u5b9e\u6bcf\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e00\u5b9a\u662f\u76f8\u540c\u7684\u3002</p> <pre><code>constexpr int mod = 998244353; // 998244353\n\nvoid solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vi p(n + 1);\n    vector&lt;vi&gt; adj(n + 1, vi());\n    for (int i = 2; i &lt;= n; i++) {\n        cin &gt;&gt; p[i];\n        adj[p[i]].push_back(i);\n    }\n    vi d(n + 1);\n    // vector&lt;vi&gt; g(n + 1, vi());\n    vi cnt(n+1);\n    auto dfs1 = [&amp;](auto&amp;&amp; self, int u) -&gt; void {\n        // g[d[u]].push_back(u);\n        cnt[d[u]]++;\n        for (auto v : adj[u]) {\n            d[v] = d[u] + 1;\n            self(self, v);\n        }\n    };\n    dfs1(dfs1, 1);\n    vector&lt;ll&gt; res(n + 1);\n    ll ans = 1;\n    res[1] = 1;\n    // auto dfs = [&amp;](auto&amp;&amp; self, int u) -&gt; void {\n    //     for (auto v : g[d[u] + 1]) {\n    //         if ((u != 1) &amp;&amp; (p[v] == u))\n    //             continue;\n    //         // ans=(ans+res[u])%mod;\n    //         res[v] = (res[v] + res[u]) % mod;\n    //         // self(self, v);\n\n    //     }\n    // };\n    // dfs(dfs, 1);\n    // for(int i=0;i&lt;n;i++){\n    //     if(g[i].empty()) break;\n    //     for(auto v:g[i])\n    //         dfs(dfs,v);\n    // }\n\n    //\u6bcf\u4e00\u5c42\u5176\u5b9e\u90fd\u662f\u56fa\u5b9a\u7684 \u53ea\u8981\u6df1\u5ea6\u76f8\u540c \u90a3\u4e48\u8d21\u732e\u4e00\u5b9a\u76f8\u540c\n\n    //\n    ans+=cnt[1];\n    res[2]=1;\n    for(int i=2;i&lt;=n;i++){\n        //\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u4e3ai\u7684\u70b9 \u5230\u8fbe\u7684\u65b9\u5f0f\u6570\u90fd\u4e3a cnt[i-1]*res[i-1]\n        res[i]=(cnt[i-1]-1)*res[i-1]%mod;\n        ans=(ans+res[i]*cnt[i]%mod)%mod;\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n</code></pre> <p>\u6ca1\u4e8b\uff0c\u5199\u51fa\u6765\u5c31\u597d\u3002</p>"},{"location":"cp_solving/Codeforces/2071/","title":"Codeforces Round 1007 (Div. 2)","text":"<p>\u6bd4\u8d5b\u65f6\u95f4\uff1a2025-03-01</p>"},{"location":"cp_solving/Codeforces/2071/#codeforces-round-1007-div-2","title":"Codeforces Round 1007 (Div. 2)","text":"<p>\u6bd4\u8d5b\u94fe\u63a5: https://codeforces.com/contest/2071</p> <p>\u6700\u4e22\u4eba\u7684\u4e00\u96c6\uff0c\u518d\u6b21 div2 \u53ea\u5199\u51fa\u4e24\u9898\u3002\u4f46\u662f\u6709\u4e00\u8bf4\u4e00\uff0c\u611f\u89c9\u8fd9\u573aC\u662f\u6bd4\u4e0a\u573aD\u96be\u7684\uff0c\u6216\u8005\u8bf4\u5dee\u4e0d\u591a\u3002\u3002\u3002</p> <p>\u8d5b\u65f6\u5dee\u4e0d\u591a\u4e5f\u662f\u4e09\u5343\u591a\u4eba\u8fc7\u4e86C\uff0c\u8d5b\u65f6\u6211\u597d\u50cf\u6ca1\u600e\u4e48\u5199\u51fa\u8fc7\u901a\u8fc7\u8fd9\u4e2a\u4eba\u6570\u7684\u9898\u3002\u3002\u300210\u5206\u949f\u628aAB\u5199\u4e86\uff0c\u7136\u540e\u540e\u9762\u60f3\u4e86\u4e00\u5c0f\u65f6C\uff0c\u4e00\u70b9\u601d\u8def\u6ca1\u6709\u3002\u770b\u4e86\u9898\u89e3\u7684\u60f3\u6cd5\uff0c\u600e\u4e48\u8fd9\u4e48\u7b80\u5355\u3002\u4e14\u6709\u9053\u7406\u3002\u3002</p> <p>D\u6211\u540e\u9762\u81ea\u5df1\u770b\u770b\u5148\u3002</p>"},{"location":"cp_solving/Codeforces/2071/#a","title":"A","text":"<p>\u81ea\u5df1\u63a8\u4e00\u4e0b\u7136\u540e\u770b\u770b\u6837\u4f8b\u731c\u4e00\u4e0b\uff0c\u6bd4\u5982\u7b2c\u4e00\u573a\u80af\u5b9a\u4e0d\u884c\uff0c\u7b2c\u4e09\u573a\u4e5f\u4e0d\u884c\uff0c\u56e0\u4e3a\u5982\u679c\u7b2c\u4e00\u573a\u4f11\u606f\u7684\u4eba\u7b2c\u4e09\u573a\u4f11\u606f\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u4e2a\u4eba\u8d62\u4e86\u4e09\u573a\u3002\u770b\u770b\u6837\u4f8b\uff0c\u5927\u6982\u4e5f\u662f\u53ea\u6709\u6a21\u4e09\u7b49\u4e8e\u4e00\u7684\u65f6\u5019\u662fYES\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    cout&lt;&lt;(n%3==1?\"YES\\n\":\"NO\\n\");\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2071/#b","title":"B","text":"<p>\u770b\u7740\u6709\u70b9\u5413\u4eba\uff0c\u4f46\u5176\u5b9e\u601d\u8def\u5f88\u7b80\u5355\u3002\u53ea\u8981\u6c42\u6bcf\u4e2a\u524d\u7f00\u7684\u548c\u4e0d\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5176\u5b9e\u987a\u7740\u653e\u5c31\u884c\u4e86\uff0c\u5982\u679c\u52a0\u4e0a\u4e0b\u4e00\u4e2a\u6570\u4f1a\u53d8\u6210\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8df3\u4e00\u4e2a\u52a0\u5457\u3002\u6240\u4ee5\u76f4\u63a5\u7528\u4e2a\u6570\u7ec4\u6216\u8005\u961f\u5217\u64cd\u4f5c\u4e00\u4e0b\u5c31\u884c\u3002\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u4e86\uff0c\u90a3\u4e48\u8bf4\u660en\u4e2a\u6570\u5b57\u52a0\u8d77\u6765\u6070\u597d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u4e48\u5c31\u80af\u5b9a\u4e0d\u884c\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    long long sum=0;\n    priority_queue&lt;int&gt;q;\n    for(int i=n;i&gt;=1;i--)\n        q.push(i);\n    auto check=[](long long x){\n        long long y=(long long)sqrt(x);\n        return x!=y*y;\n    };\n    vector&lt;int&gt;ans;\n    while(!q.empty()){\n        if(check(sum+q.top())){\n            ans.push_back(q.top());\n            sum+=q.top();\n            q.pop();\n        }else{\n            int x=q.top();\n            q.pop();\n            if(q.empty()){\n                cout&lt;&lt;\"-1\\n\";\n                return;\n            }\n            ans.push_back(q.top());\n            sum+=q.top();\n            q.pop();\n            q.push(x);\n\n        }\n    }\n    for(auto x:ans)\n        cout&lt;&lt;x&lt;&lt;\" \";\n    cout&lt;&lt;'\\n';\n}\n</code></pre> <p>\u7528\u6570\u7ec4\u5565\u7684\u90fd\u884c\u3002\u5176\u5b9e\u6211\u5224\u5f97\u662f\u4e0d\u662f\u4e5f\u4e0d\u591f\u4e25\u683c\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u52a0\u4e0a\u4e0b\u4e00\u4e2a\u6570\uff0c\u4ecd\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u4f46\u662f\u5e94\u8be5\u5f88\u5c11\u5f88\u5c11\u7684\u53ef\u80fd\u6027\u3002</p>"},{"location":"cp_solving/Codeforces/2071/#c","title":"C","text":"<p>\u81ea\u5df1\u770b\u611f\u89c9\u975e\u5e38\u7684\u96be\u53d7\uff0c\u770b\u5b8c\u9898\u89e3\u600e\u4e48\u8fd9\u4e48\u723d\u3002\u3002</p> <p>\u4ee5 \\(en\\) \u4e3a\u6839\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u6b21\u6211\u4eec\u4f7f\u7528\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u3002\u628a\u8fd9\u4e2a\u6df1\u5ea6\u7684\u70b9\u7528\u5b8c\u4e4b\u540e\uff0c\u8001\u9f20\u6240\u5728\u7684\u70b9\u5c31\u4e0d\u53ef\u80fd\u4f1a\u5c0f\u4e8e\u8fd9\u4e2a\u6df1\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u4e00\u5c42\u4e00\u5c42\u7684\u4f7f\u7528\uff0c\u5c31\u4e00\u5b9a\u4f1a\u8ba9\u5b83\u79fb\u52a8\u5230\u6839\u8282\u70b9\u3002</p> <pre><code>void solve()\n{\n    int n, st, en;\n    cin &gt;&gt; n &gt;&gt; st &gt;&gt; en;\n    vector&lt;vector&lt;int&gt;&gt; adj(n + 1, vector&lt;int&gt;());\n    for (int i = 1; i &lt; n; i++) {\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    vector&lt;int&gt; dep(n + 1);\n    vector&lt;vector&lt;int&gt;&gt; g(n + 1, vector&lt;int&gt;());\n    auto dfs1 = [&amp;](auto&amp;&amp; self, int u, int pre) -&gt; void {\n        g[dep[u]].push_back(u);\n        for (auto v : adj[u]) {\n            if (v == pre)\n                continue;\n            dep[v] = dep[u] + 1;\n            self(self, v, u);\n        }\n    };\n    dfs1(dfs1, en, -1);\n    vector&lt;int&gt; ans;\n    for (int i = n; i &gt;= 0; i--) {\n        for (auto v : g[i])\n            ans.push_back(v);\n    }\n    for (auto x : ans)\n        cout &lt;&lt; x &lt;&lt; \" \";\n    cout &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2071/#d","title":"D","text":"<p>\u6211\u771f\u50bb\u771f\u7684\uff0c\u6211\u53ea\u6ce8\u610f\u5230\u65b0\u52a0\u5165\u7684\u6570\u5b57\uff0c\u4e00\u5b9a\u7b2c\u5947\u6570\u4f4d\u662f\u548c\u524d\u4e00\u4f4d\u76f8\u540c\u3002\u4f46\u6211\u6ca1\u6709\u60f3\u5230\u8fd9\u610f\u5473\u7740\u4e2d\u95f4\u7684 $a_{n+1}\\oplus a_{n+2}=0 $ , $a_{n+3}\\oplus a_{n+4}=0 $  ,$a_{n+5}\\oplus a_{n+6}=0 $  ... \u5927\u90e8\u5206\u90fd\u4f1a\u88ab\u6d88\u6389\u7684\u3002</p> <p>\u800c\u4e14\u6211\u8fd8\u6ca1\u6ce8\u610f\u5230\u8fd9\u9898\u91cc \\(l=r\\) \uff0c\u6211\u4e00\u76f4\u60f3\u600e\u4e48\u6c42\u548c\u5462\u3002\u3002\u3002</p> <p>\u5148\u8ba9 \\(n\\) \u4e3a\u5947\u6570\uff0c\u82e5\u4e0d\u662f\u5947\u6570\u52a0\u4e00\u9879\u5c31\u884c\u3002\u8fd9\u6837\u540e\u9762\u6bcf\u6b21\u90fd\u662f\u8fde\u7740\u51fa\u73b0\u4e24\u4e2a\u4e00\u6837\u7684\u3002\u8bbe \\(pre\\) \u4e3a\u524d\u7f00\u5f02\u6216\u548c\u6570\u7ec4\u3002</p> <p>$a_{2m}=a_{2m+1}=pre_{m} $ \uff0c\u82e5 \\(m\\) \u4e3a\u5947\u6570\uff0c\u663e\u7136 \\(pre_m=pre_n\\) .</p> <p>\u5426\u5219 $pre_m=pre_n \\oplus a_m $ , \u56e0\u4e3a\u4e2d\u95f4\u7684\u9879\u5168\u88ab\u6d88\u4e86\u3002</p> <p>\u6240\u4ee5\u9012\u5f52\u6c42\u5c31\u884c\u3002\u56e0\u4e3a\u8003\u8651\u7684\u662f \\(\\frac{m}{2}\\) \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u628a \\(2n\\) \u7684\u60c5\u51b5\u9884\u5148\u5904\u7406\u51fa\u6765\u3002</p> <pre><code>constexpr int N = 2e5+1;\nint a[N&lt;&lt;1], pre[N&lt;&lt;1];\n\nvoid solve()\n{\n    // n\u4e3a\u5947\u6570\u65f6\n    // a[n+1]=a[n+2]\n    // a[n+3]=a[n+4]\n    // a[2m]=a[2m+1] \u8bbe p = xor[1,n]\n    // \u90a3\u4e48\u5982\u679c m&amp;1 ,res=p\n    // \u53ef\u4ee5\u5f04\u5230 m&lt;=2*n\n    int n;\n    long long l, r;\n    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i], pre[i] = pre[i - 1] ^ a[i];\n    if (n % 2 == 0) {\n        n++;\n        a[n] = pre[n &gt;&gt; 1];\n        pre[n] = pre[n - 1] ^ a[n];\n    }\n    for (int i = n + 1; i &lt;= 2 * n; i++) {\n        a[i] = pre[i &gt;&gt; 1];\n        pre[i] = pre[i - 1] ^ a[i];\n    }\n    // \u521a\u521a\u8fd8\u5728\u60f3 \u4e0d\u662f\u6c42\u548c\u5417\u3002\u3002\u3002\n    // \u539f\u6765\u5728\u8fd9\u4e2a\u9898\u91cc l=r\u3002\u3002\u3002\u624d\u53d1\u73b0\u554a\u00b7\u00b7\n    //  n]\n    auto query = [&amp;](auto self, long long i) -&gt; int {\n        if (i &lt;= 2 * n)\n            return a[i];\n        if (i &gt;&gt; 1 &amp; 1)\n            return pre[n];\n        return pre[n] ^ self(self, i / 2);\n    };\n    cout &lt;&lt; query(query, l) &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/","title":"Codeforces Round 1006 (Div. 3)","text":"<p>2025\u5e742\u670826\u65e5</p> <p>VP \uff0c\u6628\u665a\u6ca1\u6253\u3002</p>"},{"location":"cp_solving/Codeforces/2072/#codeforces-round-1006-div-3","title":"Codeforces Round 1006 (Div. 3)","text":"<p>\u5509\u5509\uff0c\u6709\u70b9\u83dc\u4e86\u3002</p> <p>\u4e0a\u8bfevp\u7684\uff0cF vp\u7ed3\u675f\u534a\u5c0f\u65f6\u624dac\u3002\u6bcf\u9898\u90fd\u5199\u592a\u6162\u4e86\u3002\u3002\u3002</p>"},{"location":"cp_solving/Codeforces/2072/#a","title":"A","text":"<p>\\(k\\) \u662f\u6b63\u6570\u6216\u8005\u8d1f\u6570\u662f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8ba9 \\(k\\) \u4e00\u76f4\u4e3a\u6b63\u6570\u5c31\u597d\u4e86\u3002\u7136\u540e\u5176\u5b9e\u5c31\u662f\u76f4\u63a5\u8f93\u51fa \\(\\frac{k}{p}\\) \u5411\u4e0a\u53d6\u6574\u5c31\u597d\u4e86\u3002</p> <pre><code>void solve() {\n    int n,k,p;\n    cin&gt;&gt;n&gt;&gt;k&gt;&gt;p;\n    k=abs(k);\n    int ans=(k-1)/p+1;\n    if(k==0) ans=0;\n    cout&lt;&lt;(ans&gt;n?-1:ans)&lt;&lt;'\\n'; \n}\n</code></pre> <p>\u6211\u8d5b\u65f6\u5199\u7684\u6709\u70b9\u5510\u3002</p> <pre><code>void solve() {\n    int n,k,p;\n    cin&gt;&gt;n&gt;&gt;k&gt;&gt;p;\n    if(!k) {\n        cout&lt;&lt;\"0\\n\";\n        return;\n    }\n    int sum=0;\n    for(int i=1; i&lt;=n; i++) {\n        for(int j=1; j&lt;=p; j++) {\n            if(sum&lt;=k) break;\n            sum--;\n        }\n        for(int j=1; j&lt;=p; j++) {\n            if(sum&gt;=k) break;\n            sum++;\n        }\n        if(sum==k){\n            cout&lt;&lt;i&lt;&lt;\"\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"-1\\n\";\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#b","title":"B","text":"<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a <code>_</code> \uff0c\u5b83\u7684\u8d21\u732e\u662f \u5b83\u524d\u9762\u7684 <code>_</code> \u7684\u6570\u91cf\u4e58 \u5b83\u540e\u9762\u7684 <code>_</code> \u7684\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u60f3\u5230\uff0c\u628a\u4e00\u4e2a\u6570\u62c6\u6210\u4e24\u4e2a\u6570\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u4e58\u79ef\u6700\u5927\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u4e00\u5b9a\u662f\u8981\u5c3d\u91cf\u76f8\u7b49\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u91cd\u65b0\u6392\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u80af\u5b9a\u662f <code>_</code> \u5168\u90e8\u653e\u4e2d\u95f4\uff0c\u524d\u9762\u540e\u9762\u7684 <code>-</code> \u5404\u653e\u4e00\u534a\u3002</p> <pre><code>void solve()\n{\n    int n;\n    string s;\n    cin&gt;&gt;n&gt;&gt;s;\n    int x=count(s.begin(),s.end(),'_');\n    if((n-x)&amp;1){\n        cout&lt;&lt;1LL*(n-x)/2*((n-x)/2+1)*x&lt;&lt;'\\n';\n    }else{\n        cout&lt;&lt;1LL*(n-x)/2*(n-x)/2*x&lt;&lt;'\\n';\n    }\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#c","title":"C","text":"<p>\u6570\u7ec4\u7684 \\(MEX\\) \u5982\u679c\u8981\u8fbe\u5230 \\(x\\) \u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709 \\([0,x-1]\\) \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002\u7531\u4e8e\u6570\u7ec4 \\(a\\) \u6309\u4f4d\u6216\u8981\u7b49\u4e8e \\(x\\) \uff0c\u6bcf\u4e2a\u6570\u5b57\u6bcf\u4e00\u4f4d\u53ea\u6709\u5728 \\(x\\) \u4e3a \\(1\\) \u7684\u4f4d\u624d\u80fd\u4e3a \\(1\\) \u3002</p> <p>\u6211\u4eec\u76f4\u63a5\u4ece \\([0,n]\\) \u5f00\u59cb\u5c1d\u8bd5\u80fd\u4e0d\u80fd\u628a \\(i\\) \u52a0\u5165\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u884c\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4e0d\u7528\u770b\u540e\u9762\u7684\u6570\u4e86\uff0c\u56e0\u4e3a\u6570\u7ec4\u91cc\u4e0d\u53ef\u80fd\u6709 \\(i\\) \u4e86\uff0c\\(MEX\\) \u53ea\u80fd\u4e3a \\(i\\) \uff0c\u5c31\u6ca1\u5fc5\u8981\u770b\u5176\u4ed6\u7684\u6570\u5b57\u4e86\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u52a0\u5165\u7b54\u6848\u4e2d\u3002</p> <p>\u5728\u4e0a\u4e00\u6b65\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u6dfb\u52a0\u7684\u6570\u5b57\u4e2a\u6570\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u3002\u5982\u679c\u5c0f\u4e8e \\(n\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u653e \\(x\\) \uff0c\u8fd9\u6837\u5b83\u4eec\u6309\u4f4d\u6216\u4e00\u5b9a\u4f1a\u7b49\u4e8e \\(x\\) \u3002\u5982\u679c\u7b49\u4e8e \\(n\\) \uff0c\u90a3\u4e48\u9700\u8981\u68c0\u67e5\u5b83\u4eec\u6309\u4f4d\u6216\u80fd\u4e0d\u80fd\u7b49\u4e8e \\(x\\) \uff0c\u4e0d\u884c\u5219\u628a\u6700\u5927\u7684\u4e00\u4e2a\u6570\u5b57\u6362\u6210 \\(x\\) \u3002</p> <pre><code>void solve() {\n    int n,x;\n    cin&gt;&gt;n&gt;&gt;x;\n    vector&lt;int&gt;ans;\n    int now=0;\n    for(int i=0; i&lt;n; i++) {\n        if((i|x)==x) ans.push_back(i);\n        else break;\n        now|=i;\n    }\n    while(ans.size()==n&amp;&amp;now!=x)\n        ans.pop_back();\n    if(ans.size()&lt;n){\n        while(ans.size()&lt;n)\n            ans.push_back(x);\n        now|=x;\n    }\n    //assert(now==x);\n    for(auto y:ans)\n        cout&lt;&lt;y&lt;&lt;' ';\n    cout&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#d","title":"D","text":"<p>\u53ea\u80fd\u505a\u4e00\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u6570\u5b57 \\(a_l\\) \u79fb\u52a8\u5230 \\(a_r\\) \u7684\u540e\u9762\uff0c\u8981\u4f7f\u5f97\u64cd\u4f5c\u4e4b\u540e\uff0c\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9\u6700\u5c11\u3002</p> <p>\u8ba1\u7b97 \\(i\\) \u79fb\u52a8\u5230 \\(j\\) \u4f1a\u4f7f\u9006\u5e8f\u5bf9 \u589e\u52a0/\u51cf\u5c11 \u591a\u5c11\u3002\u7136\u540e \\(i\\) \u79fb\u52a8\u5230 \\(j+1\\) , \u662f\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u5230 \\(j\\) \u7684\u7b54\u6848\u7b97\u51fa\u6765\u7684\u3002</p> <p>\u8d34\u4e00\u4e0b <code>jiangly</code> \u7684\u4ee3\u7801\u3002\u975e\u5e38\u7684\u7b80\u6d01\u554a\uff0c\u6211\u786e\u5b9e\u6ca1\u60f3\u5230\u8fd9\u79cd\u6b63\u5e38\u7684\u505a\u6cd5...</p> <pre><code>void solve() {\n    int n;\n    std::cin &gt;&gt; n;\n\n    std::vector&lt;int&gt; a(n);\n    for (int i = 0; i &lt; n; i++) {\n        std::cin &gt;&gt; a[i];\n    }\n\n    int sum = 0;\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; i; j++) {\n            sum += (a[i] &lt; a[j]);\n        }\n    }\n\n    int ans = sum;\n    int l = 0, r = 0;\n    for (int i = 0; i &lt; n; i++) {\n        int cur = sum;\n        for (int j = i + 1; j &lt; n; j++) {\n            cur -= (a[i] &gt; a[j]);\n            cur += (a[i] &lt; a[j]);\n            if (cur &lt; ans) {\n                ans = cur;\n                l = i;\n                r = j;\n            }\n        }\n    }\n    std::cout &lt;&lt; l + 1 &lt;&lt; \" \" &lt;&lt; r + 1 &lt;&lt; \"\\n\";\n}\n</code></pre> <p>\u6211\u8fd9\u505a\u6cd5\u592a\u9ebb\u70e6\u4e86\u3002</p> <p>\u7531\u4e8e\u6570\u636e\u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u5bf9\u53ef\u80fd\u7684\u4ea4\u6362\uff0c\u7136\u540e\u8ba1\u7b97\u6700\u5927\u7684\u8d21\u732e\u3002\u628a \\(a_l\\) \u79fb\u52a8\u5230 \\(a_r\\) \u7684\u540e\u9762\uff0c\u4f1a\u8ba9\u7b54\u6848 \u51cf\u53bb \\([l+1,r]\\) \u4e4b\u95f4\u5c0f\u4e8e \\(a_l\\) \u7684\u6570\u5b57\u7684\u6570\u91cf\uff0c\u52a0\u4e0a \\([l+1,r]\\) \u4e4b\u95f4\u5927\u4e8e \\(a_l\\) \u7684\u6570\u5b57\u7684\u6570\u91cf\u3002</p> <p>\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u8d21\u732e\uff0c\u7136\u540e\u9009\u51fa\u4f7f\u7b54\u6848\u51cf\u5c11\u6700\u591a\u7684\u3002</p> <p>\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u524d\u7f00\u6bd4 \\(i\\) \u5c0f\u7684\u6570\u5b57\u7684\u6570\u91cf\u3002</p> <pre><code>constexpr int N = 2000;\n\nvoid solve() {\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;int&gt;a(n+1);\n    vector&lt;vector&lt;int&gt;&gt;cnt(n+1,vector&lt;int&gt;(N+1)),tnc(n+1,vector&lt;int&gt;(N+1));\n    for(int i=1; i&lt;=n; i++) {\n        cin&gt;&gt;a[i];\n        cnt[i]=cnt[i-1];\n        tnc[i]=tnc[i-1];\n        for(int j=a[i]+1; j&lt;=N; j++)\n            cnt[i][j]++;//\u524d\u9762\u7684\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\n        for(int j=1; j&lt;a[i]; j++)\n            tnc[i][j]++;\n    }\n    auto calc=[&amp;](int i,int j) {\n        int res=0;\n        res+=tnc[j][a[i]]-tnc[i][a[i]];//[i,j]\u4e4b\u95f4\u7684\u6bd4a[i]\u5927\u7684\u6570\u5b57\n        res-=cnt[j][a[i]]-cnt[i][a[i]];\n        return res;\n    };\n    vector&lt;array&lt;int,3&gt;&gt;ans;\n    for(int i=1; i&lt;=n; i++) {\n        for(int j=i+1; j&lt;=n; j++) {\n            ans.push_back({i,j,calc(i,j)});\n        }\n    }\n    sort(ans.begin(),ans.end(),[](array&lt;int,3&gt;x,array&lt;int,3&gt;y) {\n        return x[2]&lt;y[2];\n    });\n    if(ans.empty()||ans[0][2]&gt;0)\n        cout&lt;&lt;\"1 1\\n\";\n    else\n        cout&lt;&lt;ans[0][0]&lt;&lt;\" \"&lt;&lt;ans[0][1]&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#e","title":"E","text":"<p>\u7a0d\u5fae\u63a8\u4e00\u4e0b\u6216\u8005\u60f3\u4e00\u4e0b\u5c31\u80fd\u53d1\u73b0\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5bf9\u4e00\u5b9a\u662f \\(x\\) \u76f8\u540c\u6216\u8005 \\(y\\) \u76f8\u540c\u3002\u4f46\u662f\u6ce8\u610f \\(n\\) \u662f\u6709\u9650\u5236\u7684\uff0c\u4e14\u6bd4\u8f83\u5c0f\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba9\u6709\u7684\u6c34\u5e73\u7684\u7ebf\u4e0a\u70b9\u5c3d\u91cf\u7684\u591a\u3002</p> <p>\u4f46\u662f\u4e4b\u540e\u7684\u4e5f\u8981\u8003\u8651\u4e0d\u8981\u548c\u5b83\u4eec\u6a2a\u5750\u6807\u6216\u7eb5\u5750\u6807\u76f8\u540c\u3002</p> <p>\u5176\u5b9e\u53ef\u4ee5\u9012\u5f52\uff0c\u611f\u89c9\u4f1a\u6bd4\u8f83\u597d\u770b\u3002</p> <pre><code>void solve()\n{\n    int k;\n    cin&gt;&gt;k;\n    if(!k){\n        cout&lt;&lt;\"0\\n\";\n        return;\n    }\n    int X=1,Y=1;\n    vector&lt;pair&lt;int,int&gt;&gt;ans;\n    auto work=[&amp;](int cnt){\n        int sum=1;\n        int x=2;\n        ans.push_back({X,++Y});\n        ans.push_back({X,++Y});\n        while(sum+x&lt;cnt){\n            sum+=x;\n            x++;\n            ans.push_back({X,++Y});\n        }\n        ++X,Y+=2;\n        return sum;\n    };\n    int now=0;\n    while(now&lt;k){\n        now+=work(k-now);\n    }\n    cout&lt;&lt;ans.size()&lt;&lt;'\\n';\n    for(auto it:ans)\n        cout&lt;&lt;it.first&lt;&lt;\" \"&lt;&lt;it.second&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#f","title":"F","text":"<p>\u76f4\u63a5\u6253\u8868\u627e\u89c4\u5f8b\uff0c\u53d1\u73b0\u5927\u5c0f\u4e3a2\uff0c4\uff0c8\uff0c16\u8fd9\u4e9b\u7684\u4e09\u89d2\u5f62\uff0c\u90fd\u662f\u7531\u4e09\u4e2a\u5927\u5c0f\u4e3a\u5b83\u4eec\u4e8c\u5206\u4e4b\u4e00\u7684\u4e09\u89d2\u5f62\u62fc\u6210\u7684\uff0c\u4e2d\u95f4\u90e8\u5206\u90fd\u662f0\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5DFS\u4e86\uff0c\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u5f88\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4f46\u662fDFS\u4e5f\u633a\u597d\u5199\u7684\u3002</p> <pre><code>int val;\nvector&lt;int&gt;dfs(int k)\n{\n    if(k==1){\n        return {0,val};\n    }\n    vector&lt;int&gt;res(k+1);\n    int x=k-(1&lt;&lt;__lg(k));\n    if(!x) x=k&gt;&gt;1;\n    vector&lt;int&gt;nxt=dfs(x);\n    for(int i=1;i&lt;=x;i++)\n        res[i]=nxt[i];\n    auto it=nxt.rbegin();\n    for(int i=k,j=x;i&gt;=k-x+1;i--,j--)\n        res[i]=nxt[j];\n    return res;\n}\nvoid solve()\n{\n//  vector&lt;vector&lt;char&gt;&gt;a(100,vector&lt;char&gt;(100));\n//  for(int i=1;i&lt;=99;i++)\n//      for(int j=1;j&lt;=i;j++){\n//          if(j==1||j==i) a[i][j]='k';\n//          else{\n//              if(a[i-1][j-1]==a[i-1][j])\n//                  a[i][j]='0';\n//              else\n//                  a[i][j]='k';\n//          }\n//          cout&lt;&lt;a[i][j]&lt;&lt;\" \\n\"[j==i];\n//      }\n    //every triangle consists of 3 small one ,and the center part are all 0\n    //for example,if n=7:\n    //size 8 triangle consists of 3 4-size triangle\n    //so the problem is to find 3-size trangle\n    //*\n    //** so k0k k0k 0 k0k\n    int k;\n    cin&gt;&gt;k&gt;&gt;val;\n    vector&lt;int&gt;res=dfs(k);\n    for(int i=1;i&lt;=k;i++)\n        cout&lt;&lt;res[i]&lt;&lt;\" \\n\"[i==k];\n}\n</code></pre>"},{"location":"cp_solving/Codeforces/2072/#g","title":"G","text":"<p>\u5bf9\u4e8e \\(p\\le \\sqrt n\\) \u7684\u90e8\u5206\uff0c\u76f4\u63a5\u6c42\u89e3\u3002</p> <p>\u5bf9\u4e8e \\(\\sqrt n &lt; p \\le n\\) \u7684\u90e8\u5206\uff0c \\(n\\) \u7684 \\(p\\) \u8fdb\u5236\u6709\u4e14\u4ec5\u67092\u4f4d\u6570\u5b57\u3002</p> <p>\u4f4e\u4f4d\u662f \\(n\\) mod \\(p\\) = $n-p \\cdot \\lfloor \\frac{n}{p} \\rfloor   $  , \u9ad8\u4f4d\u662f \\(\\lfloor\\frac{n}{p}\\rfloor\\) .</p> <p>\u6b64\u65f6 $rev(n,p) = $ \\(p(n-p\\cdot \\lfloor \\frac{n}{p} \\rfloor)+\\lfloor\\frac{n}{p}\\rfloor=pn-p^2\\lfloor\\frac{n}{p}\\rfloor+\\lfloor\\frac{n}{p}\\rfloor\\) </p> <p>\u5bf9\u4e8e \\(i\\) \uff0c\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3 $\\lfloor\\frac{n}{j}\\rfloor= $ \\(\\lfloor\\frac{n}{i}\\rfloor\\) \u7684 \\(j\\) \u662f \\(\\lfloor \\frac{n}{\\lfloor\\frac{n}{i}\\rfloor} \\rfloor\\) .</p> <p>\u56e0\u4e3a \u5f53 \\(\\lfloor\\frac{n}{i}\\rfloor=k\\) \u65f6\uff0c $k \\le \\lfloor\\frac{n}{i}\\rfloor &lt; k+1 $ \uff0c \u53ef\u4ee5\u53d8\u5f62\u4e3a \\(\\frac {n}{k+1} &lt; i \\le \\frac{n}{k}\\) \uff0c\u6240\u4ee5\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u6574\u6570\u5373\u4e3a \\(\\lfloor \\frac{n}{k} \\rfloor\\) .</p> <p>\u90a3\u4e48 \\([i,j]\\) \u8fd9\u4e00\u6bb5\u7684  \\(\\lfloor\\frac{n}{p}\\rfloor\\) \u90fd\u662f\u76f8\u7b49\u7684 \u3002</p> <p>\u6574\u4e86\u597d\u4e45\u6837\u4f8b\u90fd\u4e0d\u5bf9\uff0c\u7136\u540e\u770b\u4e86\u773c\u9898\u76ee\u53d1\u73b0mod\u53d6\u9519\u4e86\u3002\u3002\u3002\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// #define int long long\nconstexpr int N = 3e5;\n// constexpr int mod = 998244353;\nconstexpr int mod = 1e9 + 7;\n//\u516d\u767e\u516d\u5341\u516d mod \u53d6\u9519\u4e86\u3002\u3002\u3002\n\nvector&lt;long long&gt; s1(N + 1);\n\nvoid solve()\n{\n    int n;\n    long long k;\n    cin &gt;&gt; n &gt;&gt; k;\n    // pn-p*p*(n/p)+n/p\n    long long ans = 0;\n    if (k &gt; n) {\n        ans += ((k - n) % mod) * n % mod;\n        k = n;\n    }\n    for (int i = 2; i &lt;= k; i++) {\n        if (1LL * i * i &lt;= n) {\n            vector&lt;int&gt; v;\n            int x = n;\n            while (x) {\n                v.push_back(x % i);\n                x /= i;\n            }\n            for (auto j : v)\n                x = x * i + j;\n            ans = (ans + x) % mod;\n        } else {\n            int L = i;\n            auto calc = [](int l, int r) {\n                return 1LL * (r - l + 1) * (l + r) / 2 % mod;\n            };\n            while (L &lt;= k) {\n                int R = n / (n / L);\n                if (R &gt; k)\n                    R = k;\n                ans = (ans - ((s1[R] - s1[L - 1]) % mod) * (n / L) % mod) % mod;\n                ans = (ans + 1LL * calc(L, R) * n % mod) % mod;\n                ans = (ans + 1LL * (R - L + 1) * (n / L) % mod) % mod;\n                ans = (ans + mod) % mod;\n\n                L = R + 1;\n            }\n            break;\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    for (int i = 1; i &lt;= N; i++)\n        s1[i] = (s1[i - 1] + 1LL * i * i % mod) % mod;\n    int t;\n    cin &gt;&gt; t;\n    while (t--)\n        solve();\n    return 0;\n}\n</code></pre>"},{"location":"cp_solving/nowcoder/102303/","title":"\u725b\u5ba2\u5468\u8d5b82","text":"<p>\u6700\u7b80\u5355\u7684\u4e00\u96c6\uff0c\u7b2c\u4e00\u6b21ak\u5468\u8d5b\u3002</p> <p>\u672c\u6765\u6ca1\u6253\u7b97\u6253\u7684\uff0c\u4f46\u662f\u5403\u996d\u7684\u65f6\u5019\u770b\u5230\u7fa4\u91cc\u6709\u4eba\u5410\u69fd\u592a\u7b80\u5355\u4e86\uff0c\u6709\u4eba\u8bf4F\u9898\u592a\u7b80\u5355\u4e86\u3002\u3002\u7136\u540e\u6211\u56de\u6765\u4e5f\u56db\u5341\u591a\u5206\u949fak\u4e86\u3002</p>"},{"location":"cp_solving/nowcoder/102303/#a","title":"A","text":""},{"location":"cp_solving/nowcoder/102303/#b","title":"B","text":""},{"location":"cp_solving/nowcoder/102303/#c","title":"C","text":"<p>\u80af\u5b9a\u662f\u6309\u5927\u5c0f\u987a\u5e8f\u53bb\u6392\u961f\u7684\u3002\u4f46\u662f\u5982\u679c\u5927\u5c0f\u76f8\u540c\u80af\u5b9a\u4e0d\u7b26\u5408\u3002\u6240\u4ee5\u6392\u5e8f\u7136\u540e\u6309\u5927\u5c0f\u8f93\u51fa\u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;pii&gt;a(n);\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;a[i].fi;\n        a[i].se=i+1;\n    }\n    sort(all(a));\n    for(int i=1;i&lt;n;i++){\n        if(a[i].fi==a[i-1].fi){\n            cout&lt;&lt;\"NO\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;\"YES\\n\";\n    for(int i=0;i&lt;n;i++)\n        cout&lt;&lt;a[i].se&lt;&lt;\" \\n\"[i+1==n];\n}\n</code></pre>"},{"location":"cp_solving/nowcoder/102303/#d","title":"D","text":"<p>\u7ed9\u7684\u6570\u7ec4\u662f\u4e00\u4e2a\u9012\u51cf\u7684\u6570\u7ec4\uff0c\u53ea\u6709\u65b0\u7684\u6570\u5b57\u51fa\u73b0\uff0c\u8fd9\u4e2a\u6570\u5b57\u624d\u662f\u786e\u5b9a\u7684\u3002\u5176\u4ed6\u7684\u4f4d\u7f6e\u53ef\u4ee5\u586b\u6ee1\u8db3\u6761\u4ef6\u7684\u6240\u6709\u6570\u5b57\u3002</p> <pre><code>7\n6 2 2 1 1 1 1\n</code></pre> <p>\u6bd4\u5982\u770b\u8fd9\u4e2a\u6837\u4f8b\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a \\(a_1=6\\) \uff0c \\(a_2=2\\) \uff0c \\(a_4=1\\) \uff0c\u5176\u4ed6\u5730\u65b9\u6211\u4eec\u4e0d\u77e5\u9053\u4ed6\u80fd\u586b\u591a\u5c11\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u53ef\u4ee5\u53d6\u591a\u5c11\u4e2a\u6570\uff0c\u6bd4\u5982 \\(a_3\\) \u53ef\u4ee5\u662f \\([3,4,5,7]\\) \uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u67094\u79cd\u60c5\u51b5\u3002\u6240\u4ee5\u7b54\u6848\u4f1a\u4e584\uff0c\u518d\u5230\u540e\u9762\u7684\u53d6\u503c\u4e0d\u786e\u5b9a\u7684\u5730\u65b9\uff0c\u7ed3\u679c\u7684\u53ef\u80fd\u6027\u5c31\u4f1a\u5c111\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\uff0c\u521a\u5f00\u59cb\u53ef\u4ee5\u53d6\u503c\u7684\u6570\u5b57\u6570\u91cf\u4e3a \\(n-a_1\\) \uff0c\u7136\u540e\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u53d6\u503c\u5c31\u4f1a\u589e\u52a0 \\(a_i-a_{i-1}-1\\) \u79cd\uff0c\u7136\u540e\u5982\u679c\u76f8\u7b49\u7684\u8bdd\uff0c\u5c31\u4f1a-1\u79cd\u3002\u800c\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u663e\u7136\u53ea\u6709\u6570\u7ec4\u4e3a\u975e\u9012\u51cf\u65f6\u3002</p> <pre><code>constexpr int mod = 998244353;\n\nvoid solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi a(n+1);\n    for(int i=1;i&lt;=n;i++)\n        cin&gt;&gt;a[i];\n    int have=n-a[1];\n    ll res=1;\n    for(int i=2;i&lt;=n;i++){\n        if(a[i]==a[i-1]){\n            res=res*have%mod;\n            have--;\n        }else if(a[i]&lt;a[i-1]){\n            have+=a[i-1]-a[i]-1;\n        }else{\n            cout&lt;&lt;\"0\\n\";\n            return;\n        }\n    }\n    cout&lt;&lt;res&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/nowcoder/102303/#e","title":"E","text":"<p>\u8fd9\u4e2a\u9898\u5c31\u662f\u8bf4\u6570\u7ec4 \\(a\\) \u548c \\(b\\) \u90fd\u8981\u53d6 \\(m\\) \u4e2a\u6570\u5b57\uff0c\u4e14 \\(a\\) \u53d6\u7684 \\(m\\) \u4e2a\u6570\u5b57\uff0c\u4e0b\u6807\u90fd\u6bd4 \\(b\\) \u9009\u51fa\u6765\u7684\u6570\u5b57\u8981\u5c0f\u3002\u8981\u4f7f\u5f97\u4ed6\u4eec\u7684\u548c\u6700\u5c0f\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u524d \\(i\\) \u4e2a\u6570\u5b57\u91cc\u9762\uff0c\\(a\\) \u53d6 \\(m\\) \u4e2a\u6570\u5b57\u7684\u6700\u5c0f\u503c\u3002\u8fd8\u6709 \\(b\\) \u4ece \\([i,n]\\) \u4e4b\u95f4\u9009 \\(m\\) \u4e2a\u6570\u5b57\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6216 multiset \u6765\u7ef4\u62a4\u3002\u5f53\u6570\u5b57\u591a\u4e8em\u4e2a\u65f6\u5220\u9664\u6700\u5927\u7684\u6570\u5b57\u3002</p> <p>\u6ce8\u610fmultiset\u5220\u9664val\u65f6\u4f1a\u5220\u9664\u6240\u6709\u7b49\u4e8e\u8fd9\u4e2a\u503c\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528st.erase(st.lower_bound(val))\u6216st.erase(st.find(val))\u6216st.erase(prev(st.end())\u3002</p> <pre><code>void solve()\n{\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vi a(n+1),b(n+1);\n    vl s1(n+1),s2(n+1);\n    multiset&lt;int&gt;st1,st2;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n    }\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;b[i];\n    }\n    ll sum=0;\n    for(int i=1;i&lt;=n;i++){\n        st1.insert(a[i]);\n        sum+=a[i];\n        while(sz(st1)&gt;m){\n            sum-=*st1.rbegin();\n            st1.erase(prev(st1.end()));\n        }\n        s1[i]=sum;\n    }\n    sum=0;\n    for(int i=n;i&gt;=1;i--){\n        st2.insert(b[i]);\n        sum+=b[i];\n        while(sz(st2)&gt;m){\n            sum-=*st2.rbegin();\n            st2.erase(prev(st2.end()));\n        }\n        s2[i]=sum;\n    }\n    ll ans=LNF;\n    for(int i=m;i+m&lt;=n;i++){\n        cmin(ans,s1[i]+s2[i+1]);\n    }\n    cout&lt;&lt;ans&lt;&lt;'\\n';\n}\n</code></pre>"},{"location":"cp_solving/nowcoder/102303/#f","title":"F","text":"<p>\u610f\u601d\u5c31\u662f\u8bf4\u6bcf\u4e00\u4e2a\u5b50\u6570\u7ec4\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u6570\u5b57\u5728\u8fd9\u4e2a\u5b50\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u4e14\u4e0d\u540c\u7684\u6570\u5b57\u6700\u5c11\u3002</p> <p>\u6211\u4eec\u5148\u4ece\u5c0f\u7684\u60c5\u51b5\u5f00\u59cb\u8003\u8651\uff0c</p> <p>\\(n\\) = 3 \u65f6\uff0c\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e3a \\([1,2,1]\\) \u6216 \\([2,1,2]\\) \u3002</p> <p>\u90a3\u6211\u4eec\u7ee7\u7eed \\(n=4\\) \u65f6\uff0c\u5fc5\u987b\u5f97\u591a\u7528\u4e00\u4e2a \\(3\\) \u4e86\u3002</p> <p>\u7136\u540e\u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 \\([1,2,1,3]\\) \u540e\u9762\u52a0\u4e00\u4e2a \\([1,2,1]\\) \uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6570\u7ec4\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u90fd\u4f1a\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u7136\u540e\u628a\u4e4b\u524d\u7684\u6570\u7ec4\u62fc\u5728\u540e\u9762\u3002</p> <p>\u6bd4\u5982\u5982\u679c\u957f\u5ea6\u5927\u4e8e 7 \uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u52a0\u4e00\u4e2a 4\uff0c\u540e\u9762\u53c8\u80fd\u5728\u62fc\u4e0a \\([1,2,1,3,1,2,1]\\) \u3002</p> <pre><code>void solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    vi ans;\n    int x=1;\n    ans.push_back(1);\n    while(sz(ans)&lt;n){\n        vi tmp=ans;\n        ++x;\n        ans.push_back(x);\n        for(auto y:tmp)\n            ans.push_back(y);\n    }\n    cout&lt;&lt;x&lt;&lt;'\\n';\n    for(int i=0;i&lt;n;i++)\n        cout&lt;&lt;ans[i]&lt;&lt;\" \\n\"[i==n-1];\n}\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u53ef\u4ee5\u5f53div2B(\u6ca1\u6709\u5c2c\u9ed1</p> <p>\u4e4b\u524d\u7684\u5f88\u591a\u5468\u8d5bF\u8fd8\u633a\u96be\u7684\u3002\u8fd9\u573a\u5e94\u8be5\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e00\u573a\u3002\u6211\u4e5f\u662f\u770b\u5230\u5927\u5bb6\u8bf4</p>"},{"location":"daily/2025/2025_0118/","title":"2025-01-18","text":"<p>\u4eca\u5929\u53c8\u662f\u4ec0\u4e48\u90fd\u6ca1\u5199\u7684\u4e00\u5929\uff0c\u5c31\u665a\u4e0a\u770b\u4e86\u4e00\u4e2a\u9898\u76ee\u3002</p> <p>\u81ea\u4ece1\u670811\u53f7\u56de\u5bb6\u5230\u4eca\u5929\uff0c\u4e00\u4e2a\u661f\u671f\u591a\u4e86\uff0c\u4e00\u76f4\u5728\u73a9\uff0c\u5199\u9898\u5f88\u5c11\uff0c\u8981\u7a0d\u5fae\u591a\u5199\u4e00\u70b9\u4e86\u3002\u592a\u5e9f\u4e86\u3002\u3002\u3002</p> <p>\u521a\u624d\u770b\u4e86CF2043D\uff0c\u82b1\u4e86\u4e00\u5c0f\u65f6\u591a\u65f6\u95f4\u624dAC\uff0c\u800c\u4e14\u8fd8\u770b\u4e86\u9898\u89e3\u624d\u5199\u51fa\u6765\u3002</p> <p>\u662f\u4e00\u4e2a *1800 \u7684\u9898\u76ee\uff0c\u4f46\u662f\u611f\u89c9\u6ca1\u6709\u5f88\u96be\u7684\u3002\u3002\u3002\u4f46\u662f\u6211\u4e0d\u4f1a\u5199\u3002</p>"},{"location":"daily/2025/2025_0118/#_1","title":"\u9898\u76ee\u5927\u610f","text":"<p>\u7ed9\u4e09\u4e2a\u6570\u5b57\uff0c\\(l\\) ,\\(r\\), \\(G\\), \u627e\u51fa\u4e24\u4e2a\u6570\u5b57 \\(A\\) \u548c \\(B\\) \uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570(GCD)\u7b49\u4e8e \\(G\\) \u5e76\u4e14 \\(|A-B|\\) \u6700\u5927\u3002</p> <p>\u5982\u679c\u6709\u591a\u5bf9\u8fd9\u6837\u7684\u6570\u5b57\uff0c\u9009\u62e9 \\(A\\) \u6700\u5c0f\u7684\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa \"-1 -1\"\u3002</p> <p>\u8f93\u5165\u4e09\u4e2a\u6570\u5b57 \\(l\\), \\(r\\) , \\(G\\) (\\(1\\le l\\le r\\le10^{18}\\); $1\\le G\\le10^{18} $)</p>"},{"location":"daily/2025/2025_0118/#_2","title":"\u601d\u8def","text":"<p>\u7531\u4e8e\\(gcd(A,B)=G\\),</p> <p>\u6240\u4ee5 \\(A\\) \u548c \\(B\\) \u4e00\u5b9a\u90fd\u662f G\u7684\u500d\u6570\u3002</p> <p>\u8bb0\u4e3a \\(A=aG,B=bG\\) ,</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981 \\(gcd(a,b)=1\\),</p> <p>\u5373\u6211\u4eec\u8981\u627e\u5230 \\(a, b \\in [\\ \\lceil\\frac{l}{G}\\rceil\\ ,\\ \\lfloor\\frac{r}{G}\\rfloor\\ ]\\) \uff0c\u6ee1\u8db3 \\(gcd(a,b)=1\\) \uff0c\u4e14 \\(|b-a|\\) \u6700\u5927\uff0c\\(a\\) \u5c3d\u91cf\u5c0f\u3002</p> <p>\u770b\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u4f46\u662f\u5176\u5b9e\u4e24\u4e2a\u4e92\u8d28\u7684\u6570\u662f\u975e\u5e38\u591a\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u627e\u5e76\u4e0d\u4f1a\u627e\u5f88\u591a\u6b21\u3002</p> <p>\u6709\u8fd9\u4e48\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u7d20\u6570\u662f\u5bc6\u96c6\u7684\uff0c\u8bf4\u4eba\u8bdd\u5c31\u662f\u7d20\u6570\u4e24\u4e24\u4e4b\u95f4\u6328\u7684\u975e\u5e38\u8fd1\uff0c\\(\\le n\\) \u7684\u7d20\u6570\u4e24\u4e24\u8ddd\u79bb\u5927\u7ea6\u662f \\(\\log n\\) \uff0c\u6240\u4ee5\u6700\u591a\u51e0\u5341\u6b21\u5c31\u4f1a\u627e\u5230\u4e00\u4e2a\u8d28\u6570\uff0c\u800c\u8d28\u6570\u548c\u4efb\u4f55\u6570\u5b57\u90fd\u662f\u4e92\u8d28\u7684\u3002\u6240\u4ee5\u6211\u4eec\u627e\u4e24\u4e2a\u4e92\u8d28\u7684\u6570\u53ea\u4f1a\u66f4\u5feb\u3002</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u68c0\u67e5\u6bcf\u4e00\u4e2a\u957f\u5ea6\uff0c\u662f\u5426\u53ef\u4ee5\u627e\u5230\u5408\u6cd5\u7684\u5c31\u5f73\u4e8d\u4e86\u3002</p> <pre><code>void solve()\n{\n    ll l,r,G;\n    cin&gt;&gt;l&gt;&gt;r&gt;&gt;G;\n    ll tl=((l-1)/G+1)*G,tr=r/G*G;\n    if(tl&gt;r||tr&lt;l){\n        cout&lt;&lt;\"-1 -1\\n\";\n        return;\n    }\n    l=tl,r=tr;\n    for(ll d=(r-l)/G;d&gt;=1;d--){\n        for(ll L=l/G;L+d&lt;=r/G;L++){\n            if(gcd(L,L+d)==1){\n                cout&lt;&lt;L*G&lt;&lt;\" \"&lt;&lt;(L+d)*G&lt;&lt;'\\n';\n                return;\n            }\n        }\n    }\n    if(l==G)\n        cout&lt;&lt;G&lt;&lt;\" \"&lt;&lt;G&lt;&lt;'\\n';\n    else\n        cout&lt;&lt;\"-1 -1\\n\";\n}\n</code></pre> <p>\u660e\u5929\u518d\u5199\uff08\uff09\u3002</p>"},{"location":"daily/2025/2025_0215/","title":"2025-02-15","text":"<p>\u4eca\u5929\u4e0b\u5348\u521a\u5230\u5b66\u6821\u554a\uff0c\u8fd9\u4e2a\u5bd2\u5047\u8fc7\u5f97\u771f\u5feb\u3002\u3002\u3002</p> <p>\u4f46\u5176\u5b9e\u8fd9\u4e2a\u5bd2\u5047\u4ec0\u4e48\u90fd\u6ca1\u5e72\uff0c\u6ca1\u5199\u51e0\u4e2a\u9898\uff0c\u4e5f\u6ca1\u5b66\u4ec0\u4e48\u4e1c\u897f\u3002\u4f46\u662f\u8fc7\u7684\u901f\u5ea6\u53ef\u662f\u5f88\u5feb\u3002\u3002\u3002\u4e00\u4e0b\u5c31\u7ed3\u675f\u4e86\u3002</p> <p>\u62a5\u540d\u4e86\u725b\u5ba2\u5bd2\u5047\u8425\uff0c\u672c\u4ee5\u4e3a\u81ea\u5df1\u4f1a\u56e0\u4e3a\u8fd9\u4e2a\u800c\u6709\u5f88\u5927\u8fdb\u6b65\uff0c\u4f46\u662f\u6bcf\u573a\u81ea\u5df1\u7684\u6392\u540d\u90fd\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u751a\u81f3\u540e\u9762\u7684\u6bd4\u524d\u9762\u7684\u8fd8\u5dee\uff0c\u6839\u672c\u6ca1\u6709\u8fdb\u6b65\u3002\u9898\u4e5f\u6ca1\u548b\u8865\u3002\u4f46\u662f\u66f4\u8ba9\u6211\u770b\u6e05\u695a\u4e86\u6211\u548c\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u6211\u4e00\u76f4\u4e00\u5343\u591a\u540d\uff0c\u5c31\u662f\u597d\u4e0d\u4e86\u3002 <code>\u4ed6\u4eec</code> \u90fd\u597d\u5389\u5bb3\u3002\u3002\u3002</p> <p>\u4e0a\u4e0d\u53bb\u4e0b\u4e0d\u6765\u5361\u8fd9\u91cc\uff0c\uff08\uff09\u3002</p> <p>\u4eca\u5929\u5f88\u5f00\u5fc3\u7684\u5c31\u662f\u4e70\u4e86\u4e00\u4e2a\u57df\u540d\uff0c\u611f\u89c9\u5e94\u8be5\u4f1a\u6709\u5f88\u591a\u7528\u5f97\u4e0a\u7684\u5730\u65b9\uff0c\u76ee\u524d\u7528\u6765\u5f04\u6210\u535a\u5ba2\u7684\u57df\u540d\uff0c\u4e4b\u524d\u5728github pages\u7684\uff0c\u6ca1\u52a0\u901f\u5668\u5f88\u96be\u8bbf\u95ee\uff0c\u73b0\u5728\u90fd\u884c\u4e86\uff0c\u5c31\u5f88\u723d\u3002</p> <p>\u7b49\u4ee5\u540e\u6709\u4e86\u670d\u52a1\u5668\u518d\u5b66\u70b9\u6280\u672f\uff0c\u5c31\u53ef\u4ee5\u6298\u817e\u66f4\u591a\u73a9\u6cd5\u4e86\u3002</p> <p>\u7f3a\u7684\u5237\u9898\u8fd9\u5757\u4e5f\u662f\u5f97\u597d\u597d\u8865\u8865\u4e86\uff0c\u4e0a\u534a\u5e74\u4e89\u53d6\u80fd\u53bb\u7684\u6bd4\u8d5b\u4e0d\u8981\u592a\u4e22\u4eba\uff0c\u5e0c\u671b\u80fd\u6709\u597d\u70b9\u7684\u4f53\u9a8c\u3002\u660e\u5929\u5c31\u5f00\u59cb\u5237\u9898\u3002</p> <p>\u8fd9\u5b66\u671f\u7684\u8ddf\u8ba1\u7b97\u673a\u6709\u5173\u7684\u8bfe\u57fa\u672c\u90fd\u5728\u673a\u623f\uff0c\u8fd8\u662f\u5f88\u597d\u7684\uff0c\u6211\u5c06\u8ddf\u7740\u5b66\u4e00\u4e0b\u3002\u6709\u6570\u636e\u5e93\uff0cjavaweb\u548c\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u3002\u611f\u89c9\u5e94\u8be5\u4f1a\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5185\u5bb9\u3002\u800c\u4e14JavaWeb\u7684\u6559\u6750\u8fd8\u662f\u9ed1\u9a6c\u7a0b\u5e8f\u5458\u7684\uff0c\u6709\u70b9\u610f\u601d\u54c8\u3002\u8001\u5e08\u5f88\u597d\uff0c\u6211\u5c06\u597d\u597d\u5b66\u4e60\u3002</p> <p>\u6211\u5199\u8fd9\u79cd\u5185\u5bb9\u8001\u662f\u7279\u522b\u4e71\u7684\uff0c\u4e0d\u77e5\u9053\u8981\u5199\u4e9b\u4ec0\u4e48\u3002\u3002\u3002</p> <p>\u603b\u4e4b\u8fc7\u53bb\u7684\u90fd\u5df2\u7ecf\u8fc7\u53bb\u4e86\uff0c\u6211\u76f8\u4fe1\u81ea\u5df1\u4f1a\u5199\u4e00\u4e9b\u9898\u76ee\u7684\uff0c\u4f1a\u6709\u5f88\u5927\u5f88\u5927\u7684\u8fdb\u6b65\u7684\u3002</p>"},{"location":"develepment/frontend/main/","title":"\u524d\u7aef","text":""},{"location":"develepment/frontend/main/#_1","title":"\u524d\u7aef\u57fa\u7840\u77e5\u8bc6","text":"<p>\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u4e0d\u662f\u5f88\u4f1a\uff0c\u6b63\u5728\u5b66\u4e60\u3002</p> <p>\u6211\u4eec\u8981\u901a\u8fc7css\u6765\u8c03\u6574\u7f51\u9875\u7684\u5e03\u5c40\u3002</p> <p>\u53c2\u8003\u8d44\u6599:</p> <p>CSS \u9009\u62e9\u5668 - CSS\uff1a\u5c42\u53e0\u6837\u5f0f\u8868 | MDN</p> <p>\u8ba1\u5212\u662f\u6211\u5b66\u4e00\u70b9\u4e1c\u897f\u5c31\u7a0d\u5fae\u8bb0\u4e00\u70b9\uff0c\u7136\u540e\u7b49\u6211\u638c\u63e1\u6bd4\u8f83\u719f\u7ec3\uff0c\u5c31\u51fa\u4e00\u4e0b\u5b8c\u6574\u7f51\u9875\u7684\u8bb2\u89e3\u3002</p>"},{"location":"develepment/frontend/main/#css","title":"CSS\u5c5e\u6027","text":""},{"location":"develepment/frontend/main/#1css","title":"1.CSS\u8bed\u6cd5","text":"<p>CSS \u7531 \u9009\u62e9\u5668\uff08Selector\uff09 \u548c \u58f0\u660e\uff08Declaration\uff09 \u7ec4\u6210\uff1a</p> <pre><code>\u9009\u62e9\u5668 {\n    \u5c5e\u6027: \u503c;\n}\n</code></pre>"},{"location":"develepment/frontend/main/#_2","title":"\u4f8b\u5b50\uff1a","text":"<pre><code>p {\n    color: red;       /* \u8bbe\u7f6e\u6587\u672c\u989c\u8272\u4e3a\u7ea2\u8272 */\n    font-size: 20px;  /* \u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f\u4e3a20px */\n}\n</code></pre> <p>\u50cf\u8fd9\u6837\u5c31\u662f\u8bbe\u7f6e\u6240\u6709\u7684 <code>&lt;p&gt;</code> \u6807\u7b7e\u7684\u6837\u5f0f\u3002</p> <p>\u6bcf\u4e2a\u5c5e\u6027\u540e\u9762\u8981\u5206\u53f7\uff0c\u5927\u62ec\u53f7\u540e\u9762\u4e0d\u8981\u5206\u53f7\uff01</p>"},{"location":"develepment/frontend/main/#2css","title":"2.CSS\u9009\u62e9\u5668","text":"<p>\u9009\u62e9\u5668\u6709\u597d\u591a\u79cd\uff0c\u53ea\u8bf4\u4e00\u4e0b\u6211\u76ee\u524d\u7528\u8fc7\u7684\u3002</p>"},{"location":"develepment/frontend/main/#_3","title":"\u901a\u7528\u9009\u62e9\u5668","text":"<pre><code>* {\n}\n</code></pre> <p>\u5339\u914d\u6587\u6863\u7684\u6240\u6709\u5143\u7d20\u3002\u7ed9\u6240\u6709\u6807\u7b7e\u8bbe\u7f6e\u6837\u5f0f\u3002</p>"},{"location":"develepment/frontend/main/#_4","title":"\u5143\u7d20\u9009\u62e9\u5668","text":"<pre><code>header {\n    display: flex;\n    padding: 5px;\n    margin: 0px;\n    align-items: center;\n}\n</code></pre> <p>\u7c7b\u4f3c\u8fd9\u79cd\uff0c\u524d\u9762\u662f\u6807\u7b7e\u540d\u3002\u53ef\u4ee5\u8bbe\u7f6e\u6240\u6709\u8fd9\u4e2a\u6807\u7b7e\u7684\u6837\u5f0f\u3002\u6211\u8fd9\u4e2a\u5c31\u662f\u8bbe\u7f6e\u7684\u6240\u6709\u7684 <code>&lt;header&gt;</code> \u6807\u7b7e\u7684\u6837\u5f0f\u3002</p>"},{"location":"develepment/frontend/main/#_5","title":"\u7c7b\u9009\u62e9\u5668","text":"<p>\u9009\u62e9\u7279\u5b9a\u7684\u7c7b\u3002</p> <pre><code>.navbar {\n    display: flex;\n    align-items: center;\n    margin-left: auto; /* \u4f7f\u5f97\u5bfc\u822a\u680f\u81ea\u52a8\u79fb\u52a8\u5230\u53f3\u8fb9 */\n    margin-right: 50px;\n}\n</code></pre> <p>\u9009\u62e9\u6240\u6709navbar\u7c7b\uff0c\u5927\u62ec\u53f7\u524d\u9762\u662f <code>.classname</code> \uff0c\u4e00\u4e2a\u70b9+\u7c7b\u540d\u3002\u5728\u9700\u8981\u7684\u6807\u7b7e\u91cc\u8bbe\u7f6eclass\u5c5e\u6027\uff0c\u7136\u540e\u901a\u8fc7class\u6765\u9009\u62e9\u5143\u7d20\u3002</p>"},{"location":"develepment/frontend/main/#id","title":"ID\u9009\u62e9\u5668","text":"<p>\u6309\u7167 <code>id</code> \u5c5e\u6027\u9009\u62e9\u4e00\u4e2a\u4e0e\u4e4b\u5339\u914d\u7684\u5143\u7d20\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e2a\u6587\u6863\u4e2d\uff0c\u6bcf\u4e2a ID \u5c5e\u6027\u90fd\u5e94\u5f53\u662f\u552f\u4e00\u7684\u3002</p> <p>\u8bed\u6cd5\uff1a<code>#idname</code></p> <p>\u4f8b\u5b50\uff1a<code>#toc</code> \u5339\u914d ID \u4e3a \"toc\" \u7684\u5143\u7d20\u3002</p> <p>\u8fd9\u4e2a\u8fd8\u6ca1\u7528\u8fc7\uff0c<code>id</code> \u5c5e\u6027\u8fd8\u6ca1\u7528\u8fc7\u3002</p>"},{"location":"develepment/frontend/main/#_6","title":"\u7ec4\u5408\u9009\u62e9\u5668","text":"<p>\u53ef\u4ee5\u540c\u65f6\u9009\u62e9\u591a\u4e2a\u5143\u7d20\u3002</p> <pre><code>.search_button, .search_input {\n    box-sizing: border-box; /* \u4f7f\u5f97\u8f93\u5165\u6846\u548c\u641c\u7d22\u6309\u94ae\u9ad8\u5ea6\u76f8\u540c */\n    height: 32px;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n}\n</code></pre> <p>\u6211\u8fd9\u4e2a\u5c31\u662f\u540c\u65f6\u8bbe\u7f6e\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e9b\u5171\u540c\u7684\u5c5e\u6027\uff0c\u4e0d\u9700\u8981\u5199\u4e24\u6b21\u4e86\u3002\u3002</p> <p>\u7528\u6cd5\u5c31\u662f <code>A, B</code> \uff0c\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u5143\u7d20\uff0c\u7528\u9017\u53f7\u8fde\u63a5\uff0c\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u9009\u62e9\u5668\u8fde\u4e00\u8d77\uff0c\u4f8b\u5982\u5143\u7d20\u9009\u62e9\u5668\u548c\u7c7b\u9009\u62e9\u5668\uff0c\u4e5f\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u9009\u62e9\u5668\u5217\u8868\u3002</p>"},{"location":"develepment/frontend/main/#_7","title":"\u540e\u4ee3\u9009\u62e9\u5668","text":"<p>\u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7684\u5c42\u7ea7\u3002</p> <pre><code>.product p {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;  /* \u9650\u5236\u6700\u591a\u663e\u793a3\u884c */\n    -webkit-box-orient: vertical;  /* \u5782\u76f4\u6392\u5217 */\n    overflow: hidden;  /* \u8d85\u51fa\u5185\u5bb9\u9690\u85cf */\n    text-overflow: ellipsis;  /* \u8d85\u51fa\u90e8\u5206\u663e\u793a\u7701\u7565\u53f7 */\n    white-space: normal;  /* \u5141\u8bb8\u6362\u884c */\n    word-wrap: break-word;  /* \u81ea\u52a8\u6362\u884c */\n\n    line-clamp: 2;                     /* \u6807\u51c6\u5199\u6cd5 */\n    box-orient: vertical;              /* \u6807\u51c6\u5199\u6cd5 */\n}\n</code></pre> <p>\u7528\u6cd5\u5c31\u662f <code>A B</code> \uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u6309\u5c42\u7ea7\u9009\u62e9\u7684\uff0c\u4e5f\u53ef\u4ee5\u591a\u5c42\uff0c\u4f46\u662f\u4e00\u822c\u6ca1\u5fc5\u8981\u3002\u4e5f\u662f\u53ef\u4ee5\u7c7b\u540d\u548c\u5143\u7d20\u540d\u8fd9\u4e9b\u6df7\u5408\u7684\uff0c\u975e\u5e38\u7684\u723d\u554a\u3002</p>"},{"location":"develepment/frontend/main/#css3","title":"\u5f15\u5165css\u7684\u65b9\u5f0f\u67093\u79cd\u5e38\u89c1\u65b9\u5f0f:","text":""},{"location":"develepment/frontend/main/#_8","title":"\u5916\u90e8\u5f15\u5165","text":"<p>\u5728head\u90e8\u5206\u6dfb\u52a0 <code>link</code> \u6807\u7b7e\u5f15\u5165\u5916\u90e8CSS\u6587\u4ef6\u3002</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"./css/main.css\"&gt;\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u901a\u8fc7CDN\u5f15\u7528\uff0c\u6216\u8005\u76f4\u63a5\u4e0b\u8f7d\u6846\u67b6\uff0c\u6709\u7684\u4f1a\u6709\u5199\u597d\u7684CSS\uff0c\u6bd4\u5982bootstrap\u3002</p> <p>CSS\u5199\u5728\u5355\u72ec\u7684\u6587\u4ef6\u91cc\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5730\u65b9\u5c31\u662f\uff0cVS Code\u7528\u5feb\u6377\u952e\u6ce8\u91ca\u4ee3\u7801\u65f6\uff0c\u65e0\u6cd5\u6ce8\u91caHTML\u91cc\u7684style\u6807\u7b7e\u7684\u5185\u5bb9\uff0c\u56e0\u4e3aHTML\u548cCSS\u7684\u6ce8\u91ca\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u6ce8\u610f\u5355\u8bcd\u4e0d\u8981\u5199\u9519\u4e86\uff0c<code>stylesheet</code> \u540e\u9762\u6ca1\u6709s\u3002</p>"},{"location":"develepment/frontend/main/#css_1","title":"\u5185\u90e8CSS","text":"<p>\u76f4\u63a5\u5728style\u6807\u7b7e\u4e2d\u5199CSS\u4ee3\u7801\u3002</p> <p>\u4e00\u822c\u628astyle\u6807\u7b7e\u653e\u5728head\u6807\u7b7e\u91cc\u3002</p> <pre><code>&lt;head&gt;\n    &lt;style&gt;\n        body {\n            background-color: lightblue;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"develepment/frontend/main/#css_2","title":"\u884c\u5185CSS","text":"<p>\u76f4\u63a5\u5728HTML\u6807\u7b7e\u7684 <code>style</code> \u6807\u7b7e\u4e2d\u5199\u4ee3\u7801\u3002</p> <pre><code>&lt;img src=\"img/junjie.jpg\" width=\"64px\" style=\"margin-right: 2em; \"&gt;\n</code></pre> <p>\u6bd4\u8f83\u9002\u5408\u4e34\u65f6\u6837\u5f0f\uff0c\u800c\u4e14\u6bd4\u8f83\u65b9\u4fbf\u63a7\u5236\u3002</p>"},{"location":"develepment/frontend/main/#_9","title":"\u5f15\u5165\u5b57\u4f53","text":""},{"location":"develepment/frontend/main/#cdn","title":"CDN\u5f15\u5165","text":"<pre><code>/* \u5f15\u5165\u971e\u9e5c\u6587\u6977 */\n@import url('https://cdn.jsdelivr.net/npm/lxgw-wenkai-webfont@1.1.0/style.css');\n\n/* \u5168\u5c40\u8bbe\u7f6e\u5b57\u4f53 */\nbody {\n  font-family: 'LXGW WenKai', serif !important;\n}\n</code></pre>"},{"location":"misc/MkDocs/","title":"MkDocs","text":"<p>\u770b\u5230\u5f88\u591a\u5927\u4f6c\u7684\u535a\u5ba2\u90fd\u662f\u8fd9\u4e2a Material for MkDocs , \u6211\u4e5f\u60f3\u6574\u4e00\u4e2a\uff0c\u6240\u4ee5\u6765\u5b66\u4e60\u4e00\u4e0b\u3002</p> <p>\u5176\u5b9e\u5f88\u591a\u5185\u5bb9\u53ef\u80fd\u4f1a\u662f\u6211\u590d\u5236\u5176\u4ed6\u5927\u4f6c\u7684\u535a\u5ba2\u3002</p> <p>\u6211\u4e4b\u524d\u5f04\u7684\u535a\u5ba2\u5f88\u4e71\uff0c\u4e5f\u6ca1\u66f4\u65b0\u591a\u4e45\uff0c\u5c31\u6ca1\u6709\u518d\u5f04\u4e86\u3002\u73b0\u5728\u60f3\u91cd\u65b0\u6574\u4e00\u4e2a\u3002</p> <p>\u73b0\u5728\u662f\u5728windows\u4e0a\u914d\u7f6e\u3002</p> <p>\u9996\u5148\u9700\u8981\u5b89\u88c5pip\uff0c\u5728\u8fd9\u4e4b\u524d\u8981\u5148\u5b89\u88c5python\uff0c\u4e0b\u8f7d\u94fe\u63a5\u3002</p> <p>\u597d\u5427\u4e0b\u8f7d\u5b89\u88c5\u7a0b\u5e8f\u4e4b\u540e\u4f1a\u81ea\u52a8\u5b89\u88c5\u597dpip\u3002</p> <p>\u8fd9\u91cc\u672c\u6765\u662f\u5e94\u8be5\u6709\u4e00\u5f20\u56fe\u7247\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u63d2\u5165\u56fe\u7247\u597d\u9ebb\u70e6\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565\u4e00\u76f4\u4e0d\u80fd\u663e\u793a\u3002\u3002\u3002</p> <p>\u5509\u5509\uff0c\u535a\u5ba2\u4e0d\u52a0\u56fe\u7247\u4e5f\u597d\uff0c\u65b9\u4fbf\u5bfc\u5165\uff0c\u4e5f\u7701\u7a7a\u95f4\u3002</p> <p>\u6211\u76f4\u63a5\u4e0b\u8f7d\u4e86\u6700\u65b0\u7248\u7684\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u5176\u4ed6\u7248\u672c\uff0c\u4f46\u662f\u4e0d\u8981\u592a\u4f4e\u4e86\u3002</p>"},{"location":"misc/MkDocs/#_1","title":"\u5b89\u88c5","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>\u5728 cmd \u6216 powershell \u8f93\u5165\u4ee5\u4e0a\u5185\u5bb9\u3002</p> <p>\u6211\u62a5error\u4e86</p> <pre><code> error: Microsoft Visual C++ 14.0 or greater is required. Get it with \"Microsoft C++ Build Tools\": https://visualstudio.microsoft.com/visual-cpp-build-tools/\n      [end of output]\n\n  note: This error originates from a subprocess, and is likely not a problem with pip.\n  ERROR: Failed building wheel for regex\n  Building wheel for MarkupSafe (pyproject.toml) ... done\n  Created wheel for MarkupSafe: filename=MarkupSafe-3.0.2-py3-none-any.whl size=9325 sha256=c4cb3dbadfedcb388ee37c84f33b807769309218ed97e3e46efc94903212e884\n  Stored in directory: c:\\users\\ilyha\\appdata\\local\\pip\\cache\\wheels\\31\\d7\\9c\\91ea0a7f1bd99970c6602ae982d137132c904433343f48095b\n  Building wheel for pyyaml (pyproject.toml) ... done\n  Created wheel for pyyaml: filename=PyYAML-6.0.2-cp314-cp314-win_amd64.whl size=45437 sha256=42903cee0a60f3f89009d1c5cb7a7351f4c6e357df99414dffa2f70b581cd9c8\n  Stored in directory: c:\\users\\ilyha\\appdata\\local\\pip\\cache\\wheels\\16\\d3\\3b\\1f603c475e2c00f8749b9c112c874a87093b6fc1ef4a11ce07\nSuccessfully built MarkupSafe pyyaml\nFailed to build regex\nERROR: ERROR: Failed to build installable wheels for some pyproject.toml based projects (regex)\n</code></pre> <p>\u7f3a\u5c11visual c++\u3002\u597d\u50cf\u662f\u6211\u81ea\u5df1\u5220\u7684\uff0c\u6211\u770b\u7535\u8111\u4e0a\u81ea\u5e26\u7684\u672c\u6765\u6709visual c++\uff0c\u6211\u4e0d\u559c\u6b22\u5c31\u5220\u4e86\u3002</p> <p>\u6211\u73b0\u5728\u4e0b\u8f7d\u4e00\u4e0b\u7136\u540e\u770b\u770b\u91cd\u65b0\u5b89\u88c5\u3002</p> <p>Microsoft C++ \u751f\u6210\u5de5\u5177 - Visual Studio</p> <p>\u597d\u50cf\u65e0\u6cd5\u4e0b\u8f7d\u3002\u3002\u3002</p> <p>\u6211\u7528\u624b\u673a\u4e0a\u7684edge\u4e5f\u4e0b\u8f7d\u4e0d\u4e86\uff0c\u4f46\u662f\u81ea\u5e26\u7684\u90a3\u4e2a\u6d4f\u89c8\u5668\u4e0b\u8f7d\u6210\u529f\u4e86\u3002</p> <p>\u662f\u4e00\u4e2avisual studio installer\uff0c\u800c\u4e14\u4e0b\u8f7d\u8fdb\u5ea6\u4e00\u76f4\u4e0d\u52a8\u3002\u3002\u3002\u8981\u4e0d\u76f4\u63a5\u4e0b\u8f7d\u4e00\u4e2avisual studio\u5427\u3002</p> <p>Visual C++ Build Tools 2015</p> <p>\u670d\u4e86\uff0c\u4e00\u76f4\u8bf4\u4e0b\u8f7d\u5931\u8d25\u3002\u3002\u3002</p> <p>\u91cd\u542f\u4e00\u4e0b\u8bd5\u8bd5\u3002</p> <p>\u7136\u540e\u6211\u53c8\u53bb\u4e86\u7b2c\u4e00\u4e2a\uff0c\u4e0b\u8f7d\u6210\u529f\u4e86\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u662f\u4e0b\u8f7dVisual Studio 2022\u7684\uff0c\u6211\u9009\u4e8610GB\u7684\u4e1c\u897f\u4e0b\u8f7d\uff0c\u597d\u50cf\u4e0d\u7528\u4e0b\u8fd9\u4e48\u591a\u7684\u3002\u53ea\u7528\u9009\u90a3\u4e2a2015xxx\u7684\u5c31\u884c\u4e86\uff0c\u6211\u9009\u4e86C++\u684c\u9762\u5f00\u53d1\u5de5\u51777GB\uff0c2015 \u5f00\u53d1\u5de5\u51774GB\uff0c\u5e94\u8be5\u53ea\u4e0b\u90a3\u4e2a\u5c31\u884c\u7684\u3002</p> <p>ok\uff0c\u5b89\u88c5\u5b8c\u4e4b\u540e\uff0c\u8fd0\u884c\u521a\u624d\u7684pip xxxx\uff0c\u6ca1\u6709<code>error</code>\u4e86\u3002</p> <p>\u4e3b\u8981\u662f\u6211\u628a\u7535\u8111\u4e0a\u90a3\u4e2aVisual C++\u7ed9\u5220\u4e86\uff0c\u4f60\u4eec\u5982\u679c\u6ca1\u5220\uff0c\u5e94\u8be5\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6\u3002</p> <p>\u611f\u89c9\u6bd4Ubuntu\u7684\u64cd\u4f5c\u8f7b\u677e\u5f88\u591a\uff0cUbuntu\u7528\u8fd9\u4e2apip\u7cfb\u7edf\u62a5\u8b66\u544a\uff0c\u4e0d\u8ba9\u7528\uff0c\u5f97\u5f04\u865a\u62df\u73af\u5883\u3002\u914d\u7f6eDocker\u4e5f\u975e\u5e38\u9ebb\u70e6\uff0c\u81f3\u5c11\u6211\u662f\u6ca1\u5f04\u6210\u529f\u7684\u3002</p>"},{"location":"misc/MkDocs/#_2","title":"\u65b0\u5efa\u7f51\u7ad9","text":"<p>\u5728\u5b8c\u6210Material for MkDocs\u7684\u5b89\u88c5\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>mkdocs</code>\u76f8\u5173\u547d\u4ee4\u6765\u542f\u52a8\u6587\u6863\u3002\u8f6c\u5230\u8981\u653e\u7f6e\u9879\u76ee\u7684\u76ee\u5f55\uff0c\u7136\u540e\u8f93\u5165\uff1a</p> <pre><code>mkdocs new .\n</code></pre> <p>\u4ee5\u4e0a\u64cd\u4f5c\u4f1a\u65b0\u5efa\u4ee5\u4e0b\u7ed3\u6784\u7684\u6587\u4ef6\uff1a</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"misc/MkDocs/#_3","title":"\u914d\u7f6e","text":""},{"location":"misc/MkDocs/#_4","title":"\u6700\u5c0f\u914d\u7f6e","text":"<p>\u53ea\u9700\u8981\u7b80\u5355\u7684\u6dfb\u52a0\u4ee5\u4e0b\u51e0\u884c\u5185\u5bb9\u5230<code>mkdocs.yml</code>\u5373\u53ef\u542f\u7528\u4e3b\u9898\u3002\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u56e0\u6b64\u914d\u7f6e\u53ef\u80fd\u4f1a\u7565\u6709\u4e0d\u540c\uff1a</p> <pre><code>theme:\n  name: material\n</code></pre> <p>\u5982\u679c\u662f\u4eceGitHub\u514b\u9686\u7684MkDocs from GitHub\uff0c\u90a3\u4e48\u5e94\u5f53\u5217\u51fa\u6240\u6709\u4e3b\u9898\u7684\u9ed8\u8ba4\u9879\uff0c\u56e0\u4e3a<code>mkdocs_theme.yml</code>\u4e0d\u4f1a\u4f5c\u4e3a<code>\u5b98\u65b9\u7684\u63cf\u8ff0\u6587\u4ef6</code>\u88ab\u81ea\u52a8\u8f7d\u5165\u3002</p>"},{"location":"misc/MkDocs/#_5","title":"\u9884\u89c8","text":"<p>MkDocs\u5305\u542b\u4e00\u4e2a\u8bd5\u8bd5\u9884\u89c8\u7684\u670d\u52a1\uff0c\u6240\u6709\u53ef\u4ee5\u5728\u64b0\u5199\u6587\u6863\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u5b9e\u65f6\u9884\u89c8\u3002\u5f53\u6587\u6863\u4fee\u6539\u4fdd\u5b58\u540e\uff0c\u8fd9\u4e2a\u670d\u52a1\u4f1a\u81ea\u52a8\u91cd\u5efa\u6574\u4e2a\u7f51\u7ad9\u7684\u6587\u6863\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\uff1a</p> <pre><code>mkdocs serve\n</code></pre> <p>\u4f1a\u8f93\u51fa</p> <pre><code>PS C:\\blog&gt; mkdocs serve\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 1.69 seconds\nINFO    -  [02:08:25] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [02:08:25] Serving on http://127.0.0.1:8000/\nINFO    -  [02:08:28] Browser connected: http://127.0.0.1:8000/\nINFO    -  Shutting down...\n</code></pre> <p>\u6309\u4f4fctrl\u7136\u540e\u70b9\u51fb\u90a3\u4e2a\u94fe\u63a5\uff0c\u4f1a\u5728\u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u53ef\u4ee5\u9884\u89c8\u7f51\u7ad9\u3002</p>"},{"location":"misc/MkDocs/#_6","title":"\u751f\u6210\u7f51\u7ad9","text":"<p>\u5f53\u6587\u6863\u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5c06\u6240\u6709\u7684Markdown\u6587\u4ef6\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7f51\u7ad9\uff1a</p> <pre><code>mkdocs build\n</code></pre> <p>\u8be5\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u5c31\u662f\u9879\u76ee\u6587\u6863/\u7f51\u7ad9\u3002\u56e0\u4e3a\u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u64cd\u4f5c\u6570\u636e\u5e93\u6216\u8005\u670d\u52a1\u5668\u3002\u751f\u6210\u7684\u7f51\u7ad9\u53ef\u4ee5\u6258\u7ba1\u5728GitHub Pages\u3001GitLab Pages\u3001CDN\u7f51\u7edc\u6216\u8005\u5176\u5b83\u7684web\u670d\u52a1\u5668\u4e0a\u3002</p> <p>\u8fd9\u4e5f\u592a\u4e0d\u9519\u4e86\u5427\uff0c\u914d\u7f6e\u5f88\u7b80\u5355\u3002</p>"},{"location":"misc/MkDocs/#_7","title":"\u53d1\u5e03\u7f51\u7ad9","text":"<p>\u5c06\u7f51\u7ad9\u6258\u7ba1\u5728<code>git</code>\u5e93\u4e2d\u7684\u6700\u5927\u597d\u5904\u662f\u80fd\u591f\u5728\u63a8\u9001\u65b0\u66f4\u6539\u65f6\u81ea\u52a8\u90e8\u7f72\u5b83\u3002MkDocs\u4f7f\u5f97\u8fd9\u4e00\u64cd\u4f5c\u66f4\u52a0\u7b80\u5355\u3002</p>"},{"location":"misc/MkDocs/#github-pages","title":"GitHub Pages","text":"<p>\u5982\u679c\u5df2\u7ecf\u5728GitHub\u4e0a\u6258\u7ba1\u4ee3\u7801\uff0c\u90a3\u4e48\u4f7f\u7528GitHub Pages\u6765\u53d1\u5e03\u7f51\u7ad9\u518d\u65b9\u4fbf\u4e0d\u8fc7\u4e86\u3002</p>"},{"location":"misc/MkDocs/#github-actions","title":"\u4f7f\u7528GitHub Actions","text":"<p>\u4f7f\u7528GitHub Actions\u53ef\u4ee5\u81ea\u52a8\u90e8\u7f72\u7f51\u7ad9\u3002\u5728\u5e93\u7684\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aGitHub Actions workflow\uff0c\u6bd4\u5982\uff1a<code>.github/workflows/ci.yml</code>\uff0c\u5e76\u7c98\u8d34\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <p>\u521b\u5efa\u8fd9\u4e2a\u8def\u5f84\u5e76\u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9</p> <pre><code># .github/workflows/ci.yml\nname: ci \non:\n  push:\n    branches: \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v3\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - name: Install dependencies\n        run: |\n          pip install mkdocs-material\n          pip install mkdocs-glightbox\n          pip install mkdocs-git-revision-date-localized-plugin\n      - name: Deploy\n        run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"misc/MkDocs/#_8","title":"\u914d\u7f6e\u81ea\u52a8\u90e8\u7f72","text":""},{"location":"misc/MkDocs/#github-pages_1","title":"\u542f\u7528 GitHub Pages","text":"<ul> <li>\u8fdb\u5165\u4ed3\u5e93\u8bbe\u7f6e -&gt; Pages - Source \u9009\u62e9 <code>gh-pages</code> \u5206\u652f - \u4fdd\u5b58\u8bbe\u7f6e</li> </ul>"},{"location":"misc/MkDocs/#_9","title":"\u914d\u7f6e\u90e8\u7f72\u5206\u652f","text":"<pre><code># mkdocs.yml\nremote_branch: gh-pages    # GitHub Pages \u5206\u652f\nremote_name: origin       # \u8fdc\u7a0b\u4ed3\u5e93\u540d\n</code></pre>"},{"location":"misc/MkDocs/#_10","title":"\u624b\u52a8\u90e8\u7f72\u547d\u4ee4","text":"<pre><code># \u90e8\u7f72\u5230 GitHub Pages\nmkdocs gh-deploy\n\n# \u5f3a\u5236\u90e8\u7f72\nmkdocs gh-deploy --force\n\n# \u6307\u5b9a\u5206\u652f\nmkdocs gh-deploy --remote-branch custom-branch\n</code></pre> <p>\u5168\u90e8\u7684\u5185\u5bb9\u57fa\u672c\u90fd\u662f\u770b\u8fd9\u4e2a\u548c\u8fd9\u4e2a\uff0c\u786e\u5b9e\u633a\u4e0d\u9519\u7684\u3002</p> <p>\u611f\u8c22\u5927\u4f6c\u4eec\u3002</p> <p>\u7136\u540e\u73b0\u5728\u6211\u4eec\u7684\u535a\u5ba2\u5c31\u53ef\u4ee5\u5728 username.github.io \u663e\u793a\u4e86(\u5982\u679c\u4f60\u7684\u4ed3\u5e93\u540d\u662fusername.github.io)\u3002</p> <p>\u6211\u7684\u662f fwdzh.github.io </p>"},{"location":"misc/customdomain/","title":"\u901a\u8fc7\u81ea\u5b9a\u4e49\u57df\u540d\u8bbf\u95eegithub pages","text":""},{"location":"misc/customdomain/#github-pages","title":"github pages\u81ea\u5b9a\u4e49\u57df\u540d","text":"<p>\u4e4b\u524d\u77e5\u9053\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u57df\u540d\u8df3\u8f6c\u5230 <code>github.io</code> \u6765\u7740\uff0c\u6700\u8fd1\u60f3\u7740\u6ce8\u518c\u4e2a\u57df\u540d\u770b\u80fd\u4e0d\u80fd\u6574\u70b9\u6709\u610f\u601d\u7684\u4e1c\u897f\u3002\u4f46\u662f\u76ee\u524d\u8fd8\u6ca1\u6709\u670d\u52a1\u5668\uff0c\u7136\u540e\u5c31\u60f3\u80fd\u4e0d\u80fd\u663e\u793a\u70b9\u5565\u4e1c\u897f\u3002  </p> <p>\u7136\u540e\u53d1\u73b0\u663e\u793agithub pages\u7684\u4e1c\u897f\u5c31\u975e\u5e38\u7684\u65b9\u4fbf\u554a\uff0c\u53ea\u7528\u5728\u9879\u76ee\u7684settings\u754c\u9762\uff0c\u6dfb\u52a0custom domain\uff0c\u5f53\u7136\u9700\u8981\u5148\u5728\u57df\u540d\u7ba1\u7406\u91cc\u6dfb\u52a0\u90a3\u4e2a\u9879\u76ee\u7684\u9875\u9762\u7684\u89e3\u6790\u3002\u5c31\u662f\u535a\u5ba2\u7684\u9875\u9762\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u57df\u540d\u8bbf\u95eegithub pages\u4e86\u3002\u975e\u5e38\u7684\u65b9\u4fbf\u554a\u3002</p> <p>\u6ce8\u518c\u7684\u8fd9\u4e2a\u57df\u540d\u4e5f\u662f\u521a\u6ce8\u518c\u5c31\u80fd\u7528\u4e0a\u4e86\u3002</p> <p>\u770b\u4ee5\u540e\u80fd\u4e0d\u80fd\u518d\u6574\u70b9\u522b\u7684\u5427\u3002\u4e3a\u4e86\u8fd9\u4e2a\uff0c\u4e5f\u662f\u591a\u5199\u70b9\u535a\u5ba2\u5427\u3002\u3002\u3002\u4e0d\u7136\u4e0d\u662f\u767d\u6574\u4e86\u3002\u7136\u540e\u4e5f\u662f\u53ef\u4ee5\u8bd5\u7740\u591a\u6574\u70b9\u56fe\u7247\uff0c\u627e\u4e2a\u7f51\u7ad9\u4e0a\u4f20\u7528url\uff0c\u56e0\u4e3a\u4e0a\u4f20\u603b\u662f\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002</p> <p>\u6700\u6700\u4fbf\u5b9c\u7684\u57df\u540d\u90fd\u662f179\u6216199\uff0c10\u5e74\u3002\u3002\u3002\u7eed\u8d39\u5f88\u8d35\u3002\u4e0d\u8fc7\u76ee\u524d\u4e3b\u8981\u662f\u4e3a\u4e86\u63a2\u7d22\u4e00\u4e0b\uff0c\u73a9\u4e00\u4e0b\uff0c\u770b\u80fd\u505a\u70b9\u4ec0\u4e48\u6709\u610f\u601d\u7684\u4e1c\u897f\u300210\u5e74\u65f6\u95f4\u4e5f\u662f\u5f88\u4e45\u4e86\u3002</p>"},{"location":"misc/deleteubuntu/","title":"windows\u53cc\u7cfb\u7edf\u5220\u9664ubuntu arch","text":""},{"location":"misc/deleteubuntu/#2025-02-22","title":"2025-02-22","text":""},{"location":"misc/deleteubuntu/#windowsubuntu-arch","title":"windows\u53cc\u7cfb\u7edf\u5220\u9664ubuntu arch","text":"<p>\u9996\u5148\u5728\u78c1\u76d8\u7ba1\u7406\u91cc\u5220\u6389ubuntu\u5728\u7684\u5206\u533a</p> <p>\u7136\u540e\u518d\u628agrub\u5f15\u5bfc\u5220\u6389</p> <p>\u9996\u5148\u6253\u5f00cmd\u6216powershell\uff0c\u8f93\u5165diskpart</p> <p>\u518dlist volume\uff0c\u627e\u5230EFI\u5206\u533a\uff0c\u5927\u5c0f\u53ef\u80fd\u662f300M\u5de6\u53f3\uff0c\u901a\u5e38\u662fFAT32\u683c\u5f0f</p> <p>select volume 1\uff0c\u770bEFI\u5206\u533a\u5177\u4f53\u7684\u7f16\u53f7\uff0c\u7136\u540e\u9009\u62e9\uff0c\u7136\u540e\u7ed9\u4ed6\u5206\u914d\u76d8\u7b26</p> <p>assign letter=Z</p> <p>\u7136\u540e\u8fd9\u4e2a\u5206\u533a\u88ab\u6211\u4eec\u6302\u8f7d\u5230\u4e86\u8fd9\u4e2a\u76d8\uff0c\u6211\u4eec\u53ef\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00VS Code</p> <p>\u7136\u540e\u76f4\u63a5\u7528VS Code\u6253\u5f00\u8fd9\u4e2a\u76d8\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u6587\u4ef6\u76ee\u5f55\uff0c\u7136\u540e\u628aEFI/\u4e0b\u7684ubuntu\u6216arch\u6587\u4ef6\u5939\u5220\u9664</p> <p>\u7136\u540e\u518dremove letter=Z\uff0c\u518d\u91cd\u542f\u7535\u8111\uff0c\u5e94\u8be5\u5c31\u770b\u4e0d\u5230grub\u5f15\u5bfc\u4e86</p> <p>\u6211\u5148\u8bd5\u8bd5</p> <pre><code>diskpart\nlist volume\nselect volume 1 #\u770b\u5177\u4f53\u54ea\u4e2a\u662fEFI\u5206\u533a\nassign letter=Z #\u7ed9EFI\u5206\u533a\u5206\u914d\u76d8\u7b26\n\u7136\u540e\u53bb\u5220\u9664EFI/\u4e0b\u7684ubuntu\u6216arch\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ba1\u7406\u5458VS Code\u6253\u5f00\u8fd9\u4e2a\u76d8\nremove letter=Z #\u5220\u9664\u76d8\u7b26\nexit\n</code></pre>"},{"location":"misc/git_/","title":"github\u76f8\u5173","text":""},{"location":"misc/git_/#_1","title":"\u6bcf\u4e2a\u9879\u76ee\u90fd\u80fd\u81ea\u5b9a\u4e49\u57df\u540d","text":"<p>2025-02-26</p> <p>\u8ba9\u4e00\u4e2a\u540c\u5b66\u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\u586b\u52a0\u6211\u7684\u5b50\u57df\u540d\u3002\u3002\u3002\u7136\u540e\u6211\u8ddf\u4ed6\u8bf4\u53ea\u6709 username.github.io\u80fd\u89e3\u6790\u5230\u5b50\u57df\u540d\uff0c\u5176\u4ed6\u7684\u9879\u76ee\u53ea\u80fd\u662f\u540e\u9762\u659c\u6760\u52a0\u9879\u76ee\u540d\u3002\u7ed3\u679c\u4ed6\u7814\u7a76\u51fa\u4e86\u53ef\u4ee5\u6bcf\u4e2a\u9879\u76ee\u90fd\u81ea\u5b9a\u4e49\u3002\u3002\u3002</p> <p>\u5176\u5b9e\u662f\u57df\u540d\u89e3\u6790\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u90fd\u586b username.github.io , \u4e0d\u8981\u52a0\u5176\u4ed6\u7684\u4e1c\u897f\u3002\u8fd9\u6837\u6bcf\u4e2a\u9879\u76ee\u90fd\u80fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u57df\u540d\u3002\u3002\u3002</p> <p>\u679c\u7136\u591a\u4ea4\u6d41\u5c31\u662f\u4f1a\u6709\u4e9b\u5e2e\u52a9\u3002\u90a3 username.github.io \u4e5f\u6ca1\u4ec0\u4e48\u7279\u6b8a\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u8bbe\u7f6e custom domain \u7684\u65f6\u5019\uff0c\u7a0d\u5fae\u6709\u70b9\u7528\u3002</p>"},{"location":"misc/git_/#githubio","title":"github.io","text":"<p>2025-02-19</p> <p>\u4eca\u5929\u7b97\u662f\u53d1\u73b0 <code>username.github.io</code> \u6709\u4ec0\u4e48\u4e0d\u540c\u4e4b\u5904\u4e86\u3002\u3002\u3002</p> <p>\u5efa\u4e86\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u60f3\u7740\u5f04\u4e2a\u5b50\u57df\u540d\u89e3\u6790\u90a3\u4e2a\u9879\u76ee\u7684pages\uff0c\u4f46\u662f\u53d1\u73b0\u4e0d\u53ef\u4ee5\u3002</p> <p>\u56e0\u4e3a\u666e\u901a\u9879\u76ee\u7684pages\u7684\u8def\u5f84\u5b83\u662fusername.github.io/repo , \u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u57df\u540d\uff0c\u6240\u4ee5\u4e0d\u80fd\u89e3\u6790\u3002\u3002\u3002</p> <p>\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u6211\u8fd9\u4e2a\u57df\u540d\u7ed1\u5b9a\u4e86 <code>github.io</code> \uff0c\u6240\u4ee5\u5176\u4ed6\u9879\u76ee\u4f1a\u89e3\u6790\u5230 custom domain/repo \uff0c\u4e5f\u7b97\u8fd8\u884c\u5427\u3002</p> <p>\u611f\u89c9\u5fc5\u987b\u5f97\u518d\u6ce8\u518c\u4e00\u4e2agithub\u8d26\u53f7\u4e86\uff0c\u4e0d\u7136\u6211\u7684\u4e3b\u57df\u540d\u4e00\u76f4\u6ca1\u6709\u53ef\u4ee5\u89e3\u6790\u7684\u4e1c\u897f\uff0c\u611f\u89c9\u8fd9\u6837\u4e0d\u592a\u597d\u3002</p>"},{"location":"misc/git_/#git443","title":"git\u8fde\u63a5443\u7aef\u53e3\u5931\u8d25","text":"<p>\u6211\u8bb0\u5f97\u4e4b\u524d\u6211\u662f22\u7aef\u53e3\u5931\u8d25\uff0c\u7136\u540e\u53bb\u6d4f\u89c8\u5668\u548c\u95eechat\uff0c\u6539\u4e86host\u6587\u4ef6\uff0c\u597d\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002</p> <p>\u4eca\u5929\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u5c31443\u7aef\u53e3\u8fde\u63a5\u5931\u8d25\uff0c\u67e5\u4e86\u4e00\u4e0b\u52a0\u4e86\u4e2a\u4ee3\u7406\u5c31\u597d\u4e86\u3002</p> <pre><code>git config --global http.proxy http://127.0.0.1:33210\ngit config --global https.proxy https://127.0.0.1:33210\n</code></pre> <p>\u628aip\u548c\u7aef\u53e3\u6362\u6210\u81ea\u5df1\u7684\uff0c\u8f93\u8fd9\u4e2a\u547d\u4ee4\uff0c\u7ed9git\u8bbe\u7f6e\u4ee3\u7406\uff0c\u7136\u540e\u5c31\u597d\u4e86\u3002</p> <p>\u4f46\u662f\u5f88\u5947\u602a\u7684\u662f\uff0c\u6211\u4e4b\u524d\u5e94\u8be5\u6ca1\u8bbe\u8fc7\u4ee3\u7406\uff0c\u4e3a\u5565\u5176\u4ed6\u6587\u4ef6\u5939\u4e00\u76f4git push\u90fd\u6ca1\u6709\u95ee\u9898\u5462\u3002\u3002\u3002\u800c\u4e14\u4e0d\u5f00\u52a0\u901f\u5668\u8c8c\u4f3c\u4e5f\u80fdpush\u3002</p>"},{"location":"misc/gitbasic/","title":"github\u57fa\u7840\u64cd\u4f5c\u53cagithub pages","text":"<p>2025-02-27</p> <p>\u6307\u5bfc\u8001\u5e08: ChatGPT</p>"},{"location":"misc/gitbasic/#github","title":"github\u57fa\u672c\u64cd\u4f5c","text":"<p>\u5176\u5b9e\u6211\u4e5f\u4e0d\u548b\u4f1a\u3002\u3002\u3002\u7ecf\u5e38\u5927\u90e8\u5206\u90fd\u662f\u95ee chat \u548c deepseek\u3002\u76ee\u524d\u57fa\u672c\u4e0a\u53ea\u7528 git add \uff0ccommit , push , branch \u8fd9\u4e9b\u3002\u3002\u3002\u8fd9\u662f\u5927\u6982\u4f1a\u63d0\u4ea4\u4ee3\u7801\u3002\u5176\u4ed6\u7684\u5565\u90fd\u4e0d\u4f1a\uff0c\u8be5\u5b66\u4e00\u4e0b\u603b\u7ed3\u4e00\u4e0b\u4e86\u3002</p>"},{"location":"misc/gitbasic/#_1","title":"\u521b\u5efa\u4ed3\u5e93","text":"<p>\u9996\u5148\u54b1\u4eec\u521b\u5efa\u4e00\u4e2a\u4ed3\u5e93\uff0c\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6dfb\u52a0 <code>README file</code> \uff0c\u9009\u4e86\u8fd9\u4e2a\u5e94\u8be5\u5c31\u4f1a\u81ea\u52a8\u521d\u59cb\u5316\u4ed3\u5e93\uff0c\u5426\u5219\u4ed3\u5e93\u662f\u7a7a\u7684\u3002</p> <p>\u6211\u8bf4\u600e\u4e48\u6bcf\u6b21\u60c5\u51b5\u4e0d\u4e00\u6837\u5462\u3002\u90a3\u54b1\u4eec\u8fd9\u91cc\u5148\u4e0d\u8981\u9009\u3002\u56e0\u4e3a\u4ee5\u540e\u9009\u4e0d\u9009\uff0c\u64cd\u4f5c\u90fd\u5dee\u4e0d\u591a\u3002</p> <p>\u5176\u4ed6\u7684\u8bbe\u7f6e\u90fd\u5148\u4e0d\u7528\u6539\uff0c\u53d6\u597d\u9879\u76ee\u540d\u5b57\u5c31\u884c\u3002</p> <p>\u6ca1\u6709\u9009\u6dfb\u52a0 <code>README.md</code> \u7684\u8bdd\uff0c\u4ed3\u5e93\u4f1a\u662f\u7a7a\u7684\u3002</p> <p>\u4f1a\u663e\u793a\u8fd9\u51e0\u884c\u4ee3\u7801\uff0c\u6bcf\u4e2a\u4eba\u7684\u4e0d\u4e00\u6837\uff0c\u7b2c\u516d\u884c\u90a3\u91cc\u7684\u9879\u76ee\u5730\u5740\u4e0d\u4e00\u6837\u3002</p> <pre><code>echo \"# www\" &gt;&gt; README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/fwdzh/www.git\ngit push -u origin main\n</code></pre> <p>\u9009ssh\u8fde\u63a5\u7684\u8bdd\u4f1a\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u8fd9\u91cc\u54b1\u4eec\u5148\u7528https\u8fde\u63a5\u3002</p> <p>\u8fd9\u4e2a\u662f\u8ba9\u54b1\u4eec\u521b\u5efa\u672c\u5730\u76ee\u5f55\u5e76\u548c\u8fdc\u7a0b\u4ed3\u5e93\u8fde\u63a5\u63a8\u9001\u6587\u4ef6\u7684\u3002</p> <p>\u8fd9\u4e2a\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u70b9\u5f00\u672c\u5730\u6587\u4ef6\u5939\uff0c\u7136\u540e\u53f3\u952e\u70b9\u51fb\u7a7a\u767d\u7684\u5730\u65b9\uff0c\u9009\u62e9 <code>git bash here</code>\uff0c\u5c31\u4f1a\u5728\u8fd9\u91cc\u542f\u52a8git bash\uff0c\u53ef\u4ee5\u5728\u91cc\u9762\u8f93\u5165\u547d\u4ee4\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528vscode \u6253\u5f00\u6587\u4ef6\u5939\uff0c\u5728vscode \u7684\u7ec8\u7aef\u4e2d\u8f93\u5165\u547d\u4ee4\u3002</p> <p>\u5728vscode\u4e2d\u53ef\u4ee5\u4f7f\u7528 ctrl+` \u5feb\u6377\u952e\u6765\u6253\u5f00\u7ec8\u7aef\uff0c\u51e0\u884c\u547d\u4ee4\u5168\u590d\u5236\u8fc7\u53bb\u5c31\u884c\u3002</p> <p>\u4e0d\u8fc7\u7b2c\u4e00\u6b21\u5e94\u8be5\u9700\u8981\u54b1\u4eec\u914d\u7f6e\u7528\u6237\u4fe1\u606f\u3002</p> <pre><code>Author identity unknown\n\n*** Please tell me who you are.\n\nRun\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: unable to auto-detect email address (got 'ilyha@skadi.(none)')\n</code></pre> <p>\u6211\u521a\u624d\u628a\u547d\u4ee4\u5168\u7c98\u8fc7\u53bb\u51fa\u8fd9\u4e2a\u4e86\u3002\u8fd9\u662f\u8ba9\u54b1\u4eec\u5148\u914d\u7f6e\u7528\u6237\u4fe1\u606f\u3002</p> <pre><code>git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n</code></pre> <p>\u628a\u5bf9\u5e94\u7684\u5f15\u53f7\u91cc\u7684\u5185\u5bb9\uff0c\u6362\u6210\u4f60\u7684github\u7ed1\u5b9a\u7684\u90ae\u7bb1\uff0c\u548cgithub\u7684\u7528\u6237\u540d\u3002</p> <pre><code>git config --global user.email \"2895264580@qq.com\"\ngit config --global user.name \"fwdzh\"\n</code></pre> <p>\u8fd9\u662f\u6211\u7684\uff0c\u4f60\u4eec\u6539\u6210\u81ea\u5df1\u7684\u3002</p> <p>\u7c98\u5230\u7ec8\u7aef\u53bb\u3002\u8fd9\u91cc\u52a0 --global\u662f\u8bbe\u7f6e\u5168\u5c40\u7684\uff0c\u4e0d\u52a0\u7684\u8bdd\u53ea\u8bbe\u7f6e\u5f53\u524d\u76ee\u5f55\u7684\u4fe1\u606f\u3002</p> <p>\u5982\u679c\u4f60\u63d0\u793a443\u7aef\u53e3\u621622\u7aef\u53e3\u8fde\u4e0d\u4e0a\uff0c\u53ef\u4ee5\u53bb\u641c\u7d22\u89e3\u51b3\u65b9\u6cd5\u3002\u6211\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2\u6709\u7b80\u5355\u8bb0\u4e86\u4e00\u4e0b443\u7aef\u53e3\u8fde\u4e0d\u4e0a\u3002</p>"},{"location":"misc/gitbasic/#1-echo-www-readmemd","title":"1. <code>echo \"# www\" &gt;&gt; README.md</code>","text":"<pre><code>echo \"# www\" &gt;&gt; README.md\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a <code>README.md</code> \u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u5199\u5165 <code># www</code>\u3002</li> <li>\u5982\u679c <code>README.md</code> \u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u5728\u672b\u5c3e\u8ffd\u52a0 <code># www</code>\u3002</li> <li>\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u9879\u76ee\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5728 GitHub \u4e0a\u4f1a\u81ea\u52a8\u663e\u793a\u4e3a\u9879\u76ee\u4e3b\u9875\u7684\u4ecb\u7ecd\u3002</li> </ul>"},{"location":"misc/gitbasic/#2-git-init","title":"2. <code>git init</code>","text":"<pre><code>git init\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5728\u5f53\u524d\u76ee\u5f55\u4e0b \u521d\u59cb\u5316\u4e00\u4e2a Git \u4ed3\u5e93\uff0c\u751f\u6210 <code>.git/</code> \u9690\u85cf\u76ee\u5f55\u3002</li> <li>\u4e4b\u540e\u7684 Git \u547d\u4ee4\uff08\u5982 <code>add</code>\u3001<code>commit</code>\u3001<code>push</code> \u7b49\uff09\u90fd\u4f1a\u57fa\u4e8e\u8fd9\u4e2a Git \u4ed3\u5e93\u8fdb\u884c\u64cd\u4f5c\u3002</li> </ul> <p>\ud83d\udca1 \u6267\u884c\u540e\uff0c\u5f53\u524d\u76ee\u5f55\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a Git \u4ed3\u5e93\u3002</p>"},{"location":"misc/gitbasic/#3-git-add-readmemd","title":"3. <code>git add README.md</code>","text":"<pre><code>git add README.md\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5c06 <code>README.md</code> \u6587\u4ef6\u52a0\u5165 \u6682\u5b58\u533a\uff08staging area\uff09\uff0c\u51c6\u5907\u63d0\u4ea4\u3002</li> </ul> <p>\ud83d\udca1 \u53ea\u6709\u88ab <code>git add</code> \u7684\u6587\u4ef6\u624d\u4f1a\u88ab <code>commit</code> \u8bb0\u5f55\u3002</p>"},{"location":"misc/gitbasic/#4-git-commit-m-first-commit","title":"4. <code>git commit -m \"first commit\"</code>","text":"<pre><code>git commit -m \"first commit\"\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u63d0\u4ea4\u4ee3\u7801\uff0c\u628a <code>README.md</code> \u4ece\u6682\u5b58\u533a\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\uff08\u672c\u5730 <code>main</code> \u5206\u652f\uff09\u3002</li> <li><code>-m \"first commit\"</code> \u6307\u5b9a\u63d0\u4ea4\u4fe1\u606f\uff0c\u63cf\u8ff0\u8fd9\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u3002</li> </ul> <p>\ud83d\udca1 \u6267\u884c\u540e\uff0c\u4f60\u7684\u4ee3\u7801\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5728\u672c\u5730 Git \u4ed3\u5e93\uff0c\u4f46\u8fd8\u6ca1\u6709\u63a8\u9001\u5230\u8fdc\u7a0b GitHub\u3002</p>"},{"location":"misc/gitbasic/#5-git-branch-m-main","title":"5. <code>git branch -M main</code>","text":"<pre><code>git branch -M main\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5c06\u5f53\u524d\u5206\u652f\u91cd\u547d\u540d\u4e3a <code>main</code>\uff08\u73b0\u4ee3 Git \u9ed8\u8ba4\u4f7f\u7528 <code>main</code> \u4f5c\u4e3a\u4e3b\u5206\u652f\uff0c\u800c\u4e0d\u662f <code>master</code>\uff09\u3002</li> </ul> <p>\ud83d\udca1 \u5982\u679c\u4f60\u521a <code>git init</code>\uff0c\u9ed8\u8ba4\u5206\u652f\u53ef\u80fd\u662f <code>master</code>\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u6539\u6210 <code>main</code>\u3002</p>"},{"location":"misc/gitbasic/#6-git-remote-add-origin-httpsgithubcomfwdzhwwwgit","title":"6. <code>git remote add origin https://github.com/fwdzh/www.git</code>","text":"<pre><code>git remote add origin https://github.com/fwdzh/www.git\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5c06\u8fdc\u7a0b GitHub \u4ed3\u5e93\uff08<code>https://github.com/fwdzh/www.git</code>\uff09\u6dfb\u52a0\u4e3a <code>origin</code> \u8fdc\u7a0b\u5730\u5740\u3002</li> <li>\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528 <code>origin</code> \u4f5c\u4e3a\u522b\u540d\u8fdb\u884c <code>git push</code> / <code>git pull</code>\u3002</li> </ul> <p>\ud83d\udca1 \u6267\u884c\u540e\uff0c\u672c\u5730 Git \u77e5\u9053\u4ee3\u7801\u5e94\u8be5\u63a8\u9001\u5230\u54ea\u4e2a GitHub \u4ed3\u5e93\u3002</p>"},{"location":"misc/gitbasic/#7-git-push-u-origin-main","title":"7. <code>git push -u origin main</code>","text":"<pre><code>git push -u origin main\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u5c06\u672c\u5730 <code>main</code> \u5206\u652f\u7684\u4ee3\u7801\u63a8\u9001\u5230 GitHub \u8fdc\u7a0b\u4ed3\u5e93\u3002</li> <li><code>-u</code> \u9009\u9879\u7684\u4f5c\u7528\uff1a\u8bbe\u7f6e <code>origin/main</code> \u4e3a\u9ed8\u8ba4\u4e0a\u6e38\u5206\u652f\uff0c\u4ee5\u540e <code>git push</code> \u548c <code>git pull</code> \u53ef\u4ee5\u7701\u7565 <code>origin main</code>\uff0c\u76f4\u63a5\u7528 <code>git push</code> / <code>git pull</code>\u3002</li> </ul> <p>\u6267\u884c\u5b8c\u8fd9\u4e9b\u547d\u4ee4\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u672c\u5730\u76ee\u5f55\u5c31\u4f1a\u521d\u59cb\u5316\u4e3a\u4e00\u4e2agit\u4ed3\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528git\u547d\u4ee4\u6765\u62c9\u53d6\u6216\u63a8\u9001\u4ee3\u7801\u3002\u5e76\u4e14\u53ef\u4ee5\u5229\u7528github pages\u65b9\u4fbf\u5730\u90e8\u7f72\u9759\u6001\u7f51\u9875\u3002</p>"},{"location":"misc/gitbasic/#_2","title":"\u63d0\u4ea4\u4fee\u6539","text":"<p>\u8fd0\u884c\u5b8c\u4ee5\u4e0a\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230github\u7684\u4ed3\u5e93\u5df2\u7ecf\u6709\u4e86README.md\u6587\u4ef6\u3002</p> <p>\u4e0a\u9762\u6bcf\u4e2a\u547d\u4ee4\u7684\u89e3\u91ca\u6211\u8ba9chat\u751f\u6210\u7684\uff0c\u4e5f\u65b9\u4fbf\u6211\u7406\u89e3\u3002\u3002\u3002\u539f\u6765 <code>git push -u origin master</code> \u4e5f\u4f1a\u8bbe\u7f6e\u9ed8\u8ba4\u5206\u652f\u3002</p> <p>\u4ee5\u540e\u54b1\u4eec\u6bcf\u6b21\u63d0\u4ea4\u4fee\u6539\uff0c\u53ea\u9700\u8981\u8fd0\u884c\u4e09\u4e2a\u547d\u4ee4\u3002</p> <pre><code>git add .\ngit commit -m \"...\"\ngit push\n</code></pre>"},{"location":"misc/gitbasic/#1git-add","title":"1.<code>git add</code>","text":"<p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li> <p>\u628a \u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u4fee\u6539\uff08\u65b0\u589e\u3001\u4fee\u6539\u3001\u5220\u9664\u7684\u6587\u4ef6\uff09\u52a0\u5165\u6682\u5b58\u533a\uff0c\u51c6\u5907\u63d0\u4ea4\u3002</p> </li> <li> <p>\u5176\u4e2d </p> </li> </ul> <pre><code>.\n</code></pre> <p>\u4ee3\u8868\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\uff0c\u7b49\u4ef7\u4e8e\uff1a</p> <pre><code>git add --all\n</code></pre> <p>\ud83d\udca1 \u793a\u4f8b\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u4fee\u6539\u4e86 <code>main.cpp</code>\uff0c\u65b0\u589e\u4e86 <code>utils.h</code>\uff0c\u5220\u9664\u4e86 <code>temp.txt</code>\uff0c\u6267\u884c <code>git add .</code> \u540e\uff0c\u8fd9\u4e9b\u53d8\u66f4\u90fd\u4f1a\u8fdb\u5165 \u6682\u5b58\u533a\uff0c\u7b49\u5f85\u63d0\u4ea4\u3002</li> </ul>"},{"location":"misc/gitbasic/#2-git-commit-m","title":"2. <code>git commit -m \"...\"</code>","text":"<pre><code>git commit -m \"...\"\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li>\u63d0\u4ea4\u6682\u5b58\u533a\u7684\u4fee\u6539\u5230\u672c\u5730\u4ed3\u5e93\uff0c\u5e76\u8bb0\u5f55\u4e00\u6761\u63d0\u4ea4\u4fe1\u606f\uff08<code>-m \"...\"</code>\uff09\u3002</li> <li>\u8fd9\u76f8\u5f53\u4e8e\u5feb\u7167\uff0c\u4ee5\u540e\u53ef\u4ee5\u67e5\u770b\u6bcf\u6b21\u63d0\u4ea4\u7684\u5386\u53f2\uff0c\u751a\u81f3\u56de\u6eda\u5230\u67d0\u4e2a\u7248\u672c\u3002</li> <li>\u628a\u5f15\u53f7\u91cc\u7684\u5185\u5bb9\u6362\u6210\u4f60\u60f3\u7559\u8a00\u7684\u8bdd\uff0c\u4f46\u662f\u4e0d\u80fd\u4e3a\u7a7a\u3002</li> </ul> <p>\ud83d\udca1 \u793a\u4f8b\uff1a</p> <pre><code>git commit -m \"\u4fee\u590d\u4e86\u767b\u5f55\u754c\u9762\u52a0\u8f7d\u6162\u7684\u95ee\u9898\"\n</code></pre> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u77e5\u9053\u8fd9\u6b21\u63d0\u4ea4\u7684\u4e3b\u8981\u6539\u52a8\u5185\u5bb9\u3002</p>"},{"location":"misc/gitbasic/#3-git-push","title":"3. <code>git push</code>","text":"<pre><code>git push\n</code></pre> <p>\ud83d\udccc \u4f5c\u7528\uff1a</p> <ul> <li> <p>\u628a\u672c\u5730\u4ed3\u5e93\u7684\u4fee\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff08GitHub\uff09\u3002</p> </li> <li> <p>\u7531\u4e8e\u4e4b\u524d </p> </li> </ul> <pre><code>git push -u origin main\n</code></pre> <p>\u7ed1\u5b9a\u4e86\u9ed8\u8ba4\u4e0a\u6e38\u5206\u652f\uff0c\u4ee5\u540e </p> <pre><code>git push\n</code></pre> <p>\u5c31\u7b49\u4ef7\u4e8e\uff1a</p> <pre><code>git push origin main\n</code></pre> <p>\ud83d\udca1 \u793a\u4f8b\uff1a</p> <ul> <li>\u672c\u5730\u4fee\u6539\u7684\u4ee3\u7801\u63d0\u4ea4\u5230 GitHub \u4e0a\uff0c\u56e2\u961f\u6210\u5458\u6216\u5176\u4ed6\u4eba\u5c31\u80fd\u770b\u5230\u66f4\u65b0\u3002</li> </ul>"},{"location":"misc/gitbasic/#_3","title":"\u5b8c\u6574\u6d41\u7a0b","text":"<ol> <li>\u4fee\u6539\u4ee3\u7801\uff0c\u6bd4\u5982\u7f16\u8f91 <code>index.html</code>\u3002</li> <li><code>git add .</code> \u628a\u6539\u52a8\u52a0\u5165\u6682\u5b58\u533a\u3002</li> <li><code>git commit -m \"\u4f18\u5316\u524d\u7aef UI\"</code> \u63d0\u4ea4\u4fee\u6539\u3002</li> <li><code>git push</code> \u63a8\u9001\u5230 GitHub\u3002</li> </ol> <p>\u8fd9\u6837\uff0c\u6bcf\u6b21\u63d0\u4ea4\u90fd\u5f88\u7b80\u5355\u9ad8\u6548 \ud83c\udf89\u3002</p>"},{"location":"misc/gitbasic/#github-pages","title":"github pages","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u725b\u975e\u5e38\u723d\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8ba9\u54b1\u4eec\u65e0\u9700\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u57df\u540d\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\u3002</p> <p>\u5e76\u4e14\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u4f7f\u5f97\u6211\u4eec\u65e0\u9700\u52a0\u901f\u5668\u5373\u53ef\u8bbf\u95ee\u6211\u4eec\u7684\u9875\u9762\u3002</p>"},{"location":"misc/gitbasic/#github-pages_1","title":"\u542f\u7528 GitHub Pages","text":"<p>\u5982\u679c\u4f60\u60f3\u8ba9 GitHub \u6258\u7ba1\u9759\u6001\u7f51\u7ad9\uff0c\u6bd4\u5982\u4e2a\u4eba\u535a\u5ba2\u3001\u6587\u6863\u7ad9\u70b9\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8fdb\u5165\u4f60\u7684\u4ed3\u5e93\uff0c\u70b9\u51fb <code>Settings</code></p> </li> <li> <p>\u5de6\u4fa7\u627e\u5230 <code>Pages</code></p> </li> <li> <p>\u9009\u62e9\u90e8\u7f72\u6765\u6e90\uff08Branch\uff09\uff0c\u4e00\u822c\u9009 <code>main</code> \u5206\u652f</p> </li> <li> <p>\u9009\u62e9\u6839\u76ee\u5f55 <code>/</code></p> </li> <li> <p>GitHub \u4f1a\u81ea\u52a8\u751f\u6210 URL\uff0c\u6bd4\u5982\uff1a</p> </li> </ol> <pre><code>https://\u4f60\u7684\u7528\u6237\u540d.github.io/\u4f60\u7684\u4ed3\u5e93\u540d/\n</code></pre>"},{"location":"misc/gitbasic/#_4","title":"\u4e0a\u4f20\u9759\u6001\u7f51\u7ad9","text":"<p>\u5982\u679c\u4f60\u6709 <code>index.html</code>\uff0c\u76f4\u63a5\u63d0\u4ea4\u5230\u4ed3\u5e93\u6839\u76ee\u5f55\uff1a</p> <pre><code>git add .\ngit commit -m \"\u6dfb\u52a0\u7f51\u7ad9\"\ngit push\n</code></pre> <p>\u7136\u540e\u7b49\u51e0\u5206\u949f\uff0cGitHub Pages \u5c31\u4f1a\u81ea\u52a8\u751f\u6210\u7f51\u7ad9\u3002</p>"},{"location":"misc/gitbasic/#_5","title":"\u81ea\u5b9a\u4e49\u57df\u540d","text":"<p>\u5728settings-&gt;pages \u9875\u9762\uff0c\u627e\u5230 custom domain \u9009\u9879\uff0c\u5728\u8fd9\u91cc\u586b\u5165\u4f60\u7684\u57df\u540d\uff0c\u5373\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u57df\u540d\u8bbf\u95ee\u4f60\u7684github pages\u9875\u9762\u3002\u64cd\u4f5c\u65b9\u5f0f\u5c31\u662f\uff0c\u5148\u5728\u4f60\u7684\u57df\u540d\u90a3\u6dfb\u52a0\u4e00\u4e2a\u8bb0\u5f55\uff0c\u8bb0\u5f55\u503c\u8bbe\u7f6e\u6210 <code>username.github.io</code> \uff0c username\u66ff\u6362\u4e3a\u4f60\u7684\u7528\u6237\u540d\uff0c\u7136\u540e\u518d\u5230github\u91cc\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u3002\u8bb0\u5f97\u52fe\u9009\u4e0b\u9762\u7684\u5f3a\u5236https\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88ab\u63d0\u793a\u4e0d\u5b89\u5168\u4e86\u3002</p> <p>\u7a0d\u5fae\u7b49\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5728\u81ea\u5b9a\u4e49\u57df\u540d\u91cc\u8bbf\u95ee\u6211\u4eec\u7684\u9875\u9762\u4e86\u3002</p> <p>\u800c\u4e14\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5355\u72ec\u7684\u57df\u540d\uff0c\u53ea\u9700\u8981\u628a\u5bf9\u5e94\u7684\u57df\u540d\u7684\u8bb0\u5f55\u503c\u90fd\u6539\u4e3a <code>username.github.io</code> \uff0c\u7c7b\u578b\u4e3a <code>CNAME</code> \u7c7b\u578b\u3002</p>"},{"location":"misc/rndcfproblem/","title":"\u751f\u6210\u6307\u5b9a\u96be\u5ea6\u6570\u91cf\u7684\u968f\u673aCF\u9898\u76ee","text":""},{"location":"misc/rndcfproblem/#codeforces","title":"\u751f\u6210\u4efb\u610f\u6570\u91cf\u6307\u5b9a\u96be\u5ea6\u7684Codeforces\u9898\u76ee","text":"<p>\u539f\u6765\u8fd9\u4e48\u7b80\u5355\u54c8\u3002\u3002\u3002</p> <p>\u8ba9ai\u751f\u6210\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u6539\u4e86\u4e00\u4e0b\u3002\u3002\u3002</p> <pre><code>import requests\nimport random\n\n# \u5728\u8fd9\u91cc\u4fee\u6539\u9700\u8981\u7684\u7528\u6237\u540d\uff0crating \u533a\u95f4\uff0c\u9898\u76ee\u6570\u91cf\n\nmin_rating = 1400\nmax_rating = 1800\nhandles = ['Zhangwuji']\ncount = 5\n\ndef get_problems():  # \u83b7\u53d6\u9898\u76ee\u5217\u8868\n    url = \"https://codeforces.com/api/problemset.problems\"\n    res = requests.get(url)\n    if res.status_code == 200:\n        return res.json()['result']['problems']\n    else:\n        print(f\"Error: \u65e0\u6cd5\u83b7\u53d6\u9898\u76ee\u5217\u8868\")\n        return []\n\ndef get_solvedList(handles):  # \u83b7\u53d6\u5df2\u901a\u8fc7\u9898\u76ee\u5217\u8868\n    solved_problems = set()\n    for handle in handles:\n        url = f\"https://codeforces.com/api/user.status?handle={handle}\"\n        res = requests.get(url)\n        if res.status_code == 200:\n            x = res.json()['result']\n            for y in x:\n                if y['verdict'] == 'OK':  # \u53ea\u8bb0\u5f55\u901a\u8fc7\u7684\u9898\u76ee\n                    z = y['problem']\n                    solved_problems.add((z['contestId'], z['index']))\n        else:\n            print(f\"Error: \u65e0\u6cd5\u83b7\u53d6\u7528\u6237 {handle} \u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u8bf7\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u6b63\u786e\u3002\")\n    return solved_problems\n\nproblemset = get_problems()\nsolved_problems = get_solvedList(handles)\nproblemcount = len(problemset)  # \u9898\u76ee\u603b\u6570\n\ndef get_valid():\n    res=[]\n    for now in problemset:\n        rd = now['contestId']\n        id = now['index']\n        if 'rating' in now:\n            rt = now['rating']\n            if (rd,id) in solved_problems:\n                continue\n            if min_rating&lt;=rt&lt;=max_rating:\n                res.append(now)\n    return res\n\nvalidproblems = get_valid()\n\ndef gen_List(need):\n    return random.sample(validproblems,need)\n\ndef printproblems(problems):\n    print(f\"\\n\u829d\u58eb{len(problems)}\u4e2arating\u5728 [{min_rating}, {max_rating}] \u7684\u968f\u673a\u9898\u76ee\")\n    for x in problems:\n        rd = x['contestId']\n        id = x['index']\n        rt = x['rating']\n        name = f\"{rd}{id}\"\n        url = f\"https://codeforces.com/contest/{rd}/problem/{id}\"\n        print(f\"{name:7} {rt:5} {url}\")\n\nx = gen_List(count)\nprintproblems(x)\n</code></pre> <p>\u5509\u5509\uff0c\u641e\u8fd9\u79cd\u7eaf\u6d6a\u8d39\u65f6\u95f4\u5427\u3002\u3002\u3002</p> <p>\u867d\u7136\u633a\u597d\u73a9\u7684\u3002</p> <p>Duel \u8fd9\u4e2a\u7b97\u6cd5\u5355\u6311\u7f51\u7ad9\uff0c\u6628\u665a\u77e5\u9053\u7684\uff0c\uff0c\u611f\u89c9\u5f88\u4e0d\u9519\u3002\u6253\u7b97\u5728\u4e0a\u9762\u6bcf\u5929\u968f\u673a6\u4e2a\u9700\u8981\u7684\u96be\u5ea6\u7684\u9898\u76ee\u3002\u3002\u5982\u679c\u6709\u4e00\u4e2a\u4eba\u8ddf\u6211\u4e00\u8d77\u7ec3\uff0c\u53ef\u4ee5\u5728\u4e00\u6837\u7684\u623f\u95f4\uff0c\u90a3\u5c31\u4f1a\u6bcf\u5929\u5199\u4e00\u6837\u7684\u9898\u76ee\uff0c\u611f\u89c9\u4f1a\u633a\u4e0d\u9519\u7684\u3002\u3002\u3002</p> <p>\u5927\u5bb6\u65b0\u5e74\u5feb\u4e50\u3002\u795d\u5927\u5bb6\u8eab\u4f53\u5065\u5eb7\uff0c\u6280\u672f++\u3002</p>"},{"location":"misc/vscodesetting/","title":"win vscode\u914d\u7f6e","text":"<pre><code>{\n    \"clangd.path\": \"clangd\", // \u76f4\u63a5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\n    // Clangd \u8fd0\u884c\u53c2\u6570(\u5728\u7ec8\u7aef/\u547d\u4ee4\u884c\u8f93\u5165 clangd --help-list-hidden \u53ef\u67e5\u770b\u66f4\u591a)\n    \"clangd.arguments\": [\n        //  \"--all-scopes-completion\", // \u5168\u5c40\u8865\u5168(\u8865\u5168\u5efa\u8bae\u4f1a\u7ed9\u51fa\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e0d\u53ef\u89c1\u7684\u7d22\u5f15,\u63d2\u5165\u540e\u81ea\u52a8\u8865\u5145\u4f5c\u7528\u57df\u6807\u8bc6\u7b26),\u4f8b\u5982\u5728main()\u4e2d\u76f4\u63a5\u5199cout,\u5373\u4f7f\u6ca1\u6709`#include &lt;iostream&gt;`,\u4e5f\u4f1a\u7ed9\u51fa`std::cout`\u7684\u5efa\u8bae,\u914d\u5408\"--header-insertion=iwyu\",\u8fd8\u53ef\u81ea\u52a8\u63d2\u5165\u7f3a\u5931\u7684\u5934\u6587\u4ef6\n        \"--background-index\", // \u540e\u53f0\u5206\u6790\u5e76\u4fdd\u5b58\u7d22\u5f15\u6587\u4ef6\n        \"--clang-tidy\", // \u542f\u7528 Clang-Tidy \u4ee5\u63d0\u4f9b\u300c\u9759\u6001\u68c0\u67e5\u300d\uff0c\u4e0b\u9762\u8bbe\u7f6e clang tidy \u89c4\u5219\n        \"--clang-tidy-checks=performance-*, bugprone-*, misc-*, google-*, modernize-*, readability-*, portability-*\",\n        \"--compile-commands-dir=${workspaceFolder}/build/\", // \u7f16\u8bd1\u6570\u636e\u5e93(\u4f8b\u5982 compile_commands.json \u6587\u4ef6)\u7684\u76ee\u5f55\u4f4d\u7f6e\n        \"--completion-parse=auto\", // \u5f53 clangd \u51c6\u5907\u5c31\u7eea\u65f6\uff0c\u7528\u5b83\u6765\u5206\u6790\u5efa\u8bae\n        \"--completion-style=bundled\", // \u5efa\u8bae\u98ce\u683c\uff1a\u6253\u5305(\u91cd\u8f7d\u51fd\u6570\u53ea\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u5efa\u8bae);\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a detailed\n        // \"--query-driver=/usr/bin/clang++\", // MacOS \u4e0a\u9700\u8981\u8bbe\u5b9a clang \u7f16\u8bd1\u5668\u7684\u8def\u5f84\uff0chomebrew \u5b89\u88c5\u7684clang \u662f /usr/local/opt/llvm/bin/clang++\n        // \u542f\u7528\u914d\u7f6e\u6587\u4ef6(YAML\u683c\u5f0f)\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u662f\u5728\u9879\u76ee\u6587\u4ef6\u5939\u91cc\u7684\u201c.clangd\u201d,\u7528\u6237\u914d\u7f6e\u6587\u4ef6\u662f\u201cclangd/config.yaml\u201d,\u8be5\u6587\u4ef6\u6765\u81ea:Windows: %USERPROFILE%\\AppData\\Local || MacOS: ~/Library/Preferences/ || Others: $XDG_CONFIG_HOME, usually ~/.config\n        // \"--enable-config\",\n        \"--fallback-style=Webkit\", // \u9ed8\u8ba4\u683c\u5f0f\u5316\u98ce\u683c: \u5728\u6ca1\u627e\u5230 .clang-format \u6587\u4ef6\u65f6\u91c7\u7528,\u53ef\u7528\u7684\u6709 LLVM, Google, Chromium, Mozilla, Webkit, Microsoft, GNU\n        \"--function-arg-placeholders=false\", // \u8865\u5168\u51fd\u6570\u65f6\uff0c\u5c06\u4f1a\u7ed9\u53c2\u6570\u63d0\u4f9b\u5360\u4f4d\u7b26\uff0c\u952e\u5165\u540e\u6309 Tab \u53ef\u4ee5\u5207\u6362\u5230\u4e0b\u4e00\u5360\u4f4d\u7b26\uff0c\u4e43\u81f3\u51fd\u6570\u672b\n        //  \"--header-insertion-decorators\", // \u8f93\u5165\u5efa\u8bae\u4e2d\uff0c\u5df2\u5305\u542b\u5934\u6587\u4ef6\u7684\u9879\u4e0e\u8fd8\u672a\u5305\u542b\u5934\u6587\u4ef6\u7684\u9879\u4f1a\u4ee5\u5706\u70b9\u52a0\u4ee5\u533a\u5206\n        \"--header-insertion=never\", // \u63d2\u5165\u5efa\u8bae\u65f6\u81ea\u52a8\u5f15\u5165\u5934\u6587\u4ef6 iwyu [never,iwyu]\n        //  \"--include-cleaner-stdlib\", // \u4e3a\u6807\u51c6\u5e93\u5934\u6587\u4ef6\u542f\u7528\u6e05\u7406\u529f\u80fd(\u4e0d\u6210\u719f!!!)\n        // \"--log=verbose\", // \u8ba9 Clangd \u751f\u6210\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\n        \"--pch-storage=memory\", // pch \u4f18\u5316\u7684\u4f4d\u7f6e(Memory \u6216 Disk,\u524d\u8005\u4f1a\u589e\u52a0\u5185\u5b58\u5f00\u9500\uff0c\u4f46\u4f1a\u63d0\u5347\u6027\u80fd)\n        \"--pretty\", // \u8f93\u51fa\u7684 JSON \u6587\u4ef6\u66f4\u7f8e\u89c2\n        \"--ranking-model=decision_forest\", // \u5efa\u8bae\u7684\u6392\u5e8f\u65b9\u6848\uff1ahueristics (\u542f\u53d1\u5f0f), decision_forest (\u51b3\u7b56\u6811)\n        // \"--query-driver=C:\\\\Users\\\\11850\\\\scoop\\\\apps\\\\msys2\\\\2023-07-18\\\\mingw64\\\\bin\\\\g++*\", // windows\u4e0b\u7684mingw\u4f4d\u7f6e\n        \"-j=12\" // \u540c\u65f6\u5f00\u542f\u7684\u4efb\u52a1\u6570\u91cf\n    ],\n    // Clangd \u627e\u4e0d\u5230\u7f16\u8bd1\u6570\u636e\u5e93(\u4f8b\u5982 compile_flags.json \u6587\u4ef6)\u65f6\u91c7\u7528\u7684\u8bbe\u7f6e,\u7f3a\u9677\u662f\u4e0d\u80fd\u76f4\u63a5\u7d22\u5f15\u540c\u4e00\u9879\u76ee\u7684\u4e0d\u540c\u6587\u4ef6,\u53ea\u80fd\u5206\u6790\u7cfb\u7edf\u5934\u6587\u4ef6\u3001\u5f53\u524d\u6587\u4ef6\u548cinclude\u7684\u6587\u4ef6\n    \"clangd.fallbackFlags\": [\n        \"-std=c++23\",\n        \"-I\\\"C:/winlibs-x86_64-posix-seh-gcc-14.2.0-mingw-w64ucrt-12.0.0-r2/mingw64/include\\\"\",\n        \"--target=x86_64-w64-windows-gnu\" // \u9ed8\u8ba4\u4f7f\u7528window gcc(MinGW),\u5982\u679c\u4f60\u662flinux\uff0c\u5c31\u6539\u6210\"--target=x86_64-pc-linux-gnu\"\n    ],\n    \"clangd.onConfigChanged\": \"restart\", // \u91cd\u542f clangd \u65f6\u91cd\u8f7d\u914d\u7f6e,\u5177\u4f53\u65b9\u6cd5: F1 + Fn \u6253\u5f00\u547d\u4ee4\u9762\u677f\uff0c\u7136\u540e\u641c\u7d22\u201cclangd: restart\u201d\n    \"clangd.serverCompletionRanking\": true, // \u501f\u52a9\u7f51\u4e0a\u7684\u4fe1\u606f\u6392\u5e8f\u5efa\u8bae\n    \"clangd.detectExtensionConflicts\": true, // \u5f53\u5176\u5b83\u62d3\u5c55\u4e0e clangd \u51b2\u7a81\u65f6\u8b66\u544a\u5e76\u5efa\u8bae\u7981\u7528\n    \"editor.suggest.snippetsPreventQuickSuggestions\": true,\n    \"editor.mouseWheelZoom\": true,\n    \"editor.stickyScroll.enabled\": false,\n    \"explorer.confirmDelete\": false,\n    \"explorer.compactFolders\": false,\n    \"workbench.iconTheme\": \"material-icon-theme\",\n    \"editor.minimap.renderCharacters\": false,\n    \"editor.minimap.enabled\": false,\n    \"files.exclude\": {\n        \"**/.git\": false\n    },\n    \"workbench.settings.applyToAllProfiles\": [\n\n    ],\n    \"files.autoSaveDelay\": 500,\n    \"files.autoSave\": \"afterDelay\",\n    \"code-runner.runInTerminal\": true,\n    \"code-runner.saveFileBeforeRun\": true,\n    \"code-runner.executorMapByGlob\": {\n        \"pom.xml\": \"cd $dir &amp;&amp; mvn clean package\"\n    },\n    \"code-runner.executorMap\": {\n        \"javascript\": \"node\",\n        \"java\": \"cd $dir &amp;&amp; javac $fileName &amp;&amp; java $fileNameWithoutExt\",\n        \"c\": \"cd $dir &amp;&amp; gcc $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"zig\": \"zig run\",\n        // \"cpp\": \"cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        // \"cpp\": \"cd $dir &amp;&amp; g++ -std=c++20 $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"cpp\": \"cd $dir &amp;&amp; (if not exist .\\\\bin mkdir .\\\\bin) &amp;&amp; g++ -std=c++20 $fileName -o .\\\\bin\\\\$fileNameWithoutExt &amp;&amp; .\\\\bin\\\\$fileNameWithoutExt\",\n\n        \"objective-c\": \"cd $dir &amp;&amp; gcc -framework Cocoa $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"php\": \"php\",\n        \"python\": \"python -u\",\n        \"perl\": \"perl\",\n        \"perl6\": \"perl6\",\n        \"ruby\": \"ruby\",\n        \"go\": \"go run\",\n        \"lua\": \"lua\",\n        \"groovy\": \"groovy\",\n        \"powershell\": \"powershell -ExecutionPolicy ByPass -File\",\n        \"bat\": \"cmd /c\",\n        \"shellscript\": \"bash\",\n        \"fsharp\": \"fsi\",\n        \"csharp\": \"scriptcs\",\n        \"vbscript\": \"cscript //Nologo\",\n        \"typescript\": \"ts-node\",\n        \"coffeescript\": \"coffee\",\n        \"scala\": \"scala\",\n        \"swift\": \"swift\",\n        \"julia\": \"julia\",\n        \"crystal\": \"crystal\",\n        \"ocaml\": \"ocaml\",\n        \"r\": \"Rscript\",\n        \"applescript\": \"osascript\",\n        \"clojure\": \"lein exec\",\n        \"haxe\": \"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt\",\n        \"rust\": \"cd $dir &amp;&amp; rustc $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \"racket\": \"racket\",\n        \"scheme\": \"csi -script\",\n        \"ahk\": \"autohotkey\",\n        \"autoit\": \"autoit3\",\n        \"dart\": \"dart\",\n        \"pascal\": \"cd $dir &amp;&amp; fpc $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \"d\": \"cd $dir &amp;&amp; dmd $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \"haskell\": \"runghc\",\n        \"nim\": \"nim compile --verbosity:0 --hints:off --run\",\n        \"lisp\": \"sbcl --script\",\n        \"kit\": \"kitc --run\",\n        \"v\": \"v run\",\n        \"sass\": \"sass --style expanded\",\n        \"scss\": \"scss --style expanded\",\n        \"less\": \"cd $dir &amp;&amp; lessc $fileName $fileNameWithoutExt.css\",\n        \"FortranFreeForm\": \"cd $dir &amp;&amp; gfortran $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"fortran-modern\": \"cd $dir &amp;&amp; gfortran $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"fortran_fixed-form\": \"cd $dir &amp;&amp; gfortran $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"fortran\": \"cd $dir &amp;&amp; gfortran $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \"sml\": \"cd $dir &amp;&amp; sml $fileName\",\n        \"mojo\": \"mojo run\",\n        \"erlang\": \"escript\",\n        \"spwn\": \"spwn build\",\n        \"pkl\": \"cd $dir &amp;&amp; pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml\",\n        \"gleam\": \"gleam run -m $fileNameWithoutExt\"\n    },\n    \"terminal.integrated.defaultProfile.windows\": \"Command Prompt\",\n    \"code-runner.executorMapByFileExtension\": {\n\n        \".vb\": \"cd $dir &amp;&amp; vbc /nologo $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \".vbs\": \"cscript //Nologo\",\n        \".scala\": \"scala\",\n        \".jl\": \"julia\",\n        \".cr\": \"crystal\",\n        \".ml\": \"ocaml\",\n        \".zig\": \"zig run\",\n        \".exs\": \"elixir\",\n        \".hx\": \"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt\",\n        \".rkt\": \"racket\",\n        \".scm\": \"csi -script\",\n        \".ahk\": \"autohotkey\",\n        \".au3\": \"autoit3\",\n        \".kt\": \"cd $dir &amp;&amp; kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar &amp;&amp; java -jar $fileNameWithoutExt.jar\",\n        \".kts\": \"kotlinc -script\",\n        \".dart\": \"dart\",\n        \".pas\": \"cd $dir &amp;&amp; fpc $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \".pp\": \"cd $dir &amp;&amp; fpc $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \".d\": \"cd $dir &amp;&amp; dmd $fileName &amp;&amp; $dir$fileNameWithoutExt\",\n        \".hs\": \"runhaskell\",\n        \".nim\": \"nim compile --verbosity:0 --hints:off --run\",\n        \".csproj\": \"dotnet run --project\",\n        \".fsproj\": \"dotnet run --project\",\n        \".lisp\": \"sbcl --script\",\n        \".kit\": \"kitc --run\",\n        \".v\": \"v run\",\n        \".vsh\": \"v run\",\n        \".sass\": \"sass --style expanded\",\n        \".cu\": \"cd $dir &amp;&amp; nvcc $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",\n        \".ring\": \"ring\",\n        \".sml\": \"cd $dir &amp;&amp; sml $fileName\",\n        \".mojo\": \"mojo run\",\n        \".erl\": \"escript\",\n        \".spwn\": \"spwn build\",\n        \".pkl\": \"cd $dir &amp;&amp; pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml\",\n        \".gleam\": \"gleam run -m $fileNameWithoutExt\"\n    },\n    \"terminal.integrated.enableMultiLinePasteWarning\": \"never\",\n    \"C_Cpp.intelliSenseEngine\": \"disabled\",\n    \"security.workspace.trust.untrustedFiles\": \"open\",\n    \"window.commandCenter\": false,\n    \"window.menuBarVisibility\": \"compact\",\n    \"workbench.layoutControl.enabled\": false,\n    \"[python]\": {\n        \"editor.defaultFormatter\": \"eeyore.yapf\"\n    },\n    \"workbench.colorTheme\": \"Monokai\",\n}\n</code></pre>"},{"location":"misc/winrecovery/","title":"windows\u521b\u5efa\u6062\u590d\u5206\u533a","text":""},{"location":"misc/winrecovery/#windows","title":"windows\u91cd\u73b0\u521b\u5efa\u6062\u590d\u5206\u533a","text":"<p>\u6211\u662f\u4e4b\u524d\u60f3\u628aD\u76d8\u5220\u4e86\u53ea\u7559\u4e00\u4e2aC\u76d8\uff0c\u4f46\u662f\u6062\u590d\u5206\u533a\u5361\u5728\u4ed6\u4eec\u4e4b\u95f4\uff0c\u6240\u4ee5\u53ea\u80fd\u628a\u6062\u590d\u5206\u533a\u7ed9\u5220\u6389</p> <p>\u4f46\u662f\u53c8\u7a81\u7136\u60f3\u91cd\u7f6e\u7535\u8111\u4e86\uff0c\u6ca1\u6709\u6062\u590d\u5206\u533a\u7684\u8bdd\uff0c\u6574\u4e0d\u4e86\u3002</p> <p>\u53ef\u4ee5\u76f4\u63a5\u5728\u6062\u590d\u91cc\u91cd\u65b0\u5b89\u88c5\u4e00\u4e2awindows\uff0c</p> <p>\u7136\u540e\u6062\u590d\u5206\u533a\u5c31\u56de\u6765\u4e86\u3002\u3002\u3002\u6240\u4ee5\u4e0d\u8981\u5148\u5206\u76d8\uff0c\u4e0d\u7136\u6062\u590d\u5206\u533a\u4f1a\u5361\u5728c\u76d8\u548c\u5176\u4ed6\u76d8\u4e4b\u95f4\uff0c\u5c31\u5f88\u96be\u53d7\u3002</p> <p></p> <p>\u9009\u62e9\u8fd9\u4e2a\u7acb\u5373\u91cd\u65b0\u5b89\u88c5\u5c31\u53ef\u4ee5\uff0c\u53ef\u80fd\u8981\u591a\u7b49\u4e00\u4e0b\u3002</p> <p>\u91cd\u7f6e\u7535\u8111\u662f\u4e0d\u662f\u4f1a\u8ba9\u7535\u8111\u53d8\u5361\u6765\u7740\uff0c\u770b\u6709\u7684\u4eba\u8fd9\u6837\u8bf4\u3002\u6211\u5df2\u7ecf\u91cd\u7f6e\u8fc7\u4e94\u516d\u6b21\u4e86\u3002\u3002\u3002</p>"},{"location":"update/20250115/","title":"main","text":""},{"location":"update/20250115/#202533","title":"2025\u5e743\u67083\u65e5","text":"<p>\u6709\u7684\u535a\u5ba2\u4f1a\u4e0d\u663e\u793a\u6807\u9898\u76ee\u5f55\uff0c\u5c31\u662f\u53f3\u4fa7\u90a3\u4e2a\u4e1c\u897f\uff0c\u73b0\u5728\u611f\u89c9\u5927\u6982\u7387\u662f\u6807\u9898\u8bbe\u7f6e\u7684\u95ee\u9898\u3002</p> <p>\u5e94\u8be5\u662f\u4e0d\u80fd\u6709\u591a\u4e2a\u4e00\u7ea7\u6807\u9898\uff0c\u7136\u540e\u56db\u7ea7\u6807\u9898\u6216\u8005\u4e94\u7ea7\u6807\u9898\u4ee5\u4e0b\u5c31\u4e0d\u4f1a\u663e\u793a\u51fa\u6765\u4e86\u3002\u5927\u6982\u63a8\u6d4b\u7684\u3002</p> <p>\u5916\u89c2\u5565\u7684\u5176\u5b9e\u6ca1\u5fc5\u8981\u6298\u817e\u592a\u591a\u65f6\u95f4\uff0c\u4e3b\u8981\u8fd8\u662f\u575a\u6301\u5199\u535a\u5ba2\u548c\u5b66\u4e60\u4e1c\u897f\u3002</p> <p>\u73b0\u5728\u5df2\u7ecf\u662f\u575a\u6301\u5199\u4e86\u4e00\u4e9b\u5185\u5bb9\u4e86\uff0c\u4e14\u5bf9\u6211\u4f3c\u4e4e\u662f\u6709\u4e00\u4e9b\u5e2e\u52a9\u7684\uff0c\u867d\u7136\u73b0\u5728\u4f53\u73b0\u5f97\u8fd8\u4e0d\u591a\u3002\u5f04\u4e86\u535a\u5ba2\u4e4b\u540e\uff0c\u6211\u7ecf\u5e38\u662f\u7761\u524d\u5c31\u662f\u66f4\u65b0\u4e0b\u4e1c\u897f\uff0c\u7136\u540e\u4e0a\u5e8a\u4e86\u5728\u624b\u673a\u4e0a\u770b\u81ea\u5df1\u7684\u535a\u5ba2\u3002\ud83e\udd23\ud83e\udd23\ud83e\udd23</p>"},{"location":"update/20250115/#2025217","title":"2025\u5e742\u670817\u65e5","text":"<p>\u7ec8\u4e8e\u628a\u7f51\u9875\u7684\u56fe\u6807\u548c\u5b57\u4f53\u6539\u4e86\uff0c\u4e4b\u524d\u7684\u770b\u7740\u597d\u522b\u626d\u3002</p> <p>\u539f\u6765\u5f97\u628a\u4e1c\u897f\u90fd\u653e\u5230docs\u6587\u4ef6\u5939\uff0c\u6211\u4ee5\u4e3a\u6709\u7684\u5f97\u653e\u5230site\u4e0b\u7684/assets\u6765\u7740\u3002\u7ed3\u679c\u90fd\u662f\u653edoc\u3002</p> <p>\u7136\u540e\u56fe\u6807\u5b83\u662f\u5927\u6982\u4e0d\u652f\u6301.ico\u548c.jpg\uff0c\u53ea\u80fd\u652f\u6301.png\u3002\u3002\u3002</p> <p>\u5b57\u4f53\u6362\u6210\u4e86\u843d\u971e\u5b64\u9e5c\uff0c\u611f\u89c9\u975e\u5e38\u7684\u597d\u770b\u554a\u3002</p>"},{"location":"update/20250115/#2025215","title":"2025\u5e742\u670815\u65e5","text":"<p>\u6b63\u597d\u8ddd\u79bb\u6574\u8fd9\u4e2a\u535a\u5ba2\u4e00\u4e2a\u6708\u4e86\u54c8\uff0c\uff0c\uff0c\u867d\u7136\u6ca1\u53d1\u8fc7\u51e0\u7bc7\u3002\u3002\u3002\u4ee5\u540e\u80af\u5b9a\u4f1a\u591a\u591a\u53d1\u7684\u3002\u3002\u3002</p> <p>\u4eca\u5929\u4e70\u4e86\u4e00\u4e2a\u57df\u540d\uff0c\u7136\u540e\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u57df\u540d\u6765\u8bbf\u95ee\u535a\u5ba2\u4e86\uff0c\u7ec8\u4e8e\u4e0d\u7528\u52a0\u901f\u5668\u4e5f\u80fd\u968f\u65f6\u8bbf\u95ee\u4e86\u3002\u3002\u3002\u975e\u5e38\u7684\u723d\u554a\u3002\u800c\u4e14\u5f88\u7b80\u5355\uff0c\u53ea\u7528\u5728\u57df\u540d\u90a3\u6dfb\u52a0\u535a\u5ba2\u9875\u9762\u89e3\u6790\uff0c\u7136\u540e <code>github pages</code> \u91cc\u6dfb\u52a0 <code>custom domain</code> \u5c31\u884c\u4e86\u3002  </p> <p>\u66f4\u6539\u4e86\u5185\u5bb9\u63a8\u9001\u5230github\u4e4b\u540e\u53d1\u73b0\u9700\u8981\u518d\u91cd\u65b0\u5728github\u90a3\u586b\u5199\u57df\u540d\u3002\u3002\u3002\u6211\u8fd8\u5199\u4e86\u597d\u51e0\u6b21\u3002\u3002\u3002\u95ee\u4e86\u4e0bchat\uff0c\u53d1\u73b0\u662f\u56e0\u4e3a\u66f4\u65b0\u540egh-pages\u5206\u652f\u91cc\u6ca1\u6709CNAME\u6587\u4ef6\u4e86\uff0c\u56e0\u4e3a\u90e8\u7f72\u91cc\u7684\u4efb\u52a1\u6ca1\u6709\u8fd9\u4e2a\u3002</p> <p>\u53ea\u9700\u8981\u5728docs/\u91cc\u9762\u521b\u5efa\u4e00\u4e2aCNAME\u6587\u4ef6\uff0c\u7136\u540e\u628a\u57df\u540d\u5199\u8fdb\u53bb\u5c31\u884c\u4e86\u3002</p>"},{"location":"update/20250115/#2025115","title":"2025\u5e741\u670815\u65e5","text":"<p>\u670d\u4e86\uff0c\u4eca\u5929\u521a\u5f04\u8fd9\u4e2a\u535a\u5ba2\u561b\u3002</p> <p>\u641e\u4e86\u597d\u4e45\u554a\u3002\u3002\u3002</p> <p>\u9996\u5148\uff0c\u90a3\u4e2a\u56fe\u7247\u4e00\u76f4\u4e0d\u663e\u793a\uff0c\u641e\u4e86\u597d\u4e45\u3002</p> <p>\u7136\u540e\u6211\u653e\u5f03\u6323\u624e\u4e86</p> <p>\u6211\u89c2\u5bdf\u5230pages\u7684\u9875\u9762\u5e94\u8be5\u662f/site\u505a\u6839\u76ee\u5f55\u7684,\u6240\u4ee5\u628a\u56fe\u7247\u653e/site/assets/images/ \u5e94\u8be5\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u672c\u5730\u5c31\u4e0d\u80fd\u663e\u793a\u4e86\u5417\uff0c\u4e0d\u61c2\u3002\u800c\u4e14\u6211\u770b\u522b\u4eba\u4e5f\u6709\u521b\u65b0\u7684\u56fe\u7247\u76ee\u5f55\u7684\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u641e\u554a\uff08\uff09\u3002</p> <p>\u6709\u7a7a\u518d\u7814\u7a76\u3002\u3002\u3002</p> <p>\u7136\u540e\u53e6\u4e00\u4e2a\u786c\u63a7\u6211\u4e00\u4e24\u4e2a\u5c0f\u65f6\u7684\u662f\uff0c\u521a\u624d\u4e0a\u4f20\u7684\u4e00\u4e2a\u6587\u6863\u91cc\uff0c\u6709\u4e00\u4e2a\u4ee3\u7801\u5757\u4e0d\u6b63\u5e38\u663e\u793a\uff0c\u771f\u7684\u662f\u96be\u53d7\u6b7b\u6211\u4e86\u3002\u3002\u3002\u7136\u540e\u4e00\u76f4\u6539\u4e00\u76f4\u8bd5\u3002\u3002\u3002\u7ed3\u679c\u662f\u56e0\u4e3a\u4ee3\u7801\u5f00\u5934\u548c\u6700\u524d\u9762\uff0c\u7a7a\u4e86\u4e00\u4e2a\u7a7a\u683c\u3002\u3002\u3002\u670d\u4e86\u771f\u7684\u662f\u3002\u4ee5\u540e\u4e00\u5b9a\u5f97\u591a\u6ce8\u610f</p>"},{"location":"update/20250115/#_1","title":"\u53d1\u5e03\u535a\u5ba2","text":"<p>\u5728mkdocs\u91cc\u7f16\u8f91\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5728docs\u91cc\u67d0\u4e2a\u8def\u5f84\u521b\u5efa\u6587\u4ef6\uff0c\u5199\u597d\u76f4\u63a5<code>git push</code>\u7b49\u5f85\u5237\u65b0\u5373\u53ef\uff0c\u4e00\u822c\u4e00\u5206\u949f\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u4e2a\u535a\u5ba2\u6bd4hexo\u535a\u5ba2\u65b9\u4fbf\uff0c\u800c\u4e14\u754c\u9762\u4e5f\u633a\u4e0d\u9519\uff0c\u6211\u4e4b\u524d\u4e00\u76f4\u60f3\u6574\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u770b\u522b\u4eba\u7684\u662f\u8fd9\u6837\u5f88\u559c\u6b22\u3002</p>"},{"location":"update/20250115/#_2","title":"\u60f3\u4f18\u5316","text":"<p>1.\u60f3\u628a\u51e0\u4e2a\u5206\u7c7b\u653e\u5230\u9876\u90e8\uff0c\u7136\u540e\u5176\u4ed6\u9009\u9879\u4f4d\u7f6e\u4e0d\u53d8\u3002\u8fd9\u6837\u4f1a\u7a0d\u5fae\u597d\u770b\u4e00\u70b9</p> <p>2.\u770b\u770b\u600e\u4e48\u7f8e\u5316\u4e00\u4e0b\u4ee3\u7801\u5757\u5427\u3002</p> <p>3.\u7814\u7a76\u600e\u4e48\u624d\u80fd\u5728\u9875\u9762\u4e2d\u663e\u793a\u56fe\u7247\u3002</p> <p>\u4f46\u662f\u6709\u4e00\u8bf4\u4e00\u76ee\u524d\u8fd8\u662f\u5c3d\u5feb\u5237\u9898\uff0c\u6700\u8fd1\u90fd\u6ca1\u600e\u4e48\u5237\u3002</p>"}]}